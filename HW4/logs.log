2024-12-08 16:20:20,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:20:20,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:20:20,722:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:20:20,723:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:21:19,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:21:19,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:21:19,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:21:19,318:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:22:36,390:INFO:PyCaret ClassificationExperiment
2024-12-08 16:22:36,391:INFO:Logging name: clf-default-name
2024-12-08 16:22:36,391:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-08 16:22:36,391:INFO:version 3.3.2
2024-12-08 16:22:36,391:INFO:Initializing setup()
2024-12-08 16:22:36,391:INFO:self.USI: ad4f
2024-12-08 16:22:36,391:INFO:self._variable_keys: {'exp_name_log', 'y', 'target_param', 'gpu_param', 'X', 'USI', 'fold_groups_param', 'y_test', '_ml_usecase', 'is_multiclass', '_available_plots', 'y_train', 'memory', 'exp_id', 'log_plots_param', 'gpu_n_jobs_param', 'fold_shuffle_param', 'X_test', 'fix_imbalance', 'idx', 'pipeline', 'fold_generator', 'data', 'X_train', 'seed', 'n_jobs_param', 'html_param', 'logging_param'}
2024-12-08 16:22:36,391:INFO:Checking environment
2024-12-08 16:22:36,391:INFO:python_version: 3.10.13
2024-12-08 16:22:36,391:INFO:python_build: ('main', 'Mar 20 2024 16:49:28')
2024-12-08 16:22:36,391:INFO:machine: arm64
2024-12-08 16:22:36,391:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-12-08 16:22:36,391:INFO:Memory: svmem(total=8589934592, available=2254635008, percent=73.8, used=3609427968, free=46809088, active=2220589056, inactive=2195996672, wired=1388838912)
2024-12-08 16:22:36,391:INFO:Physical Core: 8
2024-12-08 16:22:36,392:INFO:Logical Core: 8
2024-12-08 16:22:36,392:INFO:Checking libraries
2024-12-08 16:22:36,392:INFO:System:
2024-12-08 16:22:36,392:INFO:    python: 3.10.13 (main, Mar 20 2024, 16:49:28) [Clang 14.0.3 (clang-1403.0.22.14.1)]
2024-12-08 16:22:36,392:INFO:executable: /Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/bin/python
2024-12-08 16:22:36,392:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-12-08 16:22:36,392:INFO:PyCaret required dependencies:
2024-12-08 16:36:02,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:36:02,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:36:02,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:36:02,077:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:40:40,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:40:40,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:40:40,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:40:40,767:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:40:50,056:INFO:PyCaret ClassificationExperiment
2024-12-08 16:40:50,057:INFO:Logging name: clf-default-name
2024-12-08 16:40:50,057:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-08 16:40:50,057:INFO:version 3.3.2
2024-12-08 16:40:50,057:INFO:Initializing setup()
2024-12-08 16:40:50,057:INFO:self.USI: 68d5
2024-12-08 16:40:50,057:INFO:self._variable_keys: {'fold_generator', 'USI', 'logging_param', 'seed', 'X', 'target_param', 'gpu_param', 'X_test', 'n_jobs_param', '_ml_usecase', 'y', 'y_test', 'html_param', 'is_multiclass', 'data', 'fix_imbalance', 'fold_groups_param', 'idx', 'exp_id', 'gpu_n_jobs_param', 'X_train', 'log_plots_param', 'exp_name_log', 'fold_shuffle_param', '_available_plots', 'memory', 'pipeline', 'y_train'}
2024-12-08 16:40:50,057:INFO:Checking environment
2024-12-08 16:40:50,057:INFO:python_version: 3.10.13
2024-12-08 16:40:50,058:INFO:python_build: ('main', 'Mar 20 2024 16:49:28')
2024-12-08 16:40:50,058:INFO:machine: arm64
2024-12-08 16:40:50,058:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-12-08 16:40:50,058:INFO:Memory: svmem(total=8589934592, available=1942159360, percent=77.4, used=3276914688, free=67895296, active=1888534528, inactive=1871511552, wired=1388380160)
2024-12-08 16:40:50,058:INFO:Physical Core: 8
2024-12-08 16:40:50,058:INFO:Logical Core: 8
2024-12-08 16:40:50,058:INFO:Checking libraries
2024-12-08 16:40:50,058:INFO:System:
2024-12-08 16:40:50,058:INFO:    python: 3.10.13 (main, Mar 20 2024, 16:49:28) [Clang 14.0.3 (clang-1403.0.22.14.1)]
2024-12-08 16:40:50,058:INFO:executable: /Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/bin/python
2024-12-08 16:40:50,058:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-12-08 16:40:50,058:INFO:PyCaret required dependencies:
2024-12-08 16:44:20,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:44:20,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:44:20,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:44:20,670:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 16:44:24,653:INFO:PyCaret ClassificationExperiment
2024-12-08 16:44:24,654:INFO:Logging name: clf-default-name
2024-12-08 16:44:24,654:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-08 16:44:24,654:INFO:version 3.3.2
2024-12-08 16:44:24,654:INFO:Initializing setup()
2024-12-08 16:44:24,654:INFO:self.USI: 4183
2024-12-08 16:44:24,654:INFO:self._variable_keys: {'fold_groups_param', 'X', 'log_plots_param', 'memory', '_available_plots', 'seed', 'data', 'y', 'X_test', 'fold_shuffle_param', 'pipeline', 'n_jobs_param', 'html_param', 'exp_name_log', 'y_train', 'gpu_param', 'X_train', 'USI', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'fix_imbalance', 'target_param', 'y_test', 'fold_generator', 'logging_param', '_ml_usecase', 'exp_id'}
2024-12-08 16:44:24,654:INFO:Checking environment
2024-12-08 16:44:24,654:INFO:python_version: 3.10.13
2024-12-08 16:44:24,654:INFO:python_build: ('main', 'Mar 20 2024 16:49:28')
2024-12-08 16:44:24,654:INFO:machine: arm64
2024-12-08 16:44:24,654:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-12-08 16:44:24,654:INFO:Memory: svmem(total=8589934592, available=1978318848, percent=77.0, used=3330424832, free=56770560, active=1940488192, inactive=1859469312, wired=1389936640)
2024-12-08 16:44:24,654:INFO:Physical Core: 8
2024-12-08 16:44:24,655:INFO:Logical Core: 8
2024-12-08 16:44:24,655:INFO:Checking libraries
2024-12-08 16:44:24,655:INFO:System:
2024-12-08 16:44:24,655:INFO:    python: 3.10.13 (main, Mar 20 2024, 16:49:28) [Clang 14.0.3 (clang-1403.0.22.14.1)]
2024-12-08 16:44:24,655:INFO:executable: /Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/bin/python
2024-12-08 16:44:24,655:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-12-08 16:44:24,655:INFO:PyCaret required dependencies:
2024-12-08 16:44:24,938:INFO:                 pip: 23.0.1
2024-12-08 16:44:24,938:INFO:          setuptools: 65.5.0
2024-12-08 16:44:24,938:INFO:             pycaret: 3.3.2
2024-12-08 16:44:24,938:INFO:             IPython: 8.30.0
2024-12-08 16:44:24,938:INFO:          ipywidgets: 8.1.5
2024-12-08 16:44:24,938:INFO:                tqdm: 4.67.1
2024-12-08 16:44:24,938:INFO:               numpy: 1.26.4
2024-12-08 16:44:24,938:INFO:              pandas: 2.1.4
2024-12-08 16:44:24,938:INFO:              jinja2: 3.1.4
2024-12-08 16:44:24,938:INFO:               scipy: 1.11.4
2024-12-08 16:44:24,938:INFO:              joblib: 1.3.2
2024-12-08 16:44:24,938:INFO:             sklearn: 1.4.2
2024-12-08 16:44:24,938:INFO:                pyod: 2.0.2
2024-12-08 16:44:24,938:INFO:            imblearn: 0.12.4
2024-12-08 16:44:24,938:INFO:   category_encoders: 2.6.4
2024-12-08 16:44:24,938:INFO:            lightgbm: 4.5.0
2024-12-08 16:44:24,939:INFO:               numba: 0.60.0
2024-12-08 16:44:24,939:INFO:            requests: 2.32.3
2024-12-08 16:44:24,939:INFO:          matplotlib: 3.7.5
2024-12-08 16:44:24,939:INFO:          scikitplot: 0.3.7
2024-12-08 16:44:24,939:INFO:         yellowbrick: 1.5
2024-12-08 16:44:24,939:INFO:              plotly: 5.24.1
2024-12-08 16:44:24,939:INFO:    plotly-resampler: Not installed
2024-12-08 16:44:24,939:INFO:             kaleido: 0.2.1
2024-12-08 16:44:24,939:INFO:           schemdraw: 0.15
2024-12-08 16:44:24,939:INFO:         statsmodels: 0.14.4
2024-12-08 16:44:24,939:INFO:              sktime: 0.26.0
2024-12-08 16:44:24,939:INFO:               tbats: 1.1.3
2024-12-08 16:44:24,939:INFO:            pmdarima: 2.0.4
2024-12-08 16:44:24,939:INFO:              psutil: 6.1.0
2024-12-08 16:44:24,939:INFO:          markupsafe: 3.0.2
2024-12-08 16:44:24,939:INFO:             pickle5: Not installed
2024-12-08 16:44:24,939:INFO:         cloudpickle: 3.1.0
2024-12-08 16:44:24,939:INFO:         deprecation: 2.1.0
2024-12-08 16:44:24,939:INFO:              xxhash: 3.5.0
2024-12-08 16:44:24,939:INFO:           wurlitzer: 3.1.1
2024-12-08 16:44:24,939:INFO:PyCaret optional dependencies:
2024-12-08 16:44:24,950:INFO:                shap: Not installed
2024-12-08 16:44:24,951:INFO:           interpret: Not installed
2024-12-08 16:44:24,951:INFO:                umap: Not installed
2024-12-08 16:44:24,951:INFO:     ydata_profiling: Not installed
2024-12-08 16:44:24,951:INFO:  explainerdashboard: Not installed
2024-12-08 16:44:24,951:INFO:             autoviz: Not installed
2024-12-08 16:44:24,951:INFO:           fairlearn: Not installed
2024-12-08 16:44:24,951:INFO:          deepchecks: Not installed
2024-12-08 16:44:24,951:INFO:             xgboost: Not installed
2024-12-08 16:44:24,951:INFO:            catboost: Not installed
2024-12-08 16:44:24,951:INFO:              kmodes: Not installed
2024-12-08 16:44:24,951:INFO:             mlxtend: Not installed
2024-12-08 16:44:24,951:INFO:       statsforecast: Not installed
2024-12-08 16:44:24,951:INFO:        tune_sklearn: Not installed
2024-12-08 16:44:24,951:INFO:                 ray: Not installed
2024-12-08 16:44:24,951:INFO:            hyperopt: Not installed
2024-12-08 16:44:24,951:INFO:              optuna: Not installed
2024-12-08 16:44:24,951:INFO:               skopt: Not installed
2024-12-08 16:44:24,951:INFO:              mlflow: Not installed
2024-12-08 16:44:24,951:INFO:              gradio: Not installed
2024-12-08 16:44:24,951:INFO:             fastapi: Not installed
2024-12-08 16:44:24,951:INFO:             uvicorn: Not installed
2024-12-08 16:44:24,951:INFO:              m2cgen: Not installed
2024-12-08 16:44:24,951:INFO:           evidently: Not installed
2024-12-08 16:44:24,951:INFO:               fugue: Not installed
2024-12-08 16:44:24,951:INFO:           streamlit: Not installed
2024-12-08 16:44:24,951:INFO:             prophet: Not installed
2024-12-08 16:44:24,951:INFO:None
2024-12-08 16:44:24,951:INFO:Set up data.
2024-12-08 16:44:24,955:INFO:Set up folding strategy.
2024-12-08 16:44:24,955:INFO:Set up train/test split.
2024-12-08 16:44:25,185:INFO:Set up index.
2024-12-08 16:44:25,186:INFO:Assigning column types.
2024-12-08 16:44:25,190:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-08 16:44:25,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 16:44:25,236:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 16:44:25,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,279:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 16:44:25,279:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 16:44:25,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,291:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-08 16:44:25,311:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 16:44:25,322:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,322:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,342:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 16:44:25,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,354:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-08 16:44:25,384:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,417:INFO:Preparing preprocessing pipeline...
2024-12-08 16:44:25,418:INFO:Set up simple imputation.
2024-12-08 16:44:25,420:INFO:Set up encoding of ordinal features.
2024-12-08 16:44:25,420:INFO:Set up encoding of categorical features.
2024-12-08 16:44:25,457:INFO:Finished creating preprocessing pipeline.
2024-12-08 16:44:25,465:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/ly/r3w75pz12l9_ncftrb2dwt4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['SibSp', 'Parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerW...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Age', 'Fare'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'Fare'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-12-08 16:44:25,465:INFO:Creating final display dataframe.
2024-12-08 16:44:25,562:INFO:Setup _display_container:                     Description             Value
0                    Session id              6383
1                        Target          Survived
2                   Target type            Binary
3           Original data shape          (891, 7)
4        Transformed data shape          (891, 9)
5   Transformed train set shape          (623, 9)
6    Transformed test set shape          (268, 9)
7              Numeric features                 2
8          Categorical features                 4
9      Rows with missing values             19.9%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              4183
2024-12-08 16:44:25,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,633:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 16:44:25,634:INFO:setup() successfully completed in 0.98s...............
2024-12-08 16:44:29,020:INFO:Initializing compare_models()
2024-12-08 16:44:29,021:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=16, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 16, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-08 16:44:29,021:INFO:Checking exceptions
2024-12-08 16:44:29,027:INFO:Preparing display monitor
2024-12-08 16:44:29,083:INFO:Initializing Logistic Regression
2024-12-08 16:44:29,083:INFO:Total runtime is 2.8332074483235676e-06 minutes
2024-12-08 16:44:29,088:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:29,089:INFO:Initializing create_model()
2024-12-08 16:44:29,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:29,089:INFO:Checking exceptions
2024-12-08 16:44:29,089:INFO:Importing libraries
2024-12-08 16:44:29,089:INFO:Copying training dataset
2024-12-08 16:44:29,095:INFO:Defining folds
2024-12-08 16:44:29,096:INFO:Declaring metric variables
2024-12-08 16:44:29,098:INFO:Importing untrained model
2024-12-08 16:44:29,101:INFO:Logistic Regression Imported successfully
2024-12-08 16:44:29,104:INFO:Starting cross validation
2024-12-08 16:44:29,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:32,560:INFO:Calculating mean and std
2024-12-08 16:44:32,564:INFO:Creating metrics dataframe
2024-12-08 16:44:32,567:INFO:Uploading results into container
2024-12-08 16:44:32,568:INFO:Uploading model into container now
2024-12-08 16:44:32,568:INFO:_master_model_container: 1
2024-12-08 16:44:32,568:INFO:_display_container: 2
2024-12-08 16:44:32,568:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 16:44:32,569:INFO:create_model() successfully completed......................................
2024-12-08 16:44:32,621:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:32,621:INFO:Creating metrics dataframe
2024-12-08 16:44:32,624:INFO:Initializing K Neighbors Classifier
2024-12-08 16:44:32,624:INFO:Total runtime is 0.05901771386464437 minutes
2024-12-08 16:44:32,626:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:32,626:INFO:Initializing create_model()
2024-12-08 16:44:32,626:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:32,626:INFO:Checking exceptions
2024-12-08 16:44:32,626:INFO:Importing libraries
2024-12-08 16:44:32,626:INFO:Copying training dataset
2024-12-08 16:44:32,627:INFO:Defining folds
2024-12-08 16:44:32,627:INFO:Declaring metric variables
2024-12-08 16:44:32,629:INFO:Importing untrained model
2024-12-08 16:44:32,630:INFO:K Neighbors Classifier Imported successfully
2024-12-08 16:44:32,634:INFO:Starting cross validation
2024-12-08 16:44:32,635:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:32,844:INFO:Calculating mean and std
2024-12-08 16:44:32,845:INFO:Creating metrics dataframe
2024-12-08 16:44:32,846:INFO:Uploading results into container
2024-12-08 16:44:32,846:INFO:Uploading model into container now
2024-12-08 16:44:32,847:INFO:_master_model_container: 2
2024-12-08 16:44:32,847:INFO:_display_container: 2
2024-12-08 16:44:32,847:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 16:44:32,847:INFO:create_model() successfully completed......................................
2024-12-08 16:44:32,887:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:32,887:INFO:Creating metrics dataframe
2024-12-08 16:44:32,890:INFO:Initializing Naive Bayes
2024-12-08 16:44:32,890:INFO:Total runtime is 0.06345361471176147 minutes
2024-12-08 16:44:32,892:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:32,892:INFO:Initializing create_model()
2024-12-08 16:44:32,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:32,892:INFO:Checking exceptions
2024-12-08 16:44:32,892:INFO:Importing libraries
2024-12-08 16:44:32,892:INFO:Copying training dataset
2024-12-08 16:44:32,894:INFO:Defining folds
2024-12-08 16:44:32,894:INFO:Declaring metric variables
2024-12-08 16:44:32,895:INFO:Importing untrained model
2024-12-08 16:44:32,896:INFO:Naive Bayes Imported successfully
2024-12-08 16:44:32,899:INFO:Starting cross validation
2024-12-08 16:44:32,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:33,053:INFO:Calculating mean and std
2024-12-08 16:44:33,054:INFO:Creating metrics dataframe
2024-12-08 16:44:33,055:INFO:Uploading results into container
2024-12-08 16:44:33,055:INFO:Uploading model into container now
2024-12-08 16:44:33,055:INFO:_master_model_container: 3
2024-12-08 16:44:33,055:INFO:_display_container: 2
2024-12-08 16:44:33,055:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 16:44:33,055:INFO:create_model() successfully completed......................................
2024-12-08 16:44:33,096:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:33,096:INFO:Creating metrics dataframe
2024-12-08 16:44:33,100:INFO:Initializing Decision Tree Classifier
2024-12-08 16:44:33,100:INFO:Total runtime is 0.06694398323694865 minutes
2024-12-08 16:44:33,102:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:33,102:INFO:Initializing create_model()
2024-12-08 16:44:33,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:33,102:INFO:Checking exceptions
2024-12-08 16:44:33,102:INFO:Importing libraries
2024-12-08 16:44:33,102:INFO:Copying training dataset
2024-12-08 16:44:33,104:INFO:Defining folds
2024-12-08 16:44:33,104:INFO:Declaring metric variables
2024-12-08 16:44:33,106:INFO:Importing untrained model
2024-12-08 16:44:33,107:INFO:Decision Tree Classifier Imported successfully
2024-12-08 16:44:33,110:INFO:Starting cross validation
2024-12-08 16:44:33,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:33,249:INFO:Calculating mean and std
2024-12-08 16:44:33,250:INFO:Creating metrics dataframe
2024-12-08 16:44:33,251:INFO:Uploading results into container
2024-12-08 16:44:33,251:INFO:Uploading model into container now
2024-12-08 16:44:33,251:INFO:_master_model_container: 4
2024-12-08 16:44:33,251:INFO:_display_container: 2
2024-12-08 16:44:33,251:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best')
2024-12-08 16:44:33,251:INFO:create_model() successfully completed......................................
2024-12-08 16:44:33,290:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:33,290:INFO:Creating metrics dataframe
2024-12-08 16:44:33,294:INFO:Initializing SVM - Linear Kernel
2024-12-08 16:44:33,294:INFO:Total runtime is 0.07017596562703451 minutes
2024-12-08 16:44:33,295:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:33,296:INFO:Initializing create_model()
2024-12-08 16:44:33,296:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:33,296:INFO:Checking exceptions
2024-12-08 16:44:33,296:INFO:Importing libraries
2024-12-08 16:44:33,296:INFO:Copying training dataset
2024-12-08 16:44:33,298:INFO:Defining folds
2024-12-08 16:44:33,298:INFO:Declaring metric variables
2024-12-08 16:44:33,300:INFO:Importing untrained model
2024-12-08 16:44:33,301:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 16:44:33,305:INFO:Starting cross validation
2024-12-08 16:44:33,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:33,459:INFO:Calculating mean and std
2024-12-08 16:44:33,459:INFO:Creating metrics dataframe
2024-12-08 16:44:33,460:INFO:Uploading results into container
2024-12-08 16:44:33,461:INFO:Uploading model into container now
2024-12-08 16:44:33,461:INFO:_master_model_container: 5
2024-12-08 16:44:33,461:INFO:_display_container: 2
2024-12-08 16:44:33,461:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 16:44:33,461:INFO:create_model() successfully completed......................................
2024-12-08 16:44:33,501:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:33,501:INFO:Creating metrics dataframe
2024-12-08 16:44:33,506:INFO:Initializing Ridge Classifier
2024-12-08 16:44:33,506:INFO:Total runtime is 0.07370880047480266 minutes
2024-12-08 16:44:33,507:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:33,507:INFO:Initializing create_model()
2024-12-08 16:44:33,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:33,507:INFO:Checking exceptions
2024-12-08 16:44:33,507:INFO:Importing libraries
2024-12-08 16:44:33,508:INFO:Copying training dataset
2024-12-08 16:44:33,510:INFO:Defining folds
2024-12-08 16:44:33,510:INFO:Declaring metric variables
2024-12-08 16:44:33,511:INFO:Importing untrained model
2024-12-08 16:44:33,513:INFO:Ridge Classifier Imported successfully
2024-12-08 16:44:33,516:INFO:Starting cross validation
2024-12-08 16:44:33,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:33,659:INFO:Calculating mean and std
2024-12-08 16:44:33,660:INFO:Creating metrics dataframe
2024-12-08 16:44:33,661:INFO:Uploading results into container
2024-12-08 16:44:33,661:INFO:Uploading model into container now
2024-12-08 16:44:33,661:INFO:_master_model_container: 6
2024-12-08 16:44:33,661:INFO:_display_container: 2
2024-12-08 16:44:33,661:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001)
2024-12-08 16:44:33,661:INFO:create_model() successfully completed......................................
2024-12-08 16:44:33,700:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:33,700:INFO:Creating metrics dataframe
2024-12-08 16:44:33,704:INFO:Initializing Random Forest Classifier
2024-12-08 16:44:33,704:INFO:Total runtime is 0.0770142952601115 minutes
2024-12-08 16:44:33,706:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:33,706:INFO:Initializing create_model()
2024-12-08 16:44:33,706:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:33,706:INFO:Checking exceptions
2024-12-08 16:44:33,706:INFO:Importing libraries
2024-12-08 16:44:33,707:INFO:Copying training dataset
2024-12-08 16:44:33,708:INFO:Defining folds
2024-12-08 16:44:33,708:INFO:Declaring metric variables
2024-12-08 16:44:33,710:INFO:Importing untrained model
2024-12-08 16:44:33,711:INFO:Random Forest Classifier Imported successfully
2024-12-08 16:44:33,714:INFO:Starting cross validation
2024-12-08 16:44:33,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:34,135:INFO:Calculating mean and std
2024-12-08 16:44:34,135:INFO:Creating metrics dataframe
2024-12-08 16:44:34,136:INFO:Uploading results into container
2024-12-08 16:44:34,137:INFO:Uploading model into container now
2024-12-08 16:44:34,137:INFO:_master_model_container: 7
2024-12-08 16:44:34,137:INFO:_display_container: 2
2024-12-08 16:44:34,137:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False)
2024-12-08 16:44:34,137:INFO:create_model() successfully completed......................................
2024-12-08 16:44:34,176:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:34,177:INFO:Creating metrics dataframe
2024-12-08 16:44:34,180:INFO:Initializing Quadratic Discriminant Analysis
2024-12-08 16:44:34,180:INFO:Total runtime is 0.08495566447575888 minutes
2024-12-08 16:44:34,182:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:34,182:INFO:Initializing create_model()
2024-12-08 16:44:34,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:34,182:INFO:Checking exceptions
2024-12-08 16:44:34,182:INFO:Importing libraries
2024-12-08 16:44:34,182:INFO:Copying training dataset
2024-12-08 16:44:34,184:INFO:Defining folds
2024-12-08 16:44:34,184:INFO:Declaring metric variables
2024-12-08 16:44:34,185:INFO:Importing untrained model
2024-12-08 16:44:34,187:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 16:44:34,189:INFO:Starting cross validation
2024-12-08 16:44:34,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:34,278:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,278:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,282:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,286:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,290:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,294:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,296:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,303:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,330:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,330:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:34,355:INFO:Calculating mean and std
2024-12-08 16:44:34,356:INFO:Creating metrics dataframe
2024-12-08 16:44:34,357:INFO:Uploading results into container
2024-12-08 16:44:34,357:INFO:Uploading model into container now
2024-12-08 16:44:34,357:INFO:_master_model_container: 8
2024-12-08 16:44:34,357:INFO:_display_container: 2
2024-12-08 16:44:34,357:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 16:44:34,357:INFO:create_model() successfully completed......................................
2024-12-08 16:44:34,397:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:34,397:INFO:Creating metrics dataframe
2024-12-08 16:44:34,401:INFO:Initializing Ada Boost Classifier
2024-12-08 16:44:34,401:INFO:Total runtime is 0.08863689899444581 minutes
2024-12-08 16:44:34,403:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:34,403:INFO:Initializing create_model()
2024-12-08 16:44:34,404:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:34,404:INFO:Checking exceptions
2024-12-08 16:44:34,404:INFO:Importing libraries
2024-12-08 16:44:34,404:INFO:Copying training dataset
2024-12-08 16:44:34,406:INFO:Defining folds
2024-12-08 16:44:34,406:INFO:Declaring metric variables
2024-12-08 16:44:34,408:INFO:Importing untrained model
2024-12-08 16:44:34,409:INFO:Ada Boost Classifier Imported successfully
2024-12-08 16:44:34,412:INFO:Starting cross validation
2024-12-08 16:44:34,413:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:34,486:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,487:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,488:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,489:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,496:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,500:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,501:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,505:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,591:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,600:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:34,655:INFO:Calculating mean and std
2024-12-08 16:44:34,655:INFO:Creating metrics dataframe
2024-12-08 16:44:34,656:INFO:Uploading results into container
2024-12-08 16:44:34,657:INFO:Uploading model into container now
2024-12-08 16:44:34,657:INFO:_master_model_container: 9
2024-12-08 16:44:34,657:INFO:_display_container: 2
2024-12-08 16:44:34,657:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383)
2024-12-08 16:44:34,657:INFO:create_model() successfully completed......................................
2024-12-08 16:44:34,697:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:34,697:INFO:Creating metrics dataframe
2024-12-08 16:44:34,701:INFO:Initializing Gradient Boosting Classifier
2024-12-08 16:44:34,701:INFO:Total runtime is 0.09363374710083008 minutes
2024-12-08 16:44:34,703:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:34,703:INFO:Initializing create_model()
2024-12-08 16:44:34,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:34,703:INFO:Checking exceptions
2024-12-08 16:44:34,703:INFO:Importing libraries
2024-12-08 16:44:34,703:INFO:Copying training dataset
2024-12-08 16:44:34,705:INFO:Defining folds
2024-12-08 16:44:34,705:INFO:Declaring metric variables
2024-12-08 16:44:34,706:INFO:Importing untrained model
2024-12-08 16:44:34,707:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 16:44:34,710:INFO:Starting cross validation
2024-12-08 16:44:34,710:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:34,979:INFO:Calculating mean and std
2024-12-08 16:44:34,980:INFO:Creating metrics dataframe
2024-12-08 16:44:34,981:INFO:Uploading results into container
2024-12-08 16:44:34,981:INFO:Uploading model into container now
2024-12-08 16:44:34,981:INFO:_master_model_container: 10
2024-12-08 16:44:34,981:INFO:_display_container: 2
2024-12-08 16:44:34,981:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 16:44:34,981:INFO:create_model() successfully completed......................................
2024-12-08 16:44:35,020:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:35,020:INFO:Creating metrics dataframe
2024-12-08 16:44:35,024:INFO:Initializing Linear Discriminant Analysis
2024-12-08 16:44:35,024:INFO:Total runtime is 0.09901843070983887 minutes
2024-12-08 16:44:35,026:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:35,026:INFO:Initializing create_model()
2024-12-08 16:44:35,026:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:35,026:INFO:Checking exceptions
2024-12-08 16:44:35,026:INFO:Importing libraries
2024-12-08 16:44:35,026:INFO:Copying training dataset
2024-12-08 16:44:35,027:INFO:Defining folds
2024-12-08 16:44:35,027:INFO:Declaring metric variables
2024-12-08 16:44:35,029:INFO:Importing untrained model
2024-12-08 16:44:35,030:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 16:44:35,032:INFO:Starting cross validation
2024-12-08 16:44:35,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:35,183:INFO:Calculating mean and std
2024-12-08 16:44:35,183:INFO:Creating metrics dataframe
2024-12-08 16:44:35,184:INFO:Uploading results into container
2024-12-08 16:44:35,185:INFO:Uploading model into container now
2024-12-08 16:44:35,185:INFO:_master_model_container: 11
2024-12-08 16:44:35,185:INFO:_display_container: 2
2024-12-08 16:44:35,185:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 16:44:35,185:INFO:create_model() successfully completed......................................
2024-12-08 16:44:35,225:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:35,225:INFO:Creating metrics dataframe
2024-12-08 16:44:35,229:INFO:Initializing Extra Trees Classifier
2024-12-08 16:44:35,230:INFO:Total runtime is 0.10244139830271404 minutes
2024-12-08 16:44:35,232:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:35,232:INFO:Initializing create_model()
2024-12-08 16:44:35,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:35,232:INFO:Checking exceptions
2024-12-08 16:44:35,232:INFO:Importing libraries
2024-12-08 16:44:35,232:INFO:Copying training dataset
2024-12-08 16:44:35,234:INFO:Defining folds
2024-12-08 16:44:35,234:INFO:Declaring metric variables
2024-12-08 16:44:35,236:INFO:Importing untrained model
2024-12-08 16:44:35,237:INFO:Extra Trees Classifier Imported successfully
2024-12-08 16:44:35,240:INFO:Starting cross validation
2024-12-08 16:44:35,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:35,604:INFO:Calculating mean and std
2024-12-08 16:44:35,605:INFO:Creating metrics dataframe
2024-12-08 16:44:35,606:INFO:Uploading results into container
2024-12-08 16:44:35,606:INFO:Uploading model into container now
2024-12-08 16:44:35,606:INFO:_master_model_container: 12
2024-12-08 16:44:35,606:INFO:_display_container: 2
2024-12-08 16:44:35,607:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False)
2024-12-08 16:44:35,607:INFO:create_model() successfully completed......................................
2024-12-08 16:44:35,646:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:35,646:INFO:Creating metrics dataframe
2024-12-08 16:44:35,650:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 16:44:35,650:INFO:Total runtime is 0.10945011377334596 minutes
2024-12-08 16:44:35,651:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:35,652:INFO:Initializing create_model()
2024-12-08 16:44:35,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:35,652:INFO:Checking exceptions
2024-12-08 16:44:35,652:INFO:Importing libraries
2024-12-08 16:44:35,652:INFO:Copying training dataset
2024-12-08 16:44:35,654:INFO:Defining folds
2024-12-08 16:44:35,654:INFO:Declaring metric variables
2024-12-08 16:44:35,655:INFO:Importing untrained model
2024-12-08 16:44:35,656:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 16:44:35,659:INFO:Starting cross validation
2024-12-08 16:44:35,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:37,726:INFO:Calculating mean and std
2024-12-08 16:44:37,727:INFO:Creating metrics dataframe
2024-12-08 16:44:37,728:INFO:Uploading results into container
2024-12-08 16:44:37,728:INFO:Uploading model into container now
2024-12-08 16:44:37,728:INFO:_master_model_container: 13
2024-12-08 16:44:37,728:INFO:_display_container: 2
2024-12-08 16:44:37,729:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 16:44:37,729:INFO:create_model() successfully completed......................................
2024-12-08 16:44:37,768:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:37,769:INFO:Creating metrics dataframe
2024-12-08 16:44:37,773:INFO:Initializing Dummy Classifier
2024-12-08 16:44:37,773:INFO:Total runtime is 0.1448376496632894 minutes
2024-12-08 16:44:37,775:INFO:SubProcess create_model() called ==================================
2024-12-08 16:44:37,775:INFO:Initializing create_model()
2024-12-08 16:44:37,775:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1785b5540>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:37,775:INFO:Checking exceptions
2024-12-08 16:44:37,775:INFO:Importing libraries
2024-12-08 16:44:37,775:INFO:Copying training dataset
2024-12-08 16:44:37,777:INFO:Defining folds
2024-12-08 16:44:37,777:INFO:Declaring metric variables
2024-12-08 16:44:37,778:INFO:Importing untrained model
2024-12-08 16:44:37,779:INFO:Dummy Classifier Imported successfully
2024-12-08 16:44:37,782:INFO:Starting cross validation
2024-12-08 16:44:37,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 16:44:37,864:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,877:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,878:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,884:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,889:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,892:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,895:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,897:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,904:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,916:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 16:44:37,921:INFO:Calculating mean and std
2024-12-08 16:44:37,921:INFO:Creating metrics dataframe
2024-12-08 16:44:37,922:INFO:Uploading results into container
2024-12-08 16:44:37,922:INFO:Uploading model into container now
2024-12-08 16:44:37,923:INFO:_master_model_container: 14
2024-12-08 16:44:37,923:INFO:_display_container: 2
2024-12-08 16:44:37,923:INFO:DummyClassifier(constant=None, random_state=6383, strategy='prior')
2024-12-08 16:44:37,923:INFO:create_model() successfully completed......................................
2024-12-08 16:44:37,965:INFO:SubProcess create_model() end ==================================
2024-12-08 16:44:37,965:INFO:Creating metrics dataframe
2024-12-08 16:44:37,973:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-12-08 16:44:37,977:INFO:Initializing create_model()
2024-12-08 16:44:37,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:37,977:INFO:Checking exceptions
2024-12-08 16:44:37,978:INFO:Importing libraries
2024-12-08 16:44:37,978:INFO:Copying training dataset
2024-12-08 16:44:37,979:INFO:Defining folds
2024-12-08 16:44:37,979:INFO:Declaring metric variables
2024-12-08 16:44:37,979:INFO:Importing untrained model
2024-12-08 16:44:37,979:INFO:Declaring custom model
2024-12-08 16:44:37,980:INFO:Ridge Classifier Imported successfully
2024-12-08 16:44:37,980:INFO:Cross validation set to False
2024-12-08 16:44:37,980:INFO:Fitting Model
2024-12-08 16:44:38,009:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001)
2024-12-08 16:44:38,009:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,050:INFO:Initializing create_model()
2024-12-08 16:44:38,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,051:INFO:Checking exceptions
2024-12-08 16:44:38,051:INFO:Importing libraries
2024-12-08 16:44:38,052:INFO:Copying training dataset
2024-12-08 16:44:38,054:INFO:Defining folds
2024-12-08 16:44:38,054:INFO:Declaring metric variables
2024-12-08 16:44:38,054:INFO:Importing untrained model
2024-12-08 16:44:38,054:INFO:Declaring custom model
2024-12-08 16:44:38,054:INFO:Logistic Regression Imported successfully
2024-12-08 16:44:38,055:INFO:Cross validation set to False
2024-12-08 16:44:38,055:INFO:Fitting Model
2024-12-08 16:44:38,084:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 16:44:38,084:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,125:INFO:Initializing create_model()
2024-12-08 16:44:38,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,125:INFO:Checking exceptions
2024-12-08 16:44:38,126:INFO:Importing libraries
2024-12-08 16:44:38,126:INFO:Copying training dataset
2024-12-08 16:44:38,127:INFO:Defining folds
2024-12-08 16:44:38,127:INFO:Declaring metric variables
2024-12-08 16:44:38,127:INFO:Importing untrained model
2024-12-08 16:44:38,127:INFO:Declaring custom model
2024-12-08 16:44:38,128:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 16:44:38,128:INFO:Cross validation set to False
2024-12-08 16:44:38,128:INFO:Fitting Model
2024-12-08 16:44:38,155:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 16:44:38,155:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,196:INFO:Initializing create_model()
2024-12-08 16:44:38,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,196:INFO:Checking exceptions
2024-12-08 16:44:38,197:INFO:Importing libraries
2024-12-08 16:44:38,197:INFO:Copying training dataset
2024-12-08 16:44:38,199:INFO:Defining folds
2024-12-08 16:44:38,199:INFO:Declaring metric variables
2024-12-08 16:44:38,199:INFO:Importing untrained model
2024-12-08 16:44:38,199:INFO:Declaring custom model
2024-12-08 16:44:38,199:INFO:K Neighbors Classifier Imported successfully
2024-12-08 16:44:38,200:INFO:Cross validation set to False
2024-12-08 16:44:38,200:INFO:Fitting Model
2024-12-08 16:44:38,226:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 16:44:38,226:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,267:INFO:Initializing create_model()
2024-12-08 16:44:38,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,267:INFO:Checking exceptions
2024-12-08 16:44:38,268:INFO:Importing libraries
2024-12-08 16:44:38,268:INFO:Copying training dataset
2024-12-08 16:44:38,269:INFO:Defining folds
2024-12-08 16:44:38,269:INFO:Declaring metric variables
2024-12-08 16:44:38,269:INFO:Importing untrained model
2024-12-08 16:44:38,269:INFO:Declaring custom model
2024-12-08 16:44:38,270:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 16:44:38,270:INFO:Cross validation set to False
2024-12-08 16:44:38,270:INFO:Fitting Model
2024-12-08 16:44:38,348:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 16:44:38,348:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,388:INFO:Initializing create_model()
2024-12-08 16:44:38,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,388:INFO:Checking exceptions
2024-12-08 16:44:38,389:INFO:Importing libraries
2024-12-08 16:44:38,389:INFO:Copying training dataset
2024-12-08 16:44:38,391:INFO:Defining folds
2024-12-08 16:44:38,391:INFO:Declaring metric variables
2024-12-08 16:44:38,391:INFO:Importing untrained model
2024-12-08 16:44:38,391:INFO:Declaring custom model
2024-12-08 16:44:38,391:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 16:44:38,392:INFO:Cross validation set to False
2024-12-08 16:44:38,392:INFO:Fitting Model
2024-12-08 16:44:38,421:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-12-08 16:44:38,422:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000239 seconds.
2024-12-08 16:44:38,422:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-08 16:44:38,422:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-08 16:44:38,422:INFO:[LightGBM] [Info] Total Bins 97
2024-12-08 16:44:38,422:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 8
2024-12-08 16:44:38,422:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-12-08 16:44:38,422:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-12-08 16:44:38,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,519:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,526:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,542:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,549:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,563:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,581:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,670:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 16:44:38,675:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 16:44:38,675:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,717:INFO:Initializing create_model()
2024-12-08 16:44:38,717:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,717:INFO:Checking exceptions
2024-12-08 16:44:38,717:INFO:Importing libraries
2024-12-08 16:44:38,717:INFO:Copying training dataset
2024-12-08 16:44:38,719:INFO:Defining folds
2024-12-08 16:44:38,719:INFO:Declaring metric variables
2024-12-08 16:44:38,719:INFO:Importing untrained model
2024-12-08 16:44:38,719:INFO:Declaring custom model
2024-12-08 16:44:38,720:INFO:Random Forest Classifier Imported successfully
2024-12-08 16:44:38,720:INFO:Cross validation set to False
2024-12-08 16:44:38,720:INFO:Fitting Model
2024-12-08 16:44:38,824:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False)
2024-12-08 16:44:38,824:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,868:INFO:Initializing create_model()
2024-12-08 16:44:38,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,868:INFO:Checking exceptions
2024-12-08 16:44:38,869:INFO:Importing libraries
2024-12-08 16:44:38,869:INFO:Copying training dataset
2024-12-08 16:44:38,871:INFO:Defining folds
2024-12-08 16:44:38,871:INFO:Declaring metric variables
2024-12-08 16:44:38,871:INFO:Importing untrained model
2024-12-08 16:44:38,871:INFO:Declaring custom model
2024-12-08 16:44:38,871:INFO:Extra Trees Classifier Imported successfully
2024-12-08 16:44:38,872:INFO:Cross validation set to False
2024-12-08 16:44:38,872:INFO:Fitting Model
2024-12-08 16:44:38,951:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False)
2024-12-08 16:44:38,951:INFO:create_model() successfully completed......................................
2024-12-08 16:44:38,993:INFO:Initializing create_model()
2024-12-08 16:44:38,993:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:38,993:INFO:Checking exceptions
2024-12-08 16:44:38,994:INFO:Importing libraries
2024-12-08 16:44:38,994:INFO:Copying training dataset
2024-12-08 16:44:38,995:INFO:Defining folds
2024-12-08 16:44:38,995:INFO:Declaring metric variables
2024-12-08 16:44:38,995:INFO:Importing untrained model
2024-12-08 16:44:38,995:INFO:Declaring custom model
2024-12-08 16:44:38,995:INFO:Ada Boost Classifier Imported successfully
2024-12-08 16:44:38,996:INFO:Cross validation set to False
2024-12-08 16:44:38,996:INFO:Fitting Model
2024-12-08 16:44:39,021:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 16:44:39,053:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383)
2024-12-08 16:44:39,053:INFO:create_model() successfully completed......................................
2024-12-08 16:44:39,094:INFO:Initializing create_model()
2024-12-08 16:44:39,094:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:39,094:INFO:Checking exceptions
2024-12-08 16:44:39,095:INFO:Importing libraries
2024-12-08 16:44:39,095:INFO:Copying training dataset
2024-12-08 16:44:39,097:INFO:Defining folds
2024-12-08 16:44:39,097:INFO:Declaring metric variables
2024-12-08 16:44:39,097:INFO:Importing untrained model
2024-12-08 16:44:39,097:INFO:Declaring custom model
2024-12-08 16:44:39,097:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 16:44:39,098:INFO:Cross validation set to False
2024-12-08 16:44:39,098:INFO:Fitting Model
2024-12-08 16:44:39,125:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 16:44:39,125:INFO:create_model() successfully completed......................................
2024-12-08 16:44:39,167:INFO:Initializing create_model()
2024-12-08 16:44:39,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:39,167:INFO:Checking exceptions
2024-12-08 16:44:39,168:INFO:Importing libraries
2024-12-08 16:44:39,168:INFO:Copying training dataset
2024-12-08 16:44:39,169:INFO:Defining folds
2024-12-08 16:44:39,169:INFO:Declaring metric variables
2024-12-08 16:44:39,170:INFO:Importing untrained model
2024-12-08 16:44:39,170:INFO:Declaring custom model
2024-12-08 16:44:39,170:INFO:Naive Bayes Imported successfully
2024-12-08 16:44:39,170:INFO:Cross validation set to False
2024-12-08 16:44:39,170:INFO:Fitting Model
2024-12-08 16:44:39,196:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 16:44:39,196:INFO:create_model() successfully completed......................................
2024-12-08 16:44:39,238:INFO:Initializing create_model()
2024-12-08 16:44:39,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:39,239:INFO:Checking exceptions
2024-12-08 16:44:39,239:INFO:Importing libraries
2024-12-08 16:44:39,239:INFO:Copying training dataset
2024-12-08 16:44:39,241:INFO:Defining folds
2024-12-08 16:44:39,241:INFO:Declaring metric variables
2024-12-08 16:44:39,241:INFO:Importing untrained model
2024-12-08 16:44:39,241:INFO:Declaring custom model
2024-12-08 16:44:39,241:INFO:Decision Tree Classifier Imported successfully
2024-12-08 16:44:39,242:INFO:Cross validation set to False
2024-12-08 16:44:39,242:INFO:Fitting Model
2024-12-08 16:44:39,269:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best')
2024-12-08 16:44:39,269:INFO:create_model() successfully completed......................................
2024-12-08 16:44:39,310:INFO:Initializing create_model()
2024-12-08 16:44:39,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:39,310:INFO:Checking exceptions
2024-12-08 16:44:39,311:INFO:Importing libraries
2024-12-08 16:44:39,311:INFO:Copying training dataset
2024-12-08 16:44:39,313:INFO:Defining folds
2024-12-08 16:44:39,313:INFO:Declaring metric variables
2024-12-08 16:44:39,313:INFO:Importing untrained model
2024-12-08 16:44:39,313:INFO:Declaring custom model
2024-12-08 16:44:39,313:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 16:44:39,313:INFO:Cross validation set to False
2024-12-08 16:44:39,313:INFO:Fitting Model
2024-12-08 16:44:39,339:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 16:44:39,339:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 16:44:39,339:INFO:create_model() successfully completed......................................
2024-12-08 16:44:39,380:INFO:Initializing create_model()
2024-12-08 16:44:39,381:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=DummyClassifier(constant=None, random_state=6383, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 16:44:39,381:INFO:Checking exceptions
2024-12-08 16:44:39,381:INFO:Importing libraries
2024-12-08 16:44:39,381:INFO:Copying training dataset
2024-12-08 16:44:39,383:INFO:Defining folds
2024-12-08 16:44:39,383:INFO:Declaring metric variables
2024-12-08 16:44:39,383:INFO:Importing untrained model
2024-12-08 16:44:39,383:INFO:Declaring custom model
2024-12-08 16:44:39,383:INFO:Dummy Classifier Imported successfully
2024-12-08 16:44:39,384:INFO:Cross validation set to False
2024-12-08 16:44:39,384:INFO:Fitting Model
2024-12-08 16:44:39,409:INFO:DummyClassifier(constant=None, random_state=6383, strategy='prior')
2024-12-08 16:44:39,409:INFO:create_model() successfully completed......................................
2024-12-08 16:44:39,456:INFO:_master_model_container: 14
2024-12-08 16:44:39,456:INFO:_display_container: 2
2024-12-08 16:44:39,457:INFO:[RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best'), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), DummyClassifier(constant=None, random_state=6383, strategy='prior')]
2024-12-08 16:44:39,457:INFO:compare_models() successfully completed......................................
2024-12-08 17:37:20,838:INFO:Initializing compare_models()
2024-12-08 17:37:20,840:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, include=None, fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, 'include': None, 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-08 17:37:20,840:INFO:Checking exceptions
2024-12-08 17:37:20,860:INFO:Preparing display monitor
2024-12-08 17:37:20,881:INFO:Initializing Logistic Regression
2024-12-08 17:37:20,881:INFO:Total runtime is 3.047784169514974e-06 minutes
2024-12-08 17:37:20,885:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:20,885:INFO:Initializing create_model()
2024-12-08 17:37:20,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:20,885:INFO:Checking exceptions
2024-12-08 17:37:20,886:INFO:Importing libraries
2024-12-08 17:37:20,886:INFO:Copying training dataset
2024-12-08 17:37:20,889:INFO:Defining folds
2024-12-08 17:37:20,889:INFO:Declaring metric variables
2024-12-08 17:37:20,891:INFO:Importing untrained model
2024-12-08 17:37:20,894:INFO:Logistic Regression Imported successfully
2024-12-08 17:37:20,901:INFO:Starting cross validation
2024-12-08 17:37:20,904:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:24,011:INFO:Calculating mean and std
2024-12-08 17:37:24,017:INFO:Creating metrics dataframe
2024-12-08 17:37:24,022:INFO:Uploading results into container
2024-12-08 17:37:24,023:INFO:Uploading model into container now
2024-12-08 17:37:24,024:INFO:_master_model_container: 15
2024-12-08 17:37:24,024:INFO:_display_container: 3
2024-12-08 17:37:24,025:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 17:37:24,025:INFO:create_model() successfully completed......................................
2024-12-08 17:37:24,114:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:24,115:INFO:Creating metrics dataframe
2024-12-08 17:37:24,118:INFO:Initializing K Neighbors Classifier
2024-12-08 17:37:24,118:INFO:Total runtime is 0.05394621690114339 minutes
2024-12-08 17:37:24,120:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:24,120:INFO:Initializing create_model()
2024-12-08 17:37:24,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:24,121:INFO:Checking exceptions
2024-12-08 17:37:24,121:INFO:Importing libraries
2024-12-08 17:37:24,121:INFO:Copying training dataset
2024-12-08 17:37:24,125:INFO:Defining folds
2024-12-08 17:37:24,125:INFO:Declaring metric variables
2024-12-08 17:37:24,127:INFO:Importing untrained model
2024-12-08 17:37:24,128:INFO:K Neighbors Classifier Imported successfully
2024-12-08 17:37:24,131:INFO:Starting cross validation
2024-12-08 17:37:24,133:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:25,258:INFO:Calculating mean and std
2024-12-08 17:37:25,259:INFO:Creating metrics dataframe
2024-12-08 17:37:25,261:INFO:Uploading results into container
2024-12-08 17:37:25,262:INFO:Uploading model into container now
2024-12-08 17:37:25,262:INFO:_master_model_container: 16
2024-12-08 17:37:25,262:INFO:_display_container: 3
2024-12-08 17:37:25,263:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 17:37:25,263:INFO:create_model() successfully completed......................................
2024-12-08 17:37:25,321:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:25,322:INFO:Creating metrics dataframe
2024-12-08 17:37:25,327:INFO:Initializing Naive Bayes
2024-12-08 17:37:25,327:INFO:Total runtime is 0.0740930159886678 minutes
2024-12-08 17:37:25,328:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:25,328:INFO:Initializing create_model()
2024-12-08 17:37:25,328:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:25,328:INFO:Checking exceptions
2024-12-08 17:37:25,328:INFO:Importing libraries
2024-12-08 17:37:25,328:INFO:Copying training dataset
2024-12-08 17:37:25,330:INFO:Defining folds
2024-12-08 17:37:25,331:INFO:Declaring metric variables
2024-12-08 17:37:25,332:INFO:Importing untrained model
2024-12-08 17:37:25,334:INFO:Naive Bayes Imported successfully
2024-12-08 17:37:25,337:INFO:Starting cross validation
2024-12-08 17:37:25,338:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:26,373:INFO:Calculating mean and std
2024-12-08 17:37:26,374:INFO:Creating metrics dataframe
2024-12-08 17:37:26,375:INFO:Uploading results into container
2024-12-08 17:37:26,375:INFO:Uploading model into container now
2024-12-08 17:37:26,376:INFO:_master_model_container: 17
2024-12-08 17:37:26,376:INFO:_display_container: 3
2024-12-08 17:37:26,376:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 17:37:26,376:INFO:create_model() successfully completed......................................
2024-12-08 17:37:26,423:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:26,423:INFO:Creating metrics dataframe
2024-12-08 17:37:26,426:INFO:Initializing Decision Tree Classifier
2024-12-08 17:37:26,427:INFO:Total runtime is 0.09242479801177977 minutes
2024-12-08 17:37:26,428:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:26,428:INFO:Initializing create_model()
2024-12-08 17:37:26,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:26,428:INFO:Checking exceptions
2024-12-08 17:37:26,428:INFO:Importing libraries
2024-12-08 17:37:26,428:INFO:Copying training dataset
2024-12-08 17:37:26,430:INFO:Defining folds
2024-12-08 17:37:26,430:INFO:Declaring metric variables
2024-12-08 17:37:26,431:INFO:Importing untrained model
2024-12-08 17:37:26,433:INFO:Decision Tree Classifier Imported successfully
2024-12-08 17:37:26,436:INFO:Starting cross validation
2024-12-08 17:37:26,437:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:26,538:INFO:Calculating mean and std
2024-12-08 17:37:26,538:INFO:Creating metrics dataframe
2024-12-08 17:37:26,539:INFO:Uploading results into container
2024-12-08 17:37:26,539:INFO:Uploading model into container now
2024-12-08 17:37:26,540:INFO:_master_model_container: 18
2024-12-08 17:37:26,540:INFO:_display_container: 3
2024-12-08 17:37:26,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best')
2024-12-08 17:37:26,540:INFO:create_model() successfully completed......................................
2024-12-08 17:37:26,581:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:26,582:INFO:Creating metrics dataframe
2024-12-08 17:37:26,586:INFO:Initializing SVM - Linear Kernel
2024-12-08 17:37:26,587:INFO:Total runtime is 0.09509139855702717 minutes
2024-12-08 17:37:26,589:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:26,589:INFO:Initializing create_model()
2024-12-08 17:37:26,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:26,590:INFO:Checking exceptions
2024-12-08 17:37:26,590:INFO:Importing libraries
2024-12-08 17:37:26,590:INFO:Copying training dataset
2024-12-08 17:37:26,592:INFO:Defining folds
2024-12-08 17:37:26,592:INFO:Declaring metric variables
2024-12-08 17:37:26,593:INFO:Importing untrained model
2024-12-08 17:37:26,595:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 17:37:26,597:INFO:Starting cross validation
2024-12-08 17:37:26,599:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:26,698:INFO:Calculating mean and std
2024-12-08 17:37:26,698:INFO:Creating metrics dataframe
2024-12-08 17:37:26,699:INFO:Uploading results into container
2024-12-08 17:37:26,699:INFO:Uploading model into container now
2024-12-08 17:37:26,700:INFO:_master_model_container: 19
2024-12-08 17:37:26,700:INFO:_display_container: 3
2024-12-08 17:37:26,700:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 17:37:26,700:INFO:create_model() successfully completed......................................
2024-12-08 17:37:26,739:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:26,739:INFO:Creating metrics dataframe
2024-12-08 17:37:26,744:INFO:Initializing Ridge Classifier
2024-12-08 17:37:26,745:INFO:Total runtime is 0.09772601922353108 minutes
2024-12-08 17:37:26,747:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:26,747:INFO:Initializing create_model()
2024-12-08 17:37:26,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:26,747:INFO:Checking exceptions
2024-12-08 17:37:26,748:INFO:Importing libraries
2024-12-08 17:37:26,748:INFO:Copying training dataset
2024-12-08 17:37:26,750:INFO:Defining folds
2024-12-08 17:37:26,750:INFO:Declaring metric variables
2024-12-08 17:37:26,752:INFO:Importing untrained model
2024-12-08 17:37:26,753:INFO:Ridge Classifier Imported successfully
2024-12-08 17:37:26,756:INFO:Starting cross validation
2024-12-08 17:37:26,757:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:26,860:INFO:Calculating mean and std
2024-12-08 17:37:26,860:INFO:Creating metrics dataframe
2024-12-08 17:37:26,861:INFO:Uploading results into container
2024-12-08 17:37:26,861:INFO:Uploading model into container now
2024-12-08 17:37:26,862:INFO:_master_model_container: 20
2024-12-08 17:37:26,862:INFO:_display_container: 3
2024-12-08 17:37:26,862:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001)
2024-12-08 17:37:26,862:INFO:create_model() successfully completed......................................
2024-12-08 17:37:26,901:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:26,901:INFO:Creating metrics dataframe
2024-12-08 17:37:26,905:INFO:Initializing Random Forest Classifier
2024-12-08 17:37:26,905:INFO:Total runtime is 0.10040286382039387 minutes
2024-12-08 17:37:26,907:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:26,908:INFO:Initializing create_model()
2024-12-08 17:37:26,908:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:26,908:INFO:Checking exceptions
2024-12-08 17:37:26,908:INFO:Importing libraries
2024-12-08 17:37:26,908:INFO:Copying training dataset
2024-12-08 17:37:26,910:INFO:Defining folds
2024-12-08 17:37:26,910:INFO:Declaring metric variables
2024-12-08 17:37:26,911:INFO:Importing untrained model
2024-12-08 17:37:26,913:INFO:Random Forest Classifier Imported successfully
2024-12-08 17:37:26,916:INFO:Starting cross validation
2024-12-08 17:37:26,917:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:27,150:INFO:Calculating mean and std
2024-12-08 17:37:27,151:INFO:Creating metrics dataframe
2024-12-08 17:37:27,151:INFO:Uploading results into container
2024-12-08 17:37:27,152:INFO:Uploading model into container now
2024-12-08 17:37:27,152:INFO:_master_model_container: 21
2024-12-08 17:37:27,152:INFO:_display_container: 3
2024-12-08 17:37:27,152:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False)
2024-12-08 17:37:27,152:INFO:create_model() successfully completed......................................
2024-12-08 17:37:27,191:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:27,191:INFO:Creating metrics dataframe
2024-12-08 17:37:27,195:INFO:Initializing Quadratic Discriminant Analysis
2024-12-08 17:37:27,195:INFO:Total runtime is 0.10523230234781901 minutes
2024-12-08 17:37:27,196:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:27,196:INFO:Initializing create_model()
2024-12-08 17:37:27,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:27,197:INFO:Checking exceptions
2024-12-08 17:37:27,197:INFO:Importing libraries
2024-12-08 17:37:27,197:INFO:Copying training dataset
2024-12-08 17:37:27,199:INFO:Defining folds
2024-12-08 17:37:27,199:INFO:Declaring metric variables
2024-12-08 17:37:27,201:INFO:Importing untrained model
2024-12-08 17:37:27,204:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 17:37:27,207:INFO:Starting cross validation
2024-12-08 17:37:27,208:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:27,257:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:37:27,258:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:37:27,268:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:37:27,272:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:37:27,280:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:37:27,307:INFO:Calculating mean and std
2024-12-08 17:37:27,307:INFO:Creating metrics dataframe
2024-12-08 17:37:27,308:INFO:Uploading results into container
2024-12-08 17:37:27,308:INFO:Uploading model into container now
2024-12-08 17:37:27,309:INFO:_master_model_container: 22
2024-12-08 17:37:27,309:INFO:_display_container: 3
2024-12-08 17:37:27,309:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 17:37:27,309:INFO:create_model() successfully completed......................................
2024-12-08 17:37:27,353:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:27,353:INFO:Creating metrics dataframe
2024-12-08 17:37:27,357:INFO:Initializing Ada Boost Classifier
2024-12-08 17:37:27,357:INFO:Total runtime is 0.10793758630752563 minutes
2024-12-08 17:37:27,359:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:27,359:INFO:Initializing create_model()
2024-12-08 17:37:27,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:27,359:INFO:Checking exceptions
2024-12-08 17:37:27,359:INFO:Importing libraries
2024-12-08 17:37:27,359:INFO:Copying training dataset
2024-12-08 17:37:27,361:INFO:Defining folds
2024-12-08 17:37:27,361:INFO:Declaring metric variables
2024-12-08 17:37:27,362:INFO:Importing untrained model
2024-12-08 17:37:27,364:INFO:Ada Boost Classifier Imported successfully
2024-12-08 17:37:27,367:INFO:Starting cross validation
2024-12-08 17:37:27,368:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:27,416:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:37:27,416:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:37:27,430:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:37:27,430:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:37:27,442:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:37:27,517:INFO:Calculating mean and std
2024-12-08 17:37:27,518:INFO:Creating metrics dataframe
2024-12-08 17:37:27,519:INFO:Uploading results into container
2024-12-08 17:37:27,519:INFO:Uploading model into container now
2024-12-08 17:37:27,519:INFO:_master_model_container: 23
2024-12-08 17:37:27,519:INFO:_display_container: 3
2024-12-08 17:37:27,520:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383)
2024-12-08 17:37:27,520:INFO:create_model() successfully completed......................................
2024-12-08 17:37:27,565:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:27,565:INFO:Creating metrics dataframe
2024-12-08 17:37:27,569:INFO:Initializing Gradient Boosting Classifier
2024-12-08 17:37:27,569:INFO:Total runtime is 0.11146431763966878 minutes
2024-12-08 17:37:27,570:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:27,570:INFO:Initializing create_model()
2024-12-08 17:37:27,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:27,571:INFO:Checking exceptions
2024-12-08 17:37:27,571:INFO:Importing libraries
2024-12-08 17:37:27,571:INFO:Copying training dataset
2024-12-08 17:37:27,573:INFO:Defining folds
2024-12-08 17:37:27,573:INFO:Declaring metric variables
2024-12-08 17:37:27,574:INFO:Importing untrained model
2024-12-08 17:37:27,576:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 17:37:27,579:INFO:Starting cross validation
2024-12-08 17:37:27,580:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:27,744:INFO:Calculating mean and std
2024-12-08 17:37:27,745:INFO:Creating metrics dataframe
2024-12-08 17:37:27,745:INFO:Uploading results into container
2024-12-08 17:37:27,746:INFO:Uploading model into container now
2024-12-08 17:37:27,746:INFO:_master_model_container: 24
2024-12-08 17:37:27,746:INFO:_display_container: 3
2024-12-08 17:37:27,746:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 17:37:27,746:INFO:create_model() successfully completed......................................
2024-12-08 17:37:27,786:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:27,786:INFO:Creating metrics dataframe
2024-12-08 17:37:27,792:INFO:Initializing Linear Discriminant Analysis
2024-12-08 17:37:27,792:INFO:Total runtime is 0.11519049803415934 minutes
2024-12-08 17:37:27,794:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:27,795:INFO:Initializing create_model()
2024-12-08 17:37:27,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:27,795:INFO:Checking exceptions
2024-12-08 17:37:27,795:INFO:Importing libraries
2024-12-08 17:37:27,795:INFO:Copying training dataset
2024-12-08 17:37:27,797:INFO:Defining folds
2024-12-08 17:37:27,797:INFO:Declaring metric variables
2024-12-08 17:37:27,798:INFO:Importing untrained model
2024-12-08 17:37:27,800:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 17:37:27,803:INFO:Starting cross validation
2024-12-08 17:37:27,804:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:27,906:INFO:Calculating mean and std
2024-12-08 17:37:27,906:INFO:Creating metrics dataframe
2024-12-08 17:37:27,907:INFO:Uploading results into container
2024-12-08 17:37:27,907:INFO:Uploading model into container now
2024-12-08 17:37:27,908:INFO:_master_model_container: 25
2024-12-08 17:37:27,908:INFO:_display_container: 3
2024-12-08 17:37:27,908:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 17:37:27,908:INFO:create_model() successfully completed......................................
2024-12-08 17:37:27,947:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:27,947:INFO:Creating metrics dataframe
2024-12-08 17:37:27,953:INFO:Initializing Extra Trees Classifier
2024-12-08 17:37:27,953:INFO:Total runtime is 0.11786478360493978 minutes
2024-12-08 17:37:27,955:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:27,956:INFO:Initializing create_model()
2024-12-08 17:37:27,956:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:27,956:INFO:Checking exceptions
2024-12-08 17:37:27,956:INFO:Importing libraries
2024-12-08 17:37:27,956:INFO:Copying training dataset
2024-12-08 17:37:27,958:INFO:Defining folds
2024-12-08 17:37:27,958:INFO:Declaring metric variables
2024-12-08 17:37:27,960:INFO:Importing untrained model
2024-12-08 17:37:27,961:INFO:Extra Trees Classifier Imported successfully
2024-12-08 17:37:27,964:INFO:Starting cross validation
2024-12-08 17:37:27,965:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:28,171:INFO:Calculating mean and std
2024-12-08 17:37:28,172:INFO:Creating metrics dataframe
2024-12-08 17:37:28,173:INFO:Uploading results into container
2024-12-08 17:37:28,173:INFO:Uploading model into container now
2024-12-08 17:37:28,173:INFO:_master_model_container: 26
2024-12-08 17:37:28,173:INFO:_display_container: 3
2024-12-08 17:37:28,174:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False)
2024-12-08 17:37:28,174:INFO:create_model() successfully completed......................................
2024-12-08 17:37:28,224:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:28,224:INFO:Creating metrics dataframe
2024-12-08 17:37:28,229:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 17:37:28,229:INFO:Total runtime is 0.12246686617533366 minutes
2024-12-08 17:37:28,232:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:28,232:INFO:Initializing create_model()
2024-12-08 17:37:28,232:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:28,232:INFO:Checking exceptions
2024-12-08 17:37:28,232:INFO:Importing libraries
2024-12-08 17:37:28,232:INFO:Copying training dataset
2024-12-08 17:37:28,234:INFO:Defining folds
2024-12-08 17:37:28,234:INFO:Declaring metric variables
2024-12-08 17:37:28,236:INFO:Importing untrained model
2024-12-08 17:37:28,237:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:37:28,241:INFO:Starting cross validation
2024-12-08 17:37:28,242:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:29,342:INFO:Calculating mean and std
2024-12-08 17:37:29,343:INFO:Creating metrics dataframe
2024-12-08 17:37:29,344:INFO:Uploading results into container
2024-12-08 17:37:29,344:INFO:Uploading model into container now
2024-12-08 17:37:29,345:INFO:_master_model_container: 27
2024-12-08 17:37:29,345:INFO:_display_container: 3
2024-12-08 17:37:29,345:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 17:37:29,345:INFO:create_model() successfully completed......................................
2024-12-08 17:37:29,386:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:29,386:INFO:Creating metrics dataframe
2024-12-08 17:37:29,391:INFO:Initializing Dummy Classifier
2024-12-08 17:37:29,391:INFO:Total runtime is 0.1418327490488688 minutes
2024-12-08 17:37:29,392:INFO:SubProcess create_model() called ==================================
2024-12-08 17:37:29,392:INFO:Initializing create_model()
2024-12-08 17:37:29,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x103549f00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:29,393:INFO:Checking exceptions
2024-12-08 17:37:29,393:INFO:Importing libraries
2024-12-08 17:37:29,393:INFO:Copying training dataset
2024-12-08 17:37:29,394:INFO:Defining folds
2024-12-08 17:37:29,394:INFO:Declaring metric variables
2024-12-08 17:37:29,396:INFO:Importing untrained model
2024-12-08 17:37:29,397:INFO:Dummy Classifier Imported successfully
2024-12-08 17:37:29,402:INFO:Starting cross validation
2024-12-08 17:37:29,403:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:37:29,476:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:37:29,481:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:37:29,483:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:37:29,484:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:37:29,492:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:37:29,503:INFO:Calculating mean and std
2024-12-08 17:37:29,504:INFO:Creating metrics dataframe
2024-12-08 17:37:29,505:INFO:Uploading results into container
2024-12-08 17:37:29,505:INFO:Uploading model into container now
2024-12-08 17:37:29,505:INFO:_master_model_container: 28
2024-12-08 17:37:29,505:INFO:_display_container: 3
2024-12-08 17:37:29,506:INFO:DummyClassifier(constant=None, random_state=6383, strategy='prior')
2024-12-08 17:37:29,506:INFO:create_model() successfully completed......................................
2024-12-08 17:37:29,545:INFO:SubProcess create_model() end ==================================
2024-12-08 17:37:29,545:INFO:Creating metrics dataframe
2024-12-08 17:37:29,551:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-12-08 17:37:29,557:INFO:Initializing create_model()
2024-12-08 17:37:29,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:37:29,557:INFO:Checking exceptions
2024-12-08 17:37:29,558:INFO:Importing libraries
2024-12-08 17:37:29,558:INFO:Copying training dataset
2024-12-08 17:37:29,560:INFO:Defining folds
2024-12-08 17:37:29,560:INFO:Declaring metric variables
2024-12-08 17:37:29,560:INFO:Importing untrained model
2024-12-08 17:37:29,560:INFO:Declaring custom model
2024-12-08 17:37:29,561:INFO:Logistic Regression Imported successfully
2024-12-08 17:37:29,561:INFO:Cross validation set to False
2024-12-08 17:37:29,561:INFO:Fitting Model
2024-12-08 17:37:29,591:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 17:37:29,591:INFO:create_model() successfully completed......................................
2024-12-08 17:37:29,649:INFO:_master_model_container: 28
2024-12-08 17:37:29,649:INFO:_display_container: 3
2024-12-08 17:37:29,649:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 17:37:29,649:INFO:compare_models() successfully completed......................................
2024-12-08 17:39:43,486:INFO:Initializing compare_models()
2024-12-08 17:39:43,487:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=16, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 16, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-08 17:39:43,487:INFO:Checking exceptions
2024-12-08 17:39:43,493:INFO:Preparing display monitor
2024-12-08 17:39:43,514:INFO:Initializing Logistic Regression
2024-12-08 17:39:43,514:INFO:Total runtime is 3.1153361002604166e-06 minutes
2024-12-08 17:39:43,516:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:43,517:INFO:Initializing create_model()
2024-12-08 17:39:43,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:43,517:INFO:Checking exceptions
2024-12-08 17:39:43,517:INFO:Importing libraries
2024-12-08 17:39:43,517:INFO:Copying training dataset
2024-12-08 17:39:43,520:INFO:Defining folds
2024-12-08 17:39:43,520:INFO:Declaring metric variables
2024-12-08 17:39:43,524:INFO:Importing untrained model
2024-12-08 17:39:43,527:INFO:Logistic Regression Imported successfully
2024-12-08 17:39:43,531:INFO:Starting cross validation
2024-12-08 17:39:43,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:43,742:INFO:Calculating mean and std
2024-12-08 17:39:43,742:INFO:Creating metrics dataframe
2024-12-08 17:39:43,743:INFO:Uploading results into container
2024-12-08 17:39:43,744:INFO:Uploading model into container now
2024-12-08 17:39:43,744:INFO:_master_model_container: 29
2024-12-08 17:39:43,744:INFO:_display_container: 4
2024-12-08 17:39:43,744:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 17:39:43,744:INFO:create_model() successfully completed......................................
2024-12-08 17:39:43,807:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:43,807:INFO:Creating metrics dataframe
2024-12-08 17:39:43,810:INFO:Initializing K Neighbors Classifier
2024-12-08 17:39:43,810:INFO:Total runtime is 0.004929602146148682 minutes
2024-12-08 17:39:43,811:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:43,812:INFO:Initializing create_model()
2024-12-08 17:39:43,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:43,812:INFO:Checking exceptions
2024-12-08 17:39:43,812:INFO:Importing libraries
2024-12-08 17:39:43,812:INFO:Copying training dataset
2024-12-08 17:39:43,814:INFO:Defining folds
2024-12-08 17:39:43,814:INFO:Declaring metric variables
2024-12-08 17:39:43,816:INFO:Importing untrained model
2024-12-08 17:39:43,817:INFO:K Neighbors Classifier Imported successfully
2024-12-08 17:39:43,820:INFO:Starting cross validation
2024-12-08 17:39:43,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:44,023:INFO:Calculating mean and std
2024-12-08 17:39:44,023:INFO:Creating metrics dataframe
2024-12-08 17:39:44,024:INFO:Uploading results into container
2024-12-08 17:39:44,024:INFO:Uploading model into container now
2024-12-08 17:39:44,025:INFO:_master_model_container: 30
2024-12-08 17:39:44,025:INFO:_display_container: 4
2024-12-08 17:39:44,025:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 17:39:44,025:INFO:create_model() successfully completed......................................
2024-12-08 17:39:44,065:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:44,065:INFO:Creating metrics dataframe
2024-12-08 17:39:44,068:INFO:Initializing Naive Bayes
2024-12-08 17:39:44,068:INFO:Total runtime is 0.00923076868057251 minutes
2024-12-08 17:39:44,069:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:44,069:INFO:Initializing create_model()
2024-12-08 17:39:44,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:44,070:INFO:Checking exceptions
2024-12-08 17:39:44,070:INFO:Importing libraries
2024-12-08 17:39:44,070:INFO:Copying training dataset
2024-12-08 17:39:44,071:INFO:Defining folds
2024-12-08 17:39:44,071:INFO:Declaring metric variables
2024-12-08 17:39:44,073:INFO:Importing untrained model
2024-12-08 17:39:44,074:INFO:Naive Bayes Imported successfully
2024-12-08 17:39:44,077:INFO:Starting cross validation
2024-12-08 17:39:44,078:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:44,234:INFO:Calculating mean and std
2024-12-08 17:39:44,234:INFO:Creating metrics dataframe
2024-12-08 17:39:44,235:INFO:Uploading results into container
2024-12-08 17:39:44,235:INFO:Uploading model into container now
2024-12-08 17:39:44,235:INFO:_master_model_container: 31
2024-12-08 17:39:44,235:INFO:_display_container: 4
2024-12-08 17:39:44,235:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 17:39:44,235:INFO:create_model() successfully completed......................................
2024-12-08 17:39:44,276:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:44,276:INFO:Creating metrics dataframe
2024-12-08 17:39:44,279:INFO:Initializing Decision Tree Classifier
2024-12-08 17:39:44,279:INFO:Total runtime is 0.012752866744995118 minutes
2024-12-08 17:39:44,281:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:44,281:INFO:Initializing create_model()
2024-12-08 17:39:44,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:44,281:INFO:Checking exceptions
2024-12-08 17:39:44,281:INFO:Importing libraries
2024-12-08 17:39:44,281:INFO:Copying training dataset
2024-12-08 17:39:44,282:INFO:Defining folds
2024-12-08 17:39:44,282:INFO:Declaring metric variables
2024-12-08 17:39:44,284:INFO:Importing untrained model
2024-12-08 17:39:44,285:INFO:Decision Tree Classifier Imported successfully
2024-12-08 17:39:44,288:INFO:Starting cross validation
2024-12-08 17:39:44,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:44,435:INFO:Calculating mean and std
2024-12-08 17:39:44,435:INFO:Creating metrics dataframe
2024-12-08 17:39:44,436:INFO:Uploading results into container
2024-12-08 17:39:44,436:INFO:Uploading model into container now
2024-12-08 17:39:44,436:INFO:_master_model_container: 32
2024-12-08 17:39:44,436:INFO:_display_container: 4
2024-12-08 17:39:44,437:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best')
2024-12-08 17:39:44,437:INFO:create_model() successfully completed......................................
2024-12-08 17:39:44,476:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:44,476:INFO:Creating metrics dataframe
2024-12-08 17:39:44,479:INFO:Initializing SVM - Linear Kernel
2024-12-08 17:39:44,480:INFO:Total runtime is 0.016092983881632487 minutes
2024-12-08 17:39:44,481:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:44,481:INFO:Initializing create_model()
2024-12-08 17:39:44,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:44,481:INFO:Checking exceptions
2024-12-08 17:39:44,481:INFO:Importing libraries
2024-12-08 17:39:44,481:INFO:Copying training dataset
2024-12-08 17:39:44,483:INFO:Defining folds
2024-12-08 17:39:44,483:INFO:Declaring metric variables
2024-12-08 17:39:44,485:INFO:Importing untrained model
2024-12-08 17:39:44,486:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 17:39:44,489:INFO:Starting cross validation
2024-12-08 17:39:44,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:44,689:INFO:Calculating mean and std
2024-12-08 17:39:44,690:INFO:Creating metrics dataframe
2024-12-08 17:39:44,691:INFO:Uploading results into container
2024-12-08 17:39:44,691:INFO:Uploading model into container now
2024-12-08 17:39:44,691:INFO:_master_model_container: 33
2024-12-08 17:39:44,691:INFO:_display_container: 4
2024-12-08 17:39:44,692:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 17:39:44,692:INFO:create_model() successfully completed......................................
2024-12-08 17:39:44,741:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:44,741:INFO:Creating metrics dataframe
2024-12-08 17:39:44,745:INFO:Initializing Ridge Classifier
2024-12-08 17:39:44,745:INFO:Total runtime is 0.02051003376642863 minutes
2024-12-08 17:39:44,746:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:44,747:INFO:Initializing create_model()
2024-12-08 17:39:44,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:44,747:INFO:Checking exceptions
2024-12-08 17:39:44,747:INFO:Importing libraries
2024-12-08 17:39:44,747:INFO:Copying training dataset
2024-12-08 17:39:44,750:INFO:Defining folds
2024-12-08 17:39:44,750:INFO:Declaring metric variables
2024-12-08 17:39:44,752:INFO:Importing untrained model
2024-12-08 17:39:44,754:INFO:Ridge Classifier Imported successfully
2024-12-08 17:39:44,757:INFO:Starting cross validation
2024-12-08 17:39:44,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:44,893:INFO:Calculating mean and std
2024-12-08 17:39:44,893:INFO:Creating metrics dataframe
2024-12-08 17:39:44,894:INFO:Uploading results into container
2024-12-08 17:39:44,894:INFO:Uploading model into container now
2024-12-08 17:39:44,895:INFO:_master_model_container: 34
2024-12-08 17:39:44,895:INFO:_display_container: 4
2024-12-08 17:39:44,895:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001)
2024-12-08 17:39:44,895:INFO:create_model() successfully completed......................................
2024-12-08 17:39:44,935:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:44,935:INFO:Creating metrics dataframe
2024-12-08 17:39:44,940:INFO:Initializing Random Forest Classifier
2024-12-08 17:39:44,940:INFO:Total runtime is 0.023768516381581624 minutes
2024-12-08 17:39:44,941:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:44,942:INFO:Initializing create_model()
2024-12-08 17:39:44,942:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:44,942:INFO:Checking exceptions
2024-12-08 17:39:44,942:INFO:Importing libraries
2024-12-08 17:39:44,942:INFO:Copying training dataset
2024-12-08 17:39:44,944:INFO:Defining folds
2024-12-08 17:39:44,944:INFO:Declaring metric variables
2024-12-08 17:39:44,945:INFO:Importing untrained model
2024-12-08 17:39:44,947:INFO:Random Forest Classifier Imported successfully
2024-12-08 17:39:44,949:INFO:Starting cross validation
2024-12-08 17:39:44,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:45,370:INFO:Calculating mean and std
2024-12-08 17:39:45,370:INFO:Creating metrics dataframe
2024-12-08 17:39:45,371:INFO:Uploading results into container
2024-12-08 17:39:45,372:INFO:Uploading model into container now
2024-12-08 17:39:45,372:INFO:_master_model_container: 35
2024-12-08 17:39:45,372:INFO:_display_container: 4
2024-12-08 17:39:45,372:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False)
2024-12-08 17:39:45,372:INFO:create_model() successfully completed......................................
2024-12-08 17:39:45,415:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:45,415:INFO:Creating metrics dataframe
2024-12-08 17:39:45,419:INFO:Initializing Quadratic Discriminant Analysis
2024-12-08 17:39:45,419:INFO:Total runtime is 0.0317474365234375 minutes
2024-12-08 17:39:45,420:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:45,420:INFO:Initializing create_model()
2024-12-08 17:39:45,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:45,420:INFO:Checking exceptions
2024-12-08 17:39:45,421:INFO:Importing libraries
2024-12-08 17:39:45,421:INFO:Copying training dataset
2024-12-08 17:39:45,422:INFO:Defining folds
2024-12-08 17:39:45,422:INFO:Declaring metric variables
2024-12-08 17:39:45,423:INFO:Importing untrained model
2024-12-08 17:39:45,425:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 17:39:45,427:INFO:Starting cross validation
2024-12-08 17:39:45,428:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:45,482:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,486:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,488:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,496:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,498:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,509:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,527:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,536:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,555:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,565:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:45,590:INFO:Calculating mean and std
2024-12-08 17:39:45,591:INFO:Creating metrics dataframe
2024-12-08 17:39:45,592:INFO:Uploading results into container
2024-12-08 17:39:45,592:INFO:Uploading model into container now
2024-12-08 17:39:45,592:INFO:_master_model_container: 36
2024-12-08 17:39:45,592:INFO:_display_container: 4
2024-12-08 17:39:45,592:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 17:39:45,593:INFO:create_model() successfully completed......................................
2024-12-08 17:39:45,636:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:45,636:INFO:Creating metrics dataframe
2024-12-08 17:39:45,641:INFO:Initializing Ada Boost Classifier
2024-12-08 17:39:45,641:INFO:Total runtime is 0.035447398821512856 minutes
2024-12-08 17:39:45,643:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:45,644:INFO:Initializing create_model()
2024-12-08 17:39:45,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:45,644:INFO:Checking exceptions
2024-12-08 17:39:45,644:INFO:Importing libraries
2024-12-08 17:39:45,644:INFO:Copying training dataset
2024-12-08 17:39:45,647:INFO:Defining folds
2024-12-08 17:39:45,647:INFO:Declaring metric variables
2024-12-08 17:39:45,649:INFO:Importing untrained model
2024-12-08 17:39:45,650:INFO:Ada Boost Classifier Imported successfully
2024-12-08 17:39:45,653:INFO:Starting cross validation
2024-12-08 17:39:45,654:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:45,702:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,706:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,733:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,737:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,739:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,748:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,756:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,773:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,823:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,840:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:45,892:INFO:Calculating mean and std
2024-12-08 17:39:45,893:INFO:Creating metrics dataframe
2024-12-08 17:39:45,894:INFO:Uploading results into container
2024-12-08 17:39:45,894:INFO:Uploading model into container now
2024-12-08 17:39:45,894:INFO:_master_model_container: 37
2024-12-08 17:39:45,894:INFO:_display_container: 4
2024-12-08 17:39:45,894:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383)
2024-12-08 17:39:45,894:INFO:create_model() successfully completed......................................
2024-12-08 17:39:45,933:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:45,934:INFO:Creating metrics dataframe
2024-12-08 17:39:45,938:INFO:Initializing Gradient Boosting Classifier
2024-12-08 17:39:45,938:INFO:Total runtime is 0.04039558569590251 minutes
2024-12-08 17:39:45,939:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:45,939:INFO:Initializing create_model()
2024-12-08 17:39:45,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:45,939:INFO:Checking exceptions
2024-12-08 17:39:45,939:INFO:Importing libraries
2024-12-08 17:39:45,939:INFO:Copying training dataset
2024-12-08 17:39:45,941:INFO:Defining folds
2024-12-08 17:39:45,941:INFO:Declaring metric variables
2024-12-08 17:39:45,942:INFO:Importing untrained model
2024-12-08 17:39:45,944:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 17:39:45,946:INFO:Starting cross validation
2024-12-08 17:39:45,947:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:46,214:INFO:Calculating mean and std
2024-12-08 17:39:46,214:INFO:Creating metrics dataframe
2024-12-08 17:39:46,215:INFO:Uploading results into container
2024-12-08 17:39:46,215:INFO:Uploading model into container now
2024-12-08 17:39:46,216:INFO:_master_model_container: 38
2024-12-08 17:39:46,216:INFO:_display_container: 4
2024-12-08 17:39:46,216:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 17:39:46,216:INFO:create_model() successfully completed......................................
2024-12-08 17:39:46,255:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:46,255:INFO:Creating metrics dataframe
2024-12-08 17:39:46,260:INFO:Initializing Linear Discriminant Analysis
2024-12-08 17:39:46,260:INFO:Total runtime is 0.045760369300842284 minutes
2024-12-08 17:39:46,261:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:46,261:INFO:Initializing create_model()
2024-12-08 17:39:46,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:46,261:INFO:Checking exceptions
2024-12-08 17:39:46,261:INFO:Importing libraries
2024-12-08 17:39:46,261:INFO:Copying training dataset
2024-12-08 17:39:46,263:INFO:Defining folds
2024-12-08 17:39:46,263:INFO:Declaring metric variables
2024-12-08 17:39:46,264:INFO:Importing untrained model
2024-12-08 17:39:46,266:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 17:39:46,271:INFO:Starting cross validation
2024-12-08 17:39:46,272:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:46,413:INFO:Calculating mean and std
2024-12-08 17:39:46,414:INFO:Creating metrics dataframe
2024-12-08 17:39:46,415:INFO:Uploading results into container
2024-12-08 17:39:46,415:INFO:Uploading model into container now
2024-12-08 17:39:46,415:INFO:_master_model_container: 39
2024-12-08 17:39:46,415:INFO:_display_container: 4
2024-12-08 17:39:46,416:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 17:39:46,416:INFO:create_model() successfully completed......................................
2024-12-08 17:39:46,460:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:46,460:INFO:Creating metrics dataframe
2024-12-08 17:39:46,464:INFO:Initializing Extra Trees Classifier
2024-12-08 17:39:46,464:INFO:Total runtime is 0.04917445182800293 minutes
2024-12-08 17:39:46,466:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:46,466:INFO:Initializing create_model()
2024-12-08 17:39:46,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:46,467:INFO:Checking exceptions
2024-12-08 17:39:46,467:INFO:Importing libraries
2024-12-08 17:39:46,467:INFO:Copying training dataset
2024-12-08 17:39:46,469:INFO:Defining folds
2024-12-08 17:39:46,469:INFO:Declaring metric variables
2024-12-08 17:39:46,470:INFO:Importing untrained model
2024-12-08 17:39:46,472:INFO:Extra Trees Classifier Imported successfully
2024-12-08 17:39:46,475:INFO:Starting cross validation
2024-12-08 17:39:46,476:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:46,862:INFO:Calculating mean and std
2024-12-08 17:39:46,862:INFO:Creating metrics dataframe
2024-12-08 17:39:46,863:INFO:Uploading results into container
2024-12-08 17:39:46,864:INFO:Uploading model into container now
2024-12-08 17:39:46,864:INFO:_master_model_container: 40
2024-12-08 17:39:46,864:INFO:_display_container: 4
2024-12-08 17:39:46,864:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False)
2024-12-08 17:39:46,864:INFO:create_model() successfully completed......................................
2024-12-08 17:39:46,907:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:46,907:INFO:Creating metrics dataframe
2024-12-08 17:39:46,911:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 17:39:46,911:INFO:Total runtime is 0.05662001768747966 minutes
2024-12-08 17:39:46,912:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:46,913:INFO:Initializing create_model()
2024-12-08 17:39:46,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:46,913:INFO:Checking exceptions
2024-12-08 17:39:46,913:INFO:Importing libraries
2024-12-08 17:39:46,913:INFO:Copying training dataset
2024-12-08 17:39:46,915:INFO:Defining folds
2024-12-08 17:39:46,915:INFO:Declaring metric variables
2024-12-08 17:39:46,916:INFO:Importing untrained model
2024-12-08 17:39:46,917:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:39:46,920:INFO:Starting cross validation
2024-12-08 17:39:46,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:48,987:INFO:Calculating mean and std
2024-12-08 17:39:48,988:INFO:Creating metrics dataframe
2024-12-08 17:39:48,989:INFO:Uploading results into container
2024-12-08 17:39:48,989:INFO:Uploading model into container now
2024-12-08 17:39:48,990:INFO:_master_model_container: 41
2024-12-08 17:39:48,990:INFO:_display_container: 4
2024-12-08 17:39:48,990:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 17:39:48,990:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,033:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:49,033:INFO:Creating metrics dataframe
2024-12-08 17:39:49,037:INFO:Initializing Dummy Classifier
2024-12-08 17:39:49,037:INFO:Total runtime is 0.09205375115076701 minutes
2024-12-08 17:39:49,038:INFO:SubProcess create_model() called ==================================
2024-12-08 17:39:49,039:INFO:Initializing create_model()
2024-12-08 17:39:49,039:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x10359a050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,039:INFO:Checking exceptions
2024-12-08 17:39:49,039:INFO:Importing libraries
2024-12-08 17:39:49,039:INFO:Copying training dataset
2024-12-08 17:39:49,040:INFO:Defining folds
2024-12-08 17:39:49,041:INFO:Declaring metric variables
2024-12-08 17:39:49,042:INFO:Importing untrained model
2024-12-08 17:39:49,043:INFO:Dummy Classifier Imported successfully
2024-12-08 17:39:49,046:INFO:Starting cross validation
2024-12-08 17:39:49,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 17:39:49,131:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,131:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,138:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,140:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,165:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,167:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,169:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,173:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,181:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,188:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 17:39:49,193:INFO:Calculating mean and std
2024-12-08 17:39:49,194:INFO:Creating metrics dataframe
2024-12-08 17:39:49,195:INFO:Uploading results into container
2024-12-08 17:39:49,195:INFO:Uploading model into container now
2024-12-08 17:39:49,195:INFO:_master_model_container: 42
2024-12-08 17:39:49,195:INFO:_display_container: 4
2024-12-08 17:39:49,195:INFO:DummyClassifier(constant=None, random_state=6383, strategy='prior')
2024-12-08 17:39:49,195:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,235:INFO:SubProcess create_model() end ==================================
2024-12-08 17:39:49,235:INFO:Creating metrics dataframe
2024-12-08 17:39:49,242:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-12-08 17:39:49,246:INFO:Initializing create_model()
2024-12-08 17:39:49,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,246:INFO:Checking exceptions
2024-12-08 17:39:49,247:INFO:Importing libraries
2024-12-08 17:39:49,247:INFO:Copying training dataset
2024-12-08 17:39:49,249:INFO:Defining folds
2024-12-08 17:39:49,249:INFO:Declaring metric variables
2024-12-08 17:39:49,249:INFO:Importing untrained model
2024-12-08 17:39:49,249:INFO:Declaring custom model
2024-12-08 17:39:49,249:INFO:Ridge Classifier Imported successfully
2024-12-08 17:39:49,250:INFO:Cross validation set to False
2024-12-08 17:39:49,250:INFO:Fitting Model
2024-12-08 17:39:49,276:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001)
2024-12-08 17:39:49,276:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,321:INFO:Initializing create_model()
2024-12-08 17:39:49,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,321:INFO:Checking exceptions
2024-12-08 17:39:49,322:INFO:Importing libraries
2024-12-08 17:39:49,322:INFO:Copying training dataset
2024-12-08 17:39:49,325:INFO:Defining folds
2024-12-08 17:39:49,325:INFO:Declaring metric variables
2024-12-08 17:39:49,325:INFO:Importing untrained model
2024-12-08 17:39:49,325:INFO:Declaring custom model
2024-12-08 17:39:49,326:INFO:Logistic Regression Imported successfully
2024-12-08 17:39:49,327:INFO:Cross validation set to False
2024-12-08 17:39:49,327:INFO:Fitting Model
2024-12-08 17:39:49,355:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 17:39:49,356:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,397:INFO:Initializing create_model()
2024-12-08 17:39:49,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,397:INFO:Checking exceptions
2024-12-08 17:39:49,397:INFO:Importing libraries
2024-12-08 17:39:49,397:INFO:Copying training dataset
2024-12-08 17:39:49,399:INFO:Defining folds
2024-12-08 17:39:49,399:INFO:Declaring metric variables
2024-12-08 17:39:49,399:INFO:Importing untrained model
2024-12-08 17:39:49,399:INFO:Declaring custom model
2024-12-08 17:39:49,400:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 17:39:49,400:INFO:Cross validation set to False
2024-12-08 17:39:49,400:INFO:Fitting Model
2024-12-08 17:39:49,426:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 17:39:49,426:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,468:INFO:Initializing create_model()
2024-12-08 17:39:49,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,469:INFO:Checking exceptions
2024-12-08 17:39:49,470:INFO:Importing libraries
2024-12-08 17:39:49,470:INFO:Copying training dataset
2024-12-08 17:39:49,472:INFO:Defining folds
2024-12-08 17:39:49,472:INFO:Declaring metric variables
2024-12-08 17:39:49,472:INFO:Importing untrained model
2024-12-08 17:39:49,472:INFO:Declaring custom model
2024-12-08 17:39:49,473:INFO:K Neighbors Classifier Imported successfully
2024-12-08 17:39:49,474:INFO:Cross validation set to False
2024-12-08 17:39:49,474:INFO:Fitting Model
2024-12-08 17:39:49,501:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 17:39:49,502:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,543:INFO:Initializing create_model()
2024-12-08 17:39:49,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,543:INFO:Checking exceptions
2024-12-08 17:39:49,544:INFO:Importing libraries
2024-12-08 17:39:49,544:INFO:Copying training dataset
2024-12-08 17:39:49,546:INFO:Defining folds
2024-12-08 17:39:49,546:INFO:Declaring metric variables
2024-12-08 17:39:49,546:INFO:Importing untrained model
2024-12-08 17:39:49,546:INFO:Declaring custom model
2024-12-08 17:39:49,546:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 17:39:49,547:INFO:Cross validation set to False
2024-12-08 17:39:49,547:INFO:Fitting Model
2024-12-08 17:39:49,623:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 17:39:49,623:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,666:INFO:Initializing create_model()
2024-12-08 17:39:49,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,666:INFO:Checking exceptions
2024-12-08 17:39:49,667:INFO:Importing libraries
2024-12-08 17:39:49,667:INFO:Copying training dataset
2024-12-08 17:39:49,670:INFO:Defining folds
2024-12-08 17:39:49,670:INFO:Declaring metric variables
2024-12-08 17:39:49,671:INFO:Importing untrained model
2024-12-08 17:39:49,671:INFO:Declaring custom model
2024-12-08 17:39:49,671:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 17:39:49,672:INFO:Cross validation set to False
2024-12-08 17:39:49,672:INFO:Fitting Model
2024-12-08 17:39:49,699:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-12-08 17:39:49,700:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000267 seconds.
2024-12-08 17:39:49,700:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-08 17:39:49,700:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-08 17:39:49,700:INFO:[LightGBM] [Info] Total Bins 97
2024-12-08 17:39:49,700:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 8
2024-12-08 17:39:49,700:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-12-08 17:39:49,700:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-12-08 17:39:49,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 17:39:49,948:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 17:39:49,948:INFO:create_model() successfully completed......................................
2024-12-08 17:39:49,989:INFO:Initializing create_model()
2024-12-08 17:39:49,989:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:49,989:INFO:Checking exceptions
2024-12-08 17:39:49,989:INFO:Importing libraries
2024-12-08 17:39:49,989:INFO:Copying training dataset
2024-12-08 17:39:49,991:INFO:Defining folds
2024-12-08 17:39:49,991:INFO:Declaring metric variables
2024-12-08 17:39:49,991:INFO:Importing untrained model
2024-12-08 17:39:49,991:INFO:Declaring custom model
2024-12-08 17:39:49,991:INFO:Random Forest Classifier Imported successfully
2024-12-08 17:39:49,992:INFO:Cross validation set to False
2024-12-08 17:39:49,992:INFO:Fitting Model
2024-12-08 17:39:50,094:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False)
2024-12-08 17:39:50,094:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,137:INFO:Initializing create_model()
2024-12-08 17:39:50,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,137:INFO:Checking exceptions
2024-12-08 17:39:50,138:INFO:Importing libraries
2024-12-08 17:39:50,138:INFO:Copying training dataset
2024-12-08 17:39:50,140:INFO:Defining folds
2024-12-08 17:39:50,140:INFO:Declaring metric variables
2024-12-08 17:39:50,140:INFO:Importing untrained model
2024-12-08 17:39:50,140:INFO:Declaring custom model
2024-12-08 17:39:50,140:INFO:Extra Trees Classifier Imported successfully
2024-12-08 17:39:50,141:INFO:Cross validation set to False
2024-12-08 17:39:50,141:INFO:Fitting Model
2024-12-08 17:39:50,221:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False)
2024-12-08 17:39:50,221:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,263:INFO:Initializing create_model()
2024-12-08 17:39:50,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,263:INFO:Checking exceptions
2024-12-08 17:39:50,264:INFO:Importing libraries
2024-12-08 17:39:50,264:INFO:Copying training dataset
2024-12-08 17:39:50,265:INFO:Defining folds
2024-12-08 17:39:50,265:INFO:Declaring metric variables
2024-12-08 17:39:50,265:INFO:Importing untrained model
2024-12-08 17:39:50,265:INFO:Declaring custom model
2024-12-08 17:39:50,265:INFO:Ada Boost Classifier Imported successfully
2024-12-08 17:39:50,266:INFO:Cross validation set to False
2024-12-08 17:39:50,266:INFO:Fitting Model
2024-12-08 17:39:50,291:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 17:39:50,323:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383)
2024-12-08 17:39:50,323:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,364:INFO:Initializing create_model()
2024-12-08 17:39:50,364:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,364:INFO:Checking exceptions
2024-12-08 17:39:50,365:INFO:Importing libraries
2024-12-08 17:39:50,365:INFO:Copying training dataset
2024-12-08 17:39:50,367:INFO:Defining folds
2024-12-08 17:39:50,367:INFO:Declaring metric variables
2024-12-08 17:39:50,367:INFO:Importing untrained model
2024-12-08 17:39:50,367:INFO:Declaring custom model
2024-12-08 17:39:50,367:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 17:39:50,368:INFO:Cross validation set to False
2024-12-08 17:39:50,368:INFO:Fitting Model
2024-12-08 17:39:50,394:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 17:39:50,394:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,436:INFO:Initializing create_model()
2024-12-08 17:39:50,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,436:INFO:Checking exceptions
2024-12-08 17:39:50,436:INFO:Importing libraries
2024-12-08 17:39:50,436:INFO:Copying training dataset
2024-12-08 17:39:50,438:INFO:Defining folds
2024-12-08 17:39:50,438:INFO:Declaring metric variables
2024-12-08 17:39:50,438:INFO:Importing untrained model
2024-12-08 17:39:50,438:INFO:Declaring custom model
2024-12-08 17:39:50,438:INFO:Naive Bayes Imported successfully
2024-12-08 17:39:50,439:INFO:Cross validation set to False
2024-12-08 17:39:50,439:INFO:Fitting Model
2024-12-08 17:39:50,464:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 17:39:50,465:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,507:INFO:Initializing create_model()
2024-12-08 17:39:50,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,507:INFO:Checking exceptions
2024-12-08 17:39:50,508:INFO:Importing libraries
2024-12-08 17:39:50,508:INFO:Copying training dataset
2024-12-08 17:39:50,511:INFO:Defining folds
2024-12-08 17:39:50,511:INFO:Declaring metric variables
2024-12-08 17:39:50,511:INFO:Importing untrained model
2024-12-08 17:39:50,511:INFO:Declaring custom model
2024-12-08 17:39:50,512:INFO:Decision Tree Classifier Imported successfully
2024-12-08 17:39:50,513:INFO:Cross validation set to False
2024-12-08 17:39:50,513:INFO:Fitting Model
2024-12-08 17:39:50,540:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best')
2024-12-08 17:39:50,540:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,582:INFO:Initializing create_model()
2024-12-08 17:39:50,582:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,582:INFO:Checking exceptions
2024-12-08 17:39:50,583:INFO:Importing libraries
2024-12-08 17:39:50,583:INFO:Copying training dataset
2024-12-08 17:39:50,584:INFO:Defining folds
2024-12-08 17:39:50,585:INFO:Declaring metric variables
2024-12-08 17:39:50,585:INFO:Importing untrained model
2024-12-08 17:39:50,585:INFO:Declaring custom model
2024-12-08 17:39:50,585:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 17:39:50,585:INFO:Cross validation set to False
2024-12-08 17:39:50,586:INFO:Fitting Model
2024-12-08 17:39:50,611:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 17:39:50,611:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 17:39:50,612:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,654:INFO:Initializing create_model()
2024-12-08 17:39:50,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x178c70f70>, estimator=DummyClassifier(constant=None, random_state=6383, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 17:39:50,654:INFO:Checking exceptions
2024-12-08 17:39:50,655:INFO:Importing libraries
2024-12-08 17:39:50,655:INFO:Copying training dataset
2024-12-08 17:39:50,656:INFO:Defining folds
2024-12-08 17:39:50,656:INFO:Declaring metric variables
2024-12-08 17:39:50,656:INFO:Importing untrained model
2024-12-08 17:39:50,656:INFO:Declaring custom model
2024-12-08 17:39:50,656:INFO:Dummy Classifier Imported successfully
2024-12-08 17:39:50,657:INFO:Cross validation set to False
2024-12-08 17:39:50,657:INFO:Fitting Model
2024-12-08 17:39:50,685:INFO:DummyClassifier(constant=None, random_state=6383, strategy='prior')
2024-12-08 17:39:50,685:INFO:create_model() successfully completed......................................
2024-12-08 17:39:50,735:INFO:_master_model_container: 42
2024-12-08 17:39:50,735:INFO:_display_container: 4
2024-12-08 17:39:50,737:INFO:[RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6383, solver='auto',
                tol=0.0001), LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6383, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6383, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6383, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6383, verbose=0,
                       warm_start=False), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6383, verbose=0,
                     warm_start=False), AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6383), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6383, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6383, splitter='best'), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), DummyClassifier(constant=None, random_state=6383, strategy='prior')]
2024-12-08 17:39:50,737:INFO:compare_models() successfully completed......................................
2024-12-08 21:59:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:59:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:59:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:59:31,749:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 21:59:41,628:INFO:PyCaret ClassificationExperiment
2024-12-08 21:59:41,628:INFO:Logging name: clf-default-name
2024-12-08 21:59:41,628:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-08 21:59:41,628:INFO:version 3.3.2
2024-12-08 21:59:41,628:INFO:Initializing setup()
2024-12-08 21:59:41,628:INFO:self.USI: 3761
2024-12-08 21:59:41,628:INFO:self._variable_keys: {'USI', 'X_test', 'gpu_n_jobs_param', 'X_train', 'y', 'fold_generator', '_ml_usecase', 'exp_id', 'fix_imbalance', 'y_train', 'logging_param', 'gpu_param', 'X', '_available_plots', 'n_jobs_param', 'y_test', 'is_multiclass', 'target_param', 'html_param', 'idx', 'exp_name_log', 'fold_groups_param', 'fold_shuffle_param', 'pipeline', 'log_plots_param', 'seed', 'memory', 'data'}
2024-12-08 21:59:41,628:INFO:Checking environment
2024-12-08 21:59:41,628:INFO:python_version: 3.10.13
2024-12-08 21:59:41,629:INFO:python_build: ('main', 'Mar 20 2024 16:49:28')
2024-12-08 21:59:41,629:INFO:machine: arm64
2024-12-08 21:59:41,629:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-12-08 21:59:41,629:INFO:Memory: svmem(total=8589934592, available=2016673792, percent=76.5, used=3408805888, free=35160064, active=1994997760, inactive=1968553984, wired=1413808128)
2024-12-08 21:59:41,629:INFO:Physical Core: 8
2024-12-08 21:59:41,629:INFO:Logical Core: 8
2024-12-08 21:59:41,629:INFO:Checking libraries
2024-12-08 21:59:41,629:INFO:System:
2024-12-08 21:59:41,629:INFO:    python: 3.10.13 (main, Mar 20 2024, 16:49:28) [Clang 14.0.3 (clang-1403.0.22.14.1)]
2024-12-08 21:59:41,629:INFO:executable: /Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/bin/python
2024-12-08 21:59:41,629:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-12-08 21:59:41,629:INFO:PyCaret required dependencies:
2024-12-08 21:59:41,673:INFO:                 pip: 23.0.1
2024-12-08 21:59:41,673:INFO:          setuptools: 65.5.0
2024-12-08 21:59:41,673:INFO:             pycaret: 3.3.2
2024-12-08 21:59:41,673:INFO:             IPython: 8.30.0
2024-12-08 21:59:41,673:INFO:          ipywidgets: 8.1.5
2024-12-08 21:59:41,673:INFO:                tqdm: 4.67.1
2024-12-08 21:59:41,673:INFO:               numpy: 1.26.4
2024-12-08 21:59:41,673:INFO:              pandas: 2.1.4
2024-12-08 21:59:41,673:INFO:              jinja2: 3.1.4
2024-12-08 21:59:41,673:INFO:               scipy: 1.11.4
2024-12-08 21:59:41,674:INFO:              joblib: 1.3.2
2024-12-08 21:59:41,674:INFO:             sklearn: 1.4.2
2024-12-08 21:59:41,674:INFO:                pyod: 2.0.2
2024-12-08 21:59:41,674:INFO:            imblearn: 0.12.4
2024-12-08 21:59:41,674:INFO:   category_encoders: 2.6.4
2024-12-08 21:59:41,674:INFO:            lightgbm: 4.5.0
2024-12-08 21:59:41,674:INFO:               numba: 0.60.0
2024-12-08 21:59:41,674:INFO:            requests: 2.32.3
2024-12-08 21:59:41,674:INFO:          matplotlib: 3.7.5
2024-12-08 21:59:41,674:INFO:          scikitplot: 0.3.7
2024-12-08 21:59:41,674:INFO:         yellowbrick: 1.5
2024-12-08 21:59:41,674:INFO:              plotly: 5.24.1
2024-12-08 21:59:41,674:INFO:    plotly-resampler: Not installed
2024-12-08 21:59:41,674:INFO:             kaleido: 0.2.1
2024-12-08 21:59:41,674:INFO:           schemdraw: 0.15
2024-12-08 21:59:41,674:INFO:         statsmodels: 0.14.4
2024-12-08 21:59:41,674:INFO:              sktime: 0.26.0
2024-12-08 21:59:41,674:INFO:               tbats: 1.1.3
2024-12-08 21:59:41,674:INFO:            pmdarima: 2.0.4
2024-12-08 21:59:41,674:INFO:              psutil: 6.1.0
2024-12-08 21:59:41,674:INFO:          markupsafe: 3.0.2
2024-12-08 21:59:41,674:INFO:             pickle5: Not installed
2024-12-08 21:59:41,674:INFO:         cloudpickle: 3.1.0
2024-12-08 21:59:41,674:INFO:         deprecation: 2.1.0
2024-12-08 21:59:41,674:INFO:              xxhash: 3.5.0
2024-12-08 21:59:41,674:INFO:           wurlitzer: 3.1.1
2024-12-08 21:59:41,674:INFO:PyCaret optional dependencies:
2024-12-08 21:59:41,683:INFO:                shap: Not installed
2024-12-08 21:59:41,683:INFO:           interpret: Not installed
2024-12-08 21:59:41,683:INFO:                umap: Not installed
2024-12-08 21:59:41,683:INFO:     ydata_profiling: Not installed
2024-12-08 21:59:41,683:INFO:  explainerdashboard: Not installed
2024-12-08 21:59:41,683:INFO:             autoviz: Not installed
2024-12-08 21:59:41,683:INFO:           fairlearn: Not installed
2024-12-08 21:59:41,683:INFO:          deepchecks: Not installed
2024-12-08 21:59:41,683:INFO:             xgboost: Not installed
2024-12-08 21:59:41,683:INFO:            catboost: Not installed
2024-12-08 21:59:41,683:INFO:              kmodes: Not installed
2024-12-08 21:59:41,683:INFO:             mlxtend: Not installed
2024-12-08 21:59:41,683:INFO:       statsforecast: Not installed
2024-12-08 21:59:41,683:INFO:        tune_sklearn: Not installed
2024-12-08 21:59:41,683:INFO:                 ray: Not installed
2024-12-08 21:59:41,683:INFO:            hyperopt: Not installed
2024-12-08 21:59:41,683:INFO:              optuna: Not installed
2024-12-08 21:59:41,683:INFO:               skopt: Not installed
2024-12-08 21:59:41,683:INFO:              mlflow: Not installed
2024-12-08 21:59:41,683:INFO:              gradio: Not installed
2024-12-08 21:59:41,684:INFO:             fastapi: Not installed
2024-12-08 21:59:41,684:INFO:             uvicorn: Not installed
2024-12-08 21:59:41,684:INFO:              m2cgen: Not installed
2024-12-08 21:59:41,684:INFO:           evidently: Not installed
2024-12-08 21:59:41,684:INFO:               fugue: Not installed
2024-12-08 21:59:41,684:INFO:           streamlit: Not installed
2024-12-08 21:59:41,684:INFO:             prophet: Not installed
2024-12-08 21:59:41,684:INFO:None
2024-12-08 21:59:41,684:INFO:Set up data.
2024-12-08 21:59:41,687:INFO:Set up folding strategy.
2024-12-08 21:59:41,687:INFO:Set up train/test split.
2024-12-08 21:59:41,695:INFO:Set up index.
2024-12-08 21:59:41,695:INFO:Assigning column types.
2024-12-08 21:59:41,696:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-08 21:59:41,718:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 21:59:41,720:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 21:59:41,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 21:59:41,754:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 21:59:41,765:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,765:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,765:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-08 21:59:41,784:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 21:59:41,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,815:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 21:59:41,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,826:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-08 21:59:41,856:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,856:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:41,889:INFO:Preparing preprocessing pipeline...
2024-12-08 21:59:41,890:INFO:Set up simple imputation.
2024-12-08 21:59:41,892:INFO:Set up encoding of ordinal features.
2024-12-08 21:59:41,892:INFO:Set up encoding of categorical features.
2024-12-08 21:59:41,928:INFO:Finished creating preprocessing pipeline.
2024-12-08 21:59:41,936:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/ly/r3w75pz12l9_ncftrb2dwt4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['SibSp', 'Parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerW...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Age', 'Fare'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'Fare'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-12-08 21:59:41,936:INFO:Creating final display dataframe.
2024-12-08 21:59:42,032:INFO:Setup _display_container:                     Description             Value
0                    Session id              6229
1                        Target          Survived
2                   Target type            Binary
3           Original data shape          (891, 7)
4        Transformed data shape          (891, 9)
5   Transformed train set shape          (623, 9)
6    Transformed test set shape          (268, 9)
7              Numeric features                 2
8          Categorical features                 4
9      Rows with missing values             19.9%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              3761
2024-12-08 21:59:42,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:42,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:42,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:42,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 21:59:42,099:INFO:setup() successfully completed in 0.48s...............
2024-12-08 21:59:46,055:INFO:Initializing compare_models()
2024-12-08 21:59:46,055:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=16, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 16, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-08 21:59:46,055:INFO:Checking exceptions
2024-12-08 21:59:46,060:INFO:Preparing display monitor
2024-12-08 21:59:46,106:INFO:Initializing Logistic Regression
2024-12-08 21:59:46,107:INFO:Total runtime is 2.9285748799641927e-06 minutes
2024-12-08 21:59:46,110:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:46,110:INFO:Initializing create_model()
2024-12-08 21:59:46,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:46,111:INFO:Checking exceptions
2024-12-08 21:59:46,111:INFO:Importing libraries
2024-12-08 21:59:46,111:INFO:Copying training dataset
2024-12-08 21:59:46,116:INFO:Defining folds
2024-12-08 21:59:46,116:INFO:Declaring metric variables
2024-12-08 21:59:46,120:INFO:Importing untrained model
2024-12-08 21:59:46,124:INFO:Logistic Regression Imported successfully
2024-12-08 21:59:46,131:INFO:Starting cross validation
2024-12-08 21:59:46,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:49,662:INFO:Calculating mean and std
2024-12-08 21:59:49,667:INFO:Creating metrics dataframe
2024-12-08 21:59:49,672:INFO:Uploading results into container
2024-12-08 21:59:49,672:INFO:Uploading model into container now
2024-12-08 21:59:49,673:INFO:_master_model_container: 1
2024-12-08 21:59:49,673:INFO:_display_container: 2
2024-12-08 21:59:49,674:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6229, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 21:59:49,674:INFO:create_model() successfully completed......................................
2024-12-08 21:59:49,737:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:49,738:INFO:Creating metrics dataframe
2024-12-08 21:59:49,741:INFO:Initializing K Neighbors Classifier
2024-12-08 21:59:49,741:INFO:Total runtime is 0.060572747389475504 minutes
2024-12-08 21:59:49,742:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:49,742:INFO:Initializing create_model()
2024-12-08 21:59:49,742:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:49,742:INFO:Checking exceptions
2024-12-08 21:59:49,742:INFO:Importing libraries
2024-12-08 21:59:49,742:INFO:Copying training dataset
2024-12-08 21:59:49,744:INFO:Defining folds
2024-12-08 21:59:49,744:INFO:Declaring metric variables
2024-12-08 21:59:49,745:INFO:Importing untrained model
2024-12-08 21:59:49,746:INFO:K Neighbors Classifier Imported successfully
2024-12-08 21:59:49,749:INFO:Starting cross validation
2024-12-08 21:59:49,750:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:49,952:INFO:Calculating mean and std
2024-12-08 21:59:49,953:INFO:Creating metrics dataframe
2024-12-08 21:59:49,954:INFO:Uploading results into container
2024-12-08 21:59:49,955:INFO:Uploading model into container now
2024-12-08 21:59:49,955:INFO:_master_model_container: 2
2024-12-08 21:59:49,955:INFO:_display_container: 2
2024-12-08 21:59:49,955:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 21:59:49,955:INFO:create_model() successfully completed......................................
2024-12-08 21:59:49,995:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:49,996:INFO:Creating metrics dataframe
2024-12-08 21:59:49,999:INFO:Initializing Naive Bayes
2024-12-08 21:59:49,999:INFO:Total runtime is 0.06487339735031128 minutes
2024-12-08 21:59:50,000:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:50,000:INFO:Initializing create_model()
2024-12-08 21:59:50,000:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:50,000:INFO:Checking exceptions
2024-12-08 21:59:50,000:INFO:Importing libraries
2024-12-08 21:59:50,000:INFO:Copying training dataset
2024-12-08 21:59:50,002:INFO:Defining folds
2024-12-08 21:59:50,002:INFO:Declaring metric variables
2024-12-08 21:59:50,004:INFO:Importing untrained model
2024-12-08 21:59:50,005:INFO:Naive Bayes Imported successfully
2024-12-08 21:59:50,008:INFO:Starting cross validation
2024-12-08 21:59:50,009:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:50,149:INFO:Calculating mean and std
2024-12-08 21:59:50,150:INFO:Creating metrics dataframe
2024-12-08 21:59:50,150:INFO:Uploading results into container
2024-12-08 21:59:50,151:INFO:Uploading model into container now
2024-12-08 21:59:50,151:INFO:_master_model_container: 3
2024-12-08 21:59:50,151:INFO:_display_container: 2
2024-12-08 21:59:50,151:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 21:59:50,151:INFO:create_model() successfully completed......................................
2024-12-08 21:59:50,189:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:50,189:INFO:Creating metrics dataframe
2024-12-08 21:59:50,193:INFO:Initializing Decision Tree Classifier
2024-12-08 21:59:50,193:INFO:Total runtime is 0.06810843149820964 minutes
2024-12-08 21:59:50,195:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:50,196:INFO:Initializing create_model()
2024-12-08 21:59:50,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:50,196:INFO:Checking exceptions
2024-12-08 21:59:50,196:INFO:Importing libraries
2024-12-08 21:59:50,196:INFO:Copying training dataset
2024-12-08 21:59:50,198:INFO:Defining folds
2024-12-08 21:59:50,198:INFO:Declaring metric variables
2024-12-08 21:59:50,200:INFO:Importing untrained model
2024-12-08 21:59:50,201:INFO:Decision Tree Classifier Imported successfully
2024-12-08 21:59:50,204:INFO:Starting cross validation
2024-12-08 21:59:50,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:50,350:INFO:Calculating mean and std
2024-12-08 21:59:50,351:INFO:Creating metrics dataframe
2024-12-08 21:59:50,352:INFO:Uploading results into container
2024-12-08 21:59:50,352:INFO:Uploading model into container now
2024-12-08 21:59:50,353:INFO:_master_model_container: 4
2024-12-08 21:59:50,353:INFO:_display_container: 2
2024-12-08 21:59:50,353:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6229, splitter='best')
2024-12-08 21:59:50,353:INFO:create_model() successfully completed......................................
2024-12-08 21:59:50,393:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:50,394:INFO:Creating metrics dataframe
2024-12-08 21:59:50,397:INFO:Initializing SVM - Linear Kernel
2024-12-08 21:59:50,397:INFO:Total runtime is 0.07151133219401042 minutes
2024-12-08 21:59:50,398:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:50,398:INFO:Initializing create_model()
2024-12-08 21:59:50,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:50,399:INFO:Checking exceptions
2024-12-08 21:59:50,399:INFO:Importing libraries
2024-12-08 21:59:50,399:INFO:Copying training dataset
2024-12-08 21:59:50,401:INFO:Defining folds
2024-12-08 21:59:50,401:INFO:Declaring metric variables
2024-12-08 21:59:50,402:INFO:Importing untrained model
2024-12-08 21:59:50,404:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 21:59:50,407:INFO:Starting cross validation
2024-12-08 21:59:50,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:50,551:INFO:Calculating mean and std
2024-12-08 21:59:50,552:INFO:Creating metrics dataframe
2024-12-08 21:59:50,553:INFO:Uploading results into container
2024-12-08 21:59:50,553:INFO:Uploading model into container now
2024-12-08 21:59:50,553:INFO:_master_model_container: 5
2024-12-08 21:59:50,553:INFO:_display_container: 2
2024-12-08 21:59:50,554:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6229, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 21:59:50,554:INFO:create_model() successfully completed......................................
2024-12-08 21:59:50,594:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:50,594:INFO:Creating metrics dataframe
2024-12-08 21:59:50,597:INFO:Initializing Ridge Classifier
2024-12-08 21:59:50,597:INFO:Total runtime is 0.07484949429829915 minutes
2024-12-08 21:59:50,599:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:50,599:INFO:Initializing create_model()
2024-12-08 21:59:50,599:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:50,599:INFO:Checking exceptions
2024-12-08 21:59:50,599:INFO:Importing libraries
2024-12-08 21:59:50,599:INFO:Copying training dataset
2024-12-08 21:59:50,601:INFO:Defining folds
2024-12-08 21:59:50,601:INFO:Declaring metric variables
2024-12-08 21:59:50,603:INFO:Importing untrained model
2024-12-08 21:59:50,604:INFO:Ridge Classifier Imported successfully
2024-12-08 21:59:50,607:INFO:Starting cross validation
2024-12-08 21:59:50,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:50,740:INFO:Calculating mean and std
2024-12-08 21:59:50,741:INFO:Creating metrics dataframe
2024-12-08 21:59:50,742:INFO:Uploading results into container
2024-12-08 21:59:50,742:INFO:Uploading model into container now
2024-12-08 21:59:50,742:INFO:_master_model_container: 6
2024-12-08 21:59:50,742:INFO:_display_container: 2
2024-12-08 21:59:50,743:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6229, solver='auto',
                tol=0.0001)
2024-12-08 21:59:50,743:INFO:create_model() successfully completed......................................
2024-12-08 21:59:50,782:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:50,782:INFO:Creating metrics dataframe
2024-12-08 21:59:50,786:INFO:Initializing Random Forest Classifier
2024-12-08 21:59:50,786:INFO:Total runtime is 0.07799441417058309 minutes
2024-12-08 21:59:50,787:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:50,788:INFO:Initializing create_model()
2024-12-08 21:59:50,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:50,788:INFO:Checking exceptions
2024-12-08 21:59:50,788:INFO:Importing libraries
2024-12-08 21:59:50,788:INFO:Copying training dataset
2024-12-08 21:59:50,790:INFO:Defining folds
2024-12-08 21:59:50,790:INFO:Declaring metric variables
2024-12-08 21:59:50,791:INFO:Importing untrained model
2024-12-08 21:59:50,793:INFO:Random Forest Classifier Imported successfully
2024-12-08 21:59:50,796:INFO:Starting cross validation
2024-12-08 21:59:50,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:51,224:INFO:Calculating mean and std
2024-12-08 21:59:51,224:INFO:Creating metrics dataframe
2024-12-08 21:59:51,226:INFO:Uploading results into container
2024-12-08 21:59:51,226:INFO:Uploading model into container now
2024-12-08 21:59:51,226:INFO:_master_model_container: 7
2024-12-08 21:59:51,226:INFO:_display_container: 2
2024-12-08 21:59:51,226:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6229, verbose=0,
                       warm_start=False)
2024-12-08 21:59:51,226:INFO:create_model() successfully completed......................................
2024-12-08 21:59:51,267:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:51,268:INFO:Creating metrics dataframe
2024-12-08 21:59:51,271:INFO:Initializing Quadratic Discriminant Analysis
2024-12-08 21:59:51,271:INFO:Total runtime is 0.08608328104019165 minutes
2024-12-08 21:59:51,273:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:51,273:INFO:Initializing create_model()
2024-12-08 21:59:51,273:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:51,273:INFO:Checking exceptions
2024-12-08 21:59:51,273:INFO:Importing libraries
2024-12-08 21:59:51,273:INFO:Copying training dataset
2024-12-08 21:59:51,275:INFO:Defining folds
2024-12-08 21:59:51,275:INFO:Declaring metric variables
2024-12-08 21:59:51,276:INFO:Importing untrained model
2024-12-08 21:59:51,277:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 21:59:51,280:INFO:Starting cross validation
2024-12-08 21:59:51,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:51,349:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,351:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,353:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,361:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,363:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,365:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,368:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,376:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,401:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,408:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:51,433:INFO:Calculating mean and std
2024-12-08 21:59:51,434:INFO:Creating metrics dataframe
2024-12-08 21:59:51,435:INFO:Uploading results into container
2024-12-08 21:59:51,435:INFO:Uploading model into container now
2024-12-08 21:59:51,435:INFO:_master_model_container: 8
2024-12-08 21:59:51,435:INFO:_display_container: 2
2024-12-08 21:59:51,436:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 21:59:51,436:INFO:create_model() successfully completed......................................
2024-12-08 21:59:51,476:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:51,476:INFO:Creating metrics dataframe
2024-12-08 21:59:51,480:INFO:Initializing Ada Boost Classifier
2024-12-08 21:59:51,480:INFO:Total runtime is 0.08955441315968832 minutes
2024-12-08 21:59:51,481:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:51,481:INFO:Initializing create_model()
2024-12-08 21:59:51,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:51,481:INFO:Checking exceptions
2024-12-08 21:59:51,481:INFO:Importing libraries
2024-12-08 21:59:51,481:INFO:Copying training dataset
2024-12-08 21:59:51,483:INFO:Defining folds
2024-12-08 21:59:51,483:INFO:Declaring metric variables
2024-12-08 21:59:51,484:INFO:Importing untrained model
2024-12-08 21:59:51,486:INFO:Ada Boost Classifier Imported successfully
2024-12-08 21:59:51,489:INFO:Starting cross validation
2024-12-08 21:59:51,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:51,541:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,542:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,562:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,566:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,571:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,578:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,579:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,586:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,659:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,660:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:51,718:INFO:Calculating mean and std
2024-12-08 21:59:51,718:INFO:Creating metrics dataframe
2024-12-08 21:59:51,719:INFO:Uploading results into container
2024-12-08 21:59:51,719:INFO:Uploading model into container now
2024-12-08 21:59:51,719:INFO:_master_model_container: 9
2024-12-08 21:59:51,719:INFO:_display_container: 2
2024-12-08 21:59:51,720:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6229)
2024-12-08 21:59:51,720:INFO:create_model() successfully completed......................................
2024-12-08 21:59:51,759:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:51,759:INFO:Creating metrics dataframe
2024-12-08 21:59:51,763:INFO:Initializing Gradient Boosting Classifier
2024-12-08 21:59:51,763:INFO:Total runtime is 0.09427536328633626 minutes
2024-12-08 21:59:51,764:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:51,764:INFO:Initializing create_model()
2024-12-08 21:59:51,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:51,764:INFO:Checking exceptions
2024-12-08 21:59:51,764:INFO:Importing libraries
2024-12-08 21:59:51,765:INFO:Copying training dataset
2024-12-08 21:59:51,766:INFO:Defining folds
2024-12-08 21:59:51,766:INFO:Declaring metric variables
2024-12-08 21:59:51,768:INFO:Importing untrained model
2024-12-08 21:59:51,769:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 21:59:51,771:INFO:Starting cross validation
2024-12-08 21:59:51,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:52,036:INFO:Calculating mean and std
2024-12-08 21:59:52,037:INFO:Creating metrics dataframe
2024-12-08 21:59:52,038:INFO:Uploading results into container
2024-12-08 21:59:52,038:INFO:Uploading model into container now
2024-12-08 21:59:52,038:INFO:_master_model_container: 10
2024-12-08 21:59:52,038:INFO:_display_container: 2
2024-12-08 21:59:52,039:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6229, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 21:59:52,039:INFO:create_model() successfully completed......................................
2024-12-08 21:59:52,078:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:52,078:INFO:Creating metrics dataframe
2024-12-08 21:59:52,082:INFO:Initializing Linear Discriminant Analysis
2024-12-08 21:59:52,082:INFO:Total runtime is 0.0996009627978007 minutes
2024-12-08 21:59:52,084:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:52,084:INFO:Initializing create_model()
2024-12-08 21:59:52,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:52,084:INFO:Checking exceptions
2024-12-08 21:59:52,084:INFO:Importing libraries
2024-12-08 21:59:52,084:INFO:Copying training dataset
2024-12-08 21:59:52,086:INFO:Defining folds
2024-12-08 21:59:52,086:INFO:Declaring metric variables
2024-12-08 21:59:52,087:INFO:Importing untrained model
2024-12-08 21:59:52,089:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 21:59:52,091:INFO:Starting cross validation
2024-12-08 21:59:52,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:52,249:INFO:Calculating mean and std
2024-12-08 21:59:52,250:INFO:Creating metrics dataframe
2024-12-08 21:59:52,250:INFO:Uploading results into container
2024-12-08 21:59:52,251:INFO:Uploading model into container now
2024-12-08 21:59:52,251:INFO:_master_model_container: 11
2024-12-08 21:59:52,251:INFO:_display_container: 2
2024-12-08 21:59:52,251:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 21:59:52,251:INFO:create_model() successfully completed......................................
2024-12-08 21:59:52,290:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:52,290:INFO:Creating metrics dataframe
2024-12-08 21:59:52,295:INFO:Initializing Extra Trees Classifier
2024-12-08 21:59:52,295:INFO:Total runtime is 0.10314629872639974 minutes
2024-12-08 21:59:52,297:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:52,297:INFO:Initializing create_model()
2024-12-08 21:59:52,297:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:52,297:INFO:Checking exceptions
2024-12-08 21:59:52,297:INFO:Importing libraries
2024-12-08 21:59:52,297:INFO:Copying training dataset
2024-12-08 21:59:52,299:INFO:Defining folds
2024-12-08 21:59:52,299:INFO:Declaring metric variables
2024-12-08 21:59:52,301:INFO:Importing untrained model
2024-12-08 21:59:52,302:INFO:Extra Trees Classifier Imported successfully
2024-12-08 21:59:52,305:INFO:Starting cross validation
2024-12-08 21:59:52,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:52,687:INFO:Calculating mean and std
2024-12-08 21:59:52,688:INFO:Creating metrics dataframe
2024-12-08 21:59:52,689:INFO:Uploading results into container
2024-12-08 21:59:52,689:INFO:Uploading model into container now
2024-12-08 21:59:52,690:INFO:_master_model_container: 12
2024-12-08 21:59:52,690:INFO:_display_container: 2
2024-12-08 21:59:52,690:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6229, verbose=0,
                     warm_start=False)
2024-12-08 21:59:52,690:INFO:create_model() successfully completed......................................
2024-12-08 21:59:52,730:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:52,730:INFO:Creating metrics dataframe
2024-12-08 21:59:52,734:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 21:59:52,734:INFO:Total runtime is 0.11046338081359863 minutes
2024-12-08 21:59:52,736:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:52,736:INFO:Initializing create_model()
2024-12-08 21:59:52,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:52,736:INFO:Checking exceptions
2024-12-08 21:59:52,736:INFO:Importing libraries
2024-12-08 21:59:52,736:INFO:Copying training dataset
2024-12-08 21:59:52,737:INFO:Defining folds
2024-12-08 21:59:52,738:INFO:Declaring metric variables
2024-12-08 21:59:52,739:INFO:Importing untrained model
2024-12-08 21:59:52,740:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 21:59:52,743:INFO:Starting cross validation
2024-12-08 21:59:52,743:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:54,829:INFO:Calculating mean and std
2024-12-08 21:59:54,830:INFO:Creating metrics dataframe
2024-12-08 21:59:54,831:INFO:Uploading results into container
2024-12-08 21:59:54,831:INFO:Uploading model into container now
2024-12-08 21:59:54,832:INFO:_master_model_container: 13
2024-12-08 21:59:54,832:INFO:_display_container: 2
2024-12-08 21:59:54,832:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6229, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 21:59:54,832:INFO:create_model() successfully completed......................................
2024-12-08 21:59:54,880:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:54,880:INFO:Creating metrics dataframe
2024-12-08 21:59:54,885:INFO:Initializing Dummy Classifier
2024-12-08 21:59:54,885:INFO:Total runtime is 0.14630394776662192 minutes
2024-12-08 21:59:54,886:INFO:SubProcess create_model() called ==================================
2024-12-08 21:59:54,886:INFO:Initializing create_model()
2024-12-08 21:59:54,886:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x163f8fa60>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:54,886:INFO:Checking exceptions
2024-12-08 21:59:54,886:INFO:Importing libraries
2024-12-08 21:59:54,886:INFO:Copying training dataset
2024-12-08 21:59:54,888:INFO:Defining folds
2024-12-08 21:59:54,889:INFO:Declaring metric variables
2024-12-08 21:59:54,890:INFO:Importing untrained model
2024-12-08 21:59:54,892:INFO:Dummy Classifier Imported successfully
2024-12-08 21:59:54,894:INFO:Starting cross validation
2024-12-08 21:59:54,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 21:59:54,991:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:54,991:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:54,995:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:54,998:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:54,999:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:55,012:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:55,013:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:55,017:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:55,037:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:55,038:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 21:59:55,047:INFO:Calculating mean and std
2024-12-08 21:59:55,047:INFO:Creating metrics dataframe
2024-12-08 21:59:55,048:INFO:Uploading results into container
2024-12-08 21:59:55,049:INFO:Uploading model into container now
2024-12-08 21:59:55,049:INFO:_master_model_container: 14
2024-12-08 21:59:55,049:INFO:_display_container: 2
2024-12-08 21:59:55,049:INFO:DummyClassifier(constant=None, random_state=6229, strategy='prior')
2024-12-08 21:59:55,049:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,091:INFO:SubProcess create_model() end ==================================
2024-12-08 21:59:55,091:INFO:Creating metrics dataframe
2024-12-08 21:59:55,098:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-12-08 21:59:55,102:INFO:Initializing create_model()
2024-12-08 21:59:55,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6229, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,102:INFO:Checking exceptions
2024-12-08 21:59:55,103:INFO:Importing libraries
2024-12-08 21:59:55,103:INFO:Copying training dataset
2024-12-08 21:59:55,105:INFO:Defining folds
2024-12-08 21:59:55,105:INFO:Declaring metric variables
2024-12-08 21:59:55,105:INFO:Importing untrained model
2024-12-08 21:59:55,105:INFO:Declaring custom model
2024-12-08 21:59:55,105:INFO:Logistic Regression Imported successfully
2024-12-08 21:59:55,106:INFO:Cross validation set to False
2024-12-08 21:59:55,106:INFO:Fitting Model
2024-12-08 21:59:55,137:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6229, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 21:59:55,137:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,179:INFO:Initializing create_model()
2024-12-08 21:59:55,179:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6229, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,179:INFO:Checking exceptions
2024-12-08 21:59:55,180:INFO:Importing libraries
2024-12-08 21:59:55,180:INFO:Copying training dataset
2024-12-08 21:59:55,183:INFO:Defining folds
2024-12-08 21:59:55,183:INFO:Declaring metric variables
2024-12-08 21:59:55,183:INFO:Importing untrained model
2024-12-08 21:59:55,184:INFO:Declaring custom model
2024-12-08 21:59:55,184:INFO:Ridge Classifier Imported successfully
2024-12-08 21:59:55,185:INFO:Cross validation set to False
2024-12-08 21:59:55,185:INFO:Fitting Model
2024-12-08 21:59:55,212:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6229, solver='auto',
                tol=0.0001)
2024-12-08 21:59:55,212:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,254:INFO:Initializing create_model()
2024-12-08 21:59:55,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,254:INFO:Checking exceptions
2024-12-08 21:59:55,254:INFO:Importing libraries
2024-12-08 21:59:55,254:INFO:Copying training dataset
2024-12-08 21:59:55,256:INFO:Defining folds
2024-12-08 21:59:55,256:INFO:Declaring metric variables
2024-12-08 21:59:55,256:INFO:Importing untrained model
2024-12-08 21:59:55,256:INFO:Declaring custom model
2024-12-08 21:59:55,256:INFO:K Neighbors Classifier Imported successfully
2024-12-08 21:59:55,257:INFO:Cross validation set to False
2024-12-08 21:59:55,257:INFO:Fitting Model
2024-12-08 21:59:55,284:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 21:59:55,284:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,325:INFO:Initializing create_model()
2024-12-08 21:59:55,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,326:INFO:Checking exceptions
2024-12-08 21:59:55,326:INFO:Importing libraries
2024-12-08 21:59:55,327:INFO:Copying training dataset
2024-12-08 21:59:55,329:INFO:Defining folds
2024-12-08 21:59:55,329:INFO:Declaring metric variables
2024-12-08 21:59:55,329:INFO:Importing untrained model
2024-12-08 21:59:55,329:INFO:Declaring custom model
2024-12-08 21:59:55,329:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 21:59:55,330:INFO:Cross validation set to False
2024-12-08 21:59:55,330:INFO:Fitting Model
2024-12-08 21:59:55,357:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 21:59:55,357:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,398:INFO:Initializing create_model()
2024-12-08 21:59:55,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6229, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,398:INFO:Checking exceptions
2024-12-08 21:59:55,399:INFO:Importing libraries
2024-12-08 21:59:55,399:INFO:Copying training dataset
2024-12-08 21:59:55,401:INFO:Defining folds
2024-12-08 21:59:55,401:INFO:Declaring metric variables
2024-12-08 21:59:55,401:INFO:Importing untrained model
2024-12-08 21:59:55,401:INFO:Declaring custom model
2024-12-08 21:59:55,402:INFO:Extra Trees Classifier Imported successfully
2024-12-08 21:59:55,402:INFO:Cross validation set to False
2024-12-08 21:59:55,402:INFO:Fitting Model
2024-12-08 21:59:55,481:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6229, verbose=0,
                     warm_start=False)
2024-12-08 21:59:55,481:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,524:INFO:Initializing create_model()
2024-12-08 21:59:55,524:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6229, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,524:INFO:Checking exceptions
2024-12-08 21:59:55,525:INFO:Importing libraries
2024-12-08 21:59:55,525:INFO:Copying training dataset
2024-12-08 21:59:55,527:INFO:Defining folds
2024-12-08 21:59:55,527:INFO:Declaring metric variables
2024-12-08 21:59:55,527:INFO:Importing untrained model
2024-12-08 21:59:55,527:INFO:Declaring custom model
2024-12-08 21:59:55,528:INFO:Random Forest Classifier Imported successfully
2024-12-08 21:59:55,528:INFO:Cross validation set to False
2024-12-08 21:59:55,528:INFO:Fitting Model
2024-12-08 21:59:55,635:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6229, verbose=0,
                       warm_start=False)
2024-12-08 21:59:55,635:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,677:INFO:Initializing create_model()
2024-12-08 21:59:55,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6229, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,677:INFO:Checking exceptions
2024-12-08 21:59:55,678:INFO:Importing libraries
2024-12-08 21:59:55,678:INFO:Copying training dataset
2024-12-08 21:59:55,679:INFO:Defining folds
2024-12-08 21:59:55,679:INFO:Declaring metric variables
2024-12-08 21:59:55,679:INFO:Importing untrained model
2024-12-08 21:59:55,679:INFO:Declaring custom model
2024-12-08 21:59:55,680:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 21:59:55,680:INFO:Cross validation set to False
2024-12-08 21:59:55,680:INFO:Fitting Model
2024-12-08 21:59:55,757:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6229, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 21:59:55,757:INFO:create_model() successfully completed......................................
2024-12-08 21:59:55,798:INFO:Initializing create_model()
2024-12-08 21:59:55,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6229, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:55,798:INFO:Checking exceptions
2024-12-08 21:59:55,799:INFO:Importing libraries
2024-12-08 21:59:55,799:INFO:Copying training dataset
2024-12-08 21:59:55,800:INFO:Defining folds
2024-12-08 21:59:55,800:INFO:Declaring metric variables
2024-12-08 21:59:55,800:INFO:Importing untrained model
2024-12-08 21:59:55,800:INFO:Declaring custom model
2024-12-08 21:59:55,801:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 21:59:55,801:INFO:Cross validation set to False
2024-12-08 21:59:55,801:INFO:Fitting Model
2024-12-08 21:59:55,830:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-12-08 21:59:55,831:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000324 seconds.
2024-12-08 21:59:55,831:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-08 21:59:55,831:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-08 21:59:55,831:INFO:[LightGBM] [Info] Total Bins 99
2024-12-08 21:59:55,831:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 8
2024-12-08 21:59:55,831:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-12-08 21:59:55,831:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-12-08 21:59:55,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:55,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 21:59:56,068:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6229, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 21:59:56,068:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,108:INFO:Initializing create_model()
2024-12-08 21:59:56,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:56,108:INFO:Checking exceptions
2024-12-08 21:59:56,109:INFO:Importing libraries
2024-12-08 21:59:56,109:INFO:Copying training dataset
2024-12-08 21:59:56,110:INFO:Defining folds
2024-12-08 21:59:56,110:INFO:Declaring metric variables
2024-12-08 21:59:56,110:INFO:Importing untrained model
2024-12-08 21:59:56,111:INFO:Declaring custom model
2024-12-08 21:59:56,111:INFO:Naive Bayes Imported successfully
2024-12-08 21:59:56,111:INFO:Cross validation set to False
2024-12-08 21:59:56,111:INFO:Fitting Model
2024-12-08 21:59:56,140:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 21:59:56,140:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,181:INFO:Initializing create_model()
2024-12-08 21:59:56,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6229), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:56,181:INFO:Checking exceptions
2024-12-08 21:59:56,182:INFO:Importing libraries
2024-12-08 21:59:56,182:INFO:Copying training dataset
2024-12-08 21:59:56,185:INFO:Defining folds
2024-12-08 21:59:56,185:INFO:Declaring metric variables
2024-12-08 21:59:56,185:INFO:Importing untrained model
2024-12-08 21:59:56,185:INFO:Declaring custom model
2024-12-08 21:59:56,185:INFO:Ada Boost Classifier Imported successfully
2024-12-08 21:59:56,186:INFO:Cross validation set to False
2024-12-08 21:59:56,186:INFO:Fitting Model
2024-12-08 21:59:56,212:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 21:59:56,243:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6229)
2024-12-08 21:59:56,243:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,283:INFO:Initializing create_model()
2024-12-08 21:59:56,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6229, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:56,284:INFO:Checking exceptions
2024-12-08 21:59:56,284:INFO:Importing libraries
2024-12-08 21:59:56,284:INFO:Copying training dataset
2024-12-08 21:59:56,286:INFO:Defining folds
2024-12-08 21:59:56,286:INFO:Declaring metric variables
2024-12-08 21:59:56,286:INFO:Importing untrained model
2024-12-08 21:59:56,286:INFO:Declaring custom model
2024-12-08 21:59:56,286:INFO:Decision Tree Classifier Imported successfully
2024-12-08 21:59:56,287:INFO:Cross validation set to False
2024-12-08 21:59:56,287:INFO:Fitting Model
2024-12-08 21:59:56,313:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6229, splitter='best')
2024-12-08 21:59:56,313:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,354:INFO:Initializing create_model()
2024-12-08 21:59:56,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:56,355:INFO:Checking exceptions
2024-12-08 21:59:56,355:INFO:Importing libraries
2024-12-08 21:59:56,355:INFO:Copying training dataset
2024-12-08 21:59:56,357:INFO:Defining folds
2024-12-08 21:59:56,357:INFO:Declaring metric variables
2024-12-08 21:59:56,357:INFO:Importing untrained model
2024-12-08 21:59:56,357:INFO:Declaring custom model
2024-12-08 21:59:56,357:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 21:59:56,358:INFO:Cross validation set to False
2024-12-08 21:59:56,358:INFO:Fitting Model
2024-12-08 21:59:56,384:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 21:59:56,385:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 21:59:56,385:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,428:INFO:Initializing create_model()
2024-12-08 21:59:56,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6229, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:56,428:INFO:Checking exceptions
2024-12-08 21:59:56,429:INFO:Importing libraries
2024-12-08 21:59:56,429:INFO:Copying training dataset
2024-12-08 21:59:56,431:INFO:Defining folds
2024-12-08 21:59:56,431:INFO:Declaring metric variables
2024-12-08 21:59:56,431:INFO:Importing untrained model
2024-12-08 21:59:56,431:INFO:Declaring custom model
2024-12-08 21:59:56,431:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 21:59:56,432:INFO:Cross validation set to False
2024-12-08 21:59:56,432:INFO:Fitting Model
2024-12-08 21:59:56,459:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6229, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 21:59:56,459:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,500:INFO:Initializing create_model()
2024-12-08 21:59:56,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=DummyClassifier(constant=None, random_state=6229, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 21:59:56,501:INFO:Checking exceptions
2024-12-08 21:59:56,501:INFO:Importing libraries
2024-12-08 21:59:56,501:INFO:Copying training dataset
2024-12-08 21:59:56,504:INFO:Defining folds
2024-12-08 21:59:56,504:INFO:Declaring metric variables
2024-12-08 21:59:56,504:INFO:Importing untrained model
2024-12-08 21:59:56,504:INFO:Declaring custom model
2024-12-08 21:59:56,504:INFO:Dummy Classifier Imported successfully
2024-12-08 21:59:56,505:INFO:Cross validation set to False
2024-12-08 21:59:56,505:INFO:Fitting Model
2024-12-08 21:59:56,530:INFO:DummyClassifier(constant=None, random_state=6229, strategy='prior')
2024-12-08 21:59:56,530:INFO:create_model() successfully completed......................................
2024-12-08 21:59:56,581:INFO:_master_model_container: 14
2024-12-08 21:59:56,581:INFO:_display_container: 2
2024-12-08 21:59:56,583:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6229, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6229, solver='auto',
                tol=0.0001), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6229, verbose=0,
                     warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6229, verbose=0,
                       warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6229, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6229, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), GaussianNB(priors=None, var_smoothing=1e-09), AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6229), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6229, splitter='best'), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6229, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), DummyClassifier(constant=None, random_state=6229, strategy='prior')]
2024-12-08 21:59:56,583:INFO:compare_models() successfully completed......................................
2024-12-08 22:00:29,402:INFO:Initializing create_model()
2024-12-08 22:00:29,405:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16388a770>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:00:29,405:INFO:Checking exceptions
2024-12-08 22:00:29,438:INFO:Importing libraries
2024-12-08 22:00:29,439:INFO:Copying training dataset
2024-12-08 22:00:29,451:INFO:Defining folds
2024-12-08 22:00:29,451:INFO:Declaring metric variables
2024-12-08 22:00:29,454:INFO:Importing untrained model
2024-12-08 22:00:29,457:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:00:29,462:INFO:Starting cross validation
2024-12-08 22:00:29,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:00:30,007:INFO:Calculating mean and std
2024-12-08 22:00:30,008:INFO:Creating metrics dataframe
2024-12-08 22:00:30,018:INFO:Finalizing model
2024-12-08 22:00:30,139:INFO:Uploading results into container
2024-12-08 22:00:30,140:INFO:Uploading model into container now
2024-12-08 22:00:30,151:INFO:_master_model_container: 15
2024-12-08 22:00:30,151:INFO:_display_container: 3
2024-12-08 22:00:30,152:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6229, verbose=0,
                       warm_start=False)
2024-12-08 22:00:30,152:INFO:create_model() successfully completed......................................
2024-12-08 22:01:36,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 22:01:36,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 22:01:36,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 22:01:36,505:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-08 22:01:41,639:INFO:PyCaret ClassificationExperiment
2024-12-08 22:01:41,639:INFO:Logging name: clf-default-name
2024-12-08 22:01:41,640:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-08 22:01:41,640:INFO:version 3.3.2
2024-12-08 22:01:41,640:INFO:Initializing setup()
2024-12-08 22:01:41,640:INFO:self.USI: 7987
2024-12-08 22:01:41,640:INFO:self._variable_keys: {'log_plots_param', 'seed', 'memory', 'logging_param', 'X_train', 'pipeline', 'y_test', 'fold_generator', 'gpu_n_jobs_param', 'y', 'exp_name_log', 'exp_id', 'fold_shuffle_param', 'is_multiclass', 'data', 'gpu_param', '_ml_usecase', 'fix_imbalance', 'X_test', 'n_jobs_param', 'fold_groups_param', 'y_train', 'target_param', 'html_param', '_available_plots', 'X', 'idx', 'USI'}
2024-12-08 22:01:41,640:INFO:Checking environment
2024-12-08 22:01:41,640:INFO:python_version: 3.10.13
2024-12-08 22:01:41,640:INFO:python_build: ('main', 'Mar 20 2024 16:49:28')
2024-12-08 22:01:41,640:INFO:machine: arm64
2024-12-08 22:01:41,640:INFO:platform: macOS-15.0.1-arm64-arm-64bit
2024-12-08 22:01:41,640:INFO:Memory: svmem(total=8589934592, available=1817313280, percent=78.8, used=3229712384, free=52658176, active=1787969536, inactive=1691516928, wired=1441742848)
2024-12-08 22:01:41,640:INFO:Physical Core: 8
2024-12-08 22:01:41,640:INFO:Logical Core: 8
2024-12-08 22:01:41,640:INFO:Checking libraries
2024-12-08 22:01:41,640:INFO:System:
2024-12-08 22:01:41,640:INFO:    python: 3.10.13 (main, Mar 20 2024, 16:49:28) [Clang 14.0.3 (clang-1403.0.22.14.1)]
2024-12-08 22:01:41,640:INFO:executable: /Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/bin/python
2024-12-08 22:01:41,640:INFO:   machine: macOS-15.0.1-arm64-arm-64bit
2024-12-08 22:01:41,640:INFO:PyCaret required dependencies:
2024-12-08 22:01:41,674:INFO:                 pip: 23.0.1
2024-12-08 22:01:41,674:INFO:          setuptools: 65.5.0
2024-12-08 22:01:41,674:INFO:             pycaret: 3.3.2
2024-12-08 22:01:41,674:INFO:             IPython: 8.30.0
2024-12-08 22:01:41,674:INFO:          ipywidgets: 8.1.5
2024-12-08 22:01:41,674:INFO:                tqdm: 4.67.1
2024-12-08 22:01:41,674:INFO:               numpy: 1.26.4
2024-12-08 22:01:41,674:INFO:              pandas: 2.1.4
2024-12-08 22:01:41,674:INFO:              jinja2: 3.1.4
2024-12-08 22:01:41,674:INFO:               scipy: 1.11.4
2024-12-08 22:01:41,674:INFO:              joblib: 1.3.2
2024-12-08 22:01:41,674:INFO:             sklearn: 1.4.2
2024-12-08 22:01:41,674:INFO:                pyod: 2.0.2
2024-12-08 22:01:41,674:INFO:            imblearn: 0.12.4
2024-12-08 22:01:41,674:INFO:   category_encoders: 2.6.4
2024-12-08 22:01:41,674:INFO:            lightgbm: 4.5.0
2024-12-08 22:01:41,674:INFO:               numba: 0.60.0
2024-12-08 22:01:41,674:INFO:            requests: 2.32.3
2024-12-08 22:01:41,674:INFO:          matplotlib: 3.7.5
2024-12-08 22:01:41,674:INFO:          scikitplot: 0.3.7
2024-12-08 22:01:41,674:INFO:         yellowbrick: 1.5
2024-12-08 22:01:41,674:INFO:              plotly: 5.24.1
2024-12-08 22:01:41,674:INFO:    plotly-resampler: Not installed
2024-12-08 22:01:41,674:INFO:             kaleido: 0.2.1
2024-12-08 22:01:41,674:INFO:           schemdraw: 0.15
2024-12-08 22:01:41,674:INFO:         statsmodels: 0.14.4
2024-12-08 22:01:41,674:INFO:              sktime: 0.26.0
2024-12-08 22:01:41,674:INFO:               tbats: 1.1.3
2024-12-08 22:01:41,674:INFO:            pmdarima: 2.0.4
2024-12-08 22:01:41,674:INFO:              psutil: 6.1.0
2024-12-08 22:01:41,674:INFO:          markupsafe: 3.0.2
2024-12-08 22:01:41,674:INFO:             pickle5: Not installed
2024-12-08 22:01:41,674:INFO:         cloudpickle: 3.1.0
2024-12-08 22:01:41,674:INFO:         deprecation: 2.1.0
2024-12-08 22:01:41,674:INFO:              xxhash: 3.5.0
2024-12-08 22:01:41,674:INFO:           wurlitzer: 3.1.1
2024-12-08 22:01:41,674:INFO:PyCaret optional dependencies:
2024-12-08 22:01:41,684:INFO:                shap: Not installed
2024-12-08 22:01:41,684:INFO:           interpret: Not installed
2024-12-08 22:01:41,684:INFO:                umap: Not installed
2024-12-08 22:01:41,684:INFO:     ydata_profiling: Not installed
2024-12-08 22:01:41,684:INFO:  explainerdashboard: Not installed
2024-12-08 22:01:41,684:INFO:             autoviz: Not installed
2024-12-08 22:01:41,684:INFO:           fairlearn: Not installed
2024-12-08 22:01:41,684:INFO:          deepchecks: Not installed
2024-12-08 22:01:41,684:INFO:             xgboost: Not installed
2024-12-08 22:01:41,684:INFO:            catboost: Not installed
2024-12-08 22:01:41,684:INFO:              kmodes: Not installed
2024-12-08 22:01:41,684:INFO:             mlxtend: Not installed
2024-12-08 22:01:41,684:INFO:       statsforecast: Not installed
2024-12-08 22:01:41,684:INFO:        tune_sklearn: Not installed
2024-12-08 22:01:41,684:INFO:                 ray: Not installed
2024-12-08 22:01:41,684:INFO:            hyperopt: Not installed
2024-12-08 22:01:41,684:INFO:              optuna: 4.1.0
2024-12-08 22:01:41,684:INFO:               skopt: Not installed
2024-12-08 22:01:41,684:INFO:              mlflow: Not installed
2024-12-08 22:01:41,685:INFO:              gradio: Not installed
2024-12-08 22:01:41,685:INFO:             fastapi: Not installed
2024-12-08 22:01:41,685:INFO:             uvicorn: Not installed
2024-12-08 22:01:41,685:INFO:              m2cgen: Not installed
2024-12-08 22:01:41,685:INFO:           evidently: Not installed
2024-12-08 22:01:41,685:INFO:               fugue: Not installed
2024-12-08 22:01:41,685:INFO:           streamlit: Not installed
2024-12-08 22:01:41,685:INFO:             prophet: Not installed
2024-12-08 22:01:41,685:INFO:None
2024-12-08 22:01:41,685:INFO:Set up data.
2024-12-08 22:01:41,688:INFO:Set up folding strategy.
2024-12-08 22:01:41,688:INFO:Set up train/test split.
2024-12-08 22:01:41,696:INFO:Set up index.
2024-12-08 22:01:41,696:INFO:Assigning column types.
2024-12-08 22:01:41,697:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-08 22:01:41,720:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 22:01:41,722:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 22:01:41,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-08 22:01:41,758:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 22:01:41,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,770:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-08 22:01:41,790:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 22:01:41,802:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,802:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,822:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-08 22:01:41,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,834:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-08 22:01:41,865:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,897:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,897:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:41,899:INFO:Preparing preprocessing pipeline...
2024-12-08 22:01:41,900:INFO:Set up simple imputation.
2024-12-08 22:01:41,902:INFO:Set up encoding of ordinal features.
2024-12-08 22:01:41,902:INFO:Set up encoding of categorical features.
2024-12-08 22:01:41,938:INFO:Finished creating preprocessing pipeline.
2024-12-08 22:01:41,946:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/ly/r3w75pz12l9_ncftrb2dwt4m0000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['SibSp', 'Parch'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerW...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Age', 'Fare'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'Fare'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2024-12-08 22:01:41,946:INFO:Creating final display dataframe.
2024-12-08 22:01:42,043:INFO:Setup _display_container:                     Description             Value
0                    Session id               902
1                        Target          Survived
2                   Target type            Binary
3           Original data shape          (891, 7)
4        Transformed data shape          (891, 9)
5   Transformed train set shape          (623, 9)
6    Transformed test set shape          (268, 9)
7              Numeric features                 2
8          Categorical features                 4
9      Rows with missing values             19.9%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              7987
2024-12-08 22:01:42,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:42,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:42,115:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:42,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-08 22:01:42,117:INFO:setup() successfully completed in 0.48s...............
2024-12-08 22:01:44,295:INFO:Initializing compare_models()
2024-12-08 22:01:44,295:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=16, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 16, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-12-08 22:01:44,296:INFO:Checking exceptions
2024-12-08 22:01:44,301:INFO:Preparing display monitor
2024-12-08 22:01:44,352:INFO:Initializing Logistic Regression
2024-12-08 22:01:44,352:INFO:Total runtime is 9.715557098388672e-06 minutes
2024-12-08 22:01:44,356:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:44,357:INFO:Initializing create_model()
2024-12-08 22:01:44,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:44,357:INFO:Checking exceptions
2024-12-08 22:01:44,357:INFO:Importing libraries
2024-12-08 22:01:44,357:INFO:Copying training dataset
2024-12-08 22:01:44,361:INFO:Defining folds
2024-12-08 22:01:44,361:INFO:Declaring metric variables
2024-12-08 22:01:44,363:INFO:Importing untrained model
2024-12-08 22:01:44,366:INFO:Logistic Regression Imported successfully
2024-12-08 22:01:44,370:INFO:Starting cross validation
2024-12-08 22:01:44,372:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:48,073:INFO:Calculating mean and std
2024-12-08 22:01:48,077:INFO:Creating metrics dataframe
2024-12-08 22:01:48,084:INFO:Uploading results into container
2024-12-08 22:01:48,084:INFO:Uploading model into container now
2024-12-08 22:01:48,085:INFO:_master_model_container: 1
2024-12-08 22:01:48,085:INFO:_display_container: 2
2024-12-08 22:01:48,085:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=902, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 22:01:48,085:INFO:create_model() successfully completed......................................
2024-12-08 22:01:48,174:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:48,174:INFO:Creating metrics dataframe
2024-12-08 22:01:48,179:INFO:Initializing K Neighbors Classifier
2024-12-08 22:01:48,179:INFO:Total runtime is 0.06379326184590657 minutes
2024-12-08 22:01:48,181:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:48,196:INFO:Initializing create_model()
2024-12-08 22:01:48,196:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:48,196:INFO:Checking exceptions
2024-12-08 22:01:48,196:INFO:Importing libraries
2024-12-08 22:01:48,197:INFO:Copying training dataset
2024-12-08 22:01:48,199:INFO:Defining folds
2024-12-08 22:01:48,199:INFO:Declaring metric variables
2024-12-08 22:01:48,201:INFO:Importing untrained model
2024-12-08 22:01:48,203:INFO:K Neighbors Classifier Imported successfully
2024-12-08 22:01:48,206:INFO:Starting cross validation
2024-12-08 22:01:48,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:48,429:INFO:Calculating mean and std
2024-12-08 22:01:48,430:INFO:Creating metrics dataframe
2024-12-08 22:01:48,431:INFO:Uploading results into container
2024-12-08 22:01:48,431:INFO:Uploading model into container now
2024-12-08 22:01:48,431:INFO:_master_model_container: 2
2024-12-08 22:01:48,431:INFO:_display_container: 2
2024-12-08 22:01:48,432:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 22:01:48,432:INFO:create_model() successfully completed......................................
2024-12-08 22:01:48,474:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:48,474:INFO:Creating metrics dataframe
2024-12-08 22:01:48,478:INFO:Initializing Naive Bayes
2024-12-08 22:01:48,479:INFO:Total runtime is 0.0687796672185262 minutes
2024-12-08 22:01:48,480:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:48,480:INFO:Initializing create_model()
2024-12-08 22:01:48,480:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:48,480:INFO:Checking exceptions
2024-12-08 22:01:48,480:INFO:Importing libraries
2024-12-08 22:01:48,480:INFO:Copying training dataset
2024-12-08 22:01:48,482:INFO:Defining folds
2024-12-08 22:01:48,482:INFO:Declaring metric variables
2024-12-08 22:01:48,484:INFO:Importing untrained model
2024-12-08 22:01:48,485:INFO:Naive Bayes Imported successfully
2024-12-08 22:01:48,488:INFO:Starting cross validation
2024-12-08 22:01:48,489:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:48,651:INFO:Calculating mean and std
2024-12-08 22:01:48,651:INFO:Creating metrics dataframe
2024-12-08 22:01:48,652:INFO:Uploading results into container
2024-12-08 22:01:48,652:INFO:Uploading model into container now
2024-12-08 22:01:48,653:INFO:_master_model_container: 3
2024-12-08 22:01:48,653:INFO:_display_container: 2
2024-12-08 22:01:48,653:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 22:01:48,653:INFO:create_model() successfully completed......................................
2024-12-08 22:01:48,696:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:48,696:INFO:Creating metrics dataframe
2024-12-08 22:01:48,700:INFO:Initializing Decision Tree Classifier
2024-12-08 22:01:48,700:INFO:Total runtime is 0.07246547937393188 minutes
2024-12-08 22:01:48,701:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:48,702:INFO:Initializing create_model()
2024-12-08 22:01:48,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:48,702:INFO:Checking exceptions
2024-12-08 22:01:48,702:INFO:Importing libraries
2024-12-08 22:01:48,702:INFO:Copying training dataset
2024-12-08 22:01:48,704:INFO:Defining folds
2024-12-08 22:01:48,704:INFO:Declaring metric variables
2024-12-08 22:01:48,705:INFO:Importing untrained model
2024-12-08 22:01:48,707:INFO:Decision Tree Classifier Imported successfully
2024-12-08 22:01:48,710:INFO:Starting cross validation
2024-12-08 22:01:48,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:48,851:INFO:Calculating mean and std
2024-12-08 22:01:48,852:INFO:Creating metrics dataframe
2024-12-08 22:01:48,853:INFO:Uploading results into container
2024-12-08 22:01:48,853:INFO:Uploading model into container now
2024-12-08 22:01:48,853:INFO:_master_model_container: 4
2024-12-08 22:01:48,853:INFO:_display_container: 2
2024-12-08 22:01:48,853:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=902, splitter='best')
2024-12-08 22:01:48,853:INFO:create_model() successfully completed......................................
2024-12-08 22:01:48,896:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:48,896:INFO:Creating metrics dataframe
2024-12-08 22:01:48,900:INFO:Initializing SVM - Linear Kernel
2024-12-08 22:01:48,900:INFO:Total runtime is 0.07580418189366658 minutes
2024-12-08 22:01:48,902:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:48,902:INFO:Initializing create_model()
2024-12-08 22:01:48,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:48,902:INFO:Checking exceptions
2024-12-08 22:01:48,902:INFO:Importing libraries
2024-12-08 22:01:48,903:INFO:Copying training dataset
2024-12-08 22:01:48,904:INFO:Defining folds
2024-12-08 22:01:48,904:INFO:Declaring metric variables
2024-12-08 22:01:48,906:INFO:Importing untrained model
2024-12-08 22:01:48,908:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 22:01:48,911:INFO:Starting cross validation
2024-12-08 22:01:48,912:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:49,073:INFO:Calculating mean and std
2024-12-08 22:01:49,073:INFO:Creating metrics dataframe
2024-12-08 22:01:49,074:INFO:Uploading results into container
2024-12-08 22:01:49,074:INFO:Uploading model into container now
2024-12-08 22:01:49,074:INFO:_master_model_container: 5
2024-12-08 22:01:49,074:INFO:_display_container: 2
2024-12-08 22:01:49,075:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=902, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 22:01:49,075:INFO:create_model() successfully completed......................................
2024-12-08 22:01:49,118:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:49,118:INFO:Creating metrics dataframe
2024-12-08 22:01:49,122:INFO:Initializing Ridge Classifier
2024-12-08 22:01:49,122:INFO:Total runtime is 0.07950676679611206 minutes
2024-12-08 22:01:49,124:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:49,124:INFO:Initializing create_model()
2024-12-08 22:01:49,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:49,124:INFO:Checking exceptions
2024-12-08 22:01:49,124:INFO:Importing libraries
2024-12-08 22:01:49,124:INFO:Copying training dataset
2024-12-08 22:01:49,126:INFO:Defining folds
2024-12-08 22:01:49,126:INFO:Declaring metric variables
2024-12-08 22:01:49,127:INFO:Importing untrained model
2024-12-08 22:01:49,129:INFO:Ridge Classifier Imported successfully
2024-12-08 22:01:49,132:INFO:Starting cross validation
2024-12-08 22:01:49,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:49,287:INFO:Calculating mean and std
2024-12-08 22:01:49,287:INFO:Creating metrics dataframe
2024-12-08 22:01:49,288:INFO:Uploading results into container
2024-12-08 22:01:49,288:INFO:Uploading model into container now
2024-12-08 22:01:49,289:INFO:_master_model_container: 6
2024-12-08 22:01:49,289:INFO:_display_container: 2
2024-12-08 22:01:49,289:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=902, solver='auto',
                tol=0.0001)
2024-12-08 22:01:49,289:INFO:create_model() successfully completed......................................
2024-12-08 22:01:49,331:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:49,331:INFO:Creating metrics dataframe
2024-12-08 22:01:49,336:INFO:Initializing Random Forest Classifier
2024-12-08 22:01:49,336:INFO:Total runtime is 0.08306911786397297 minutes
2024-12-08 22:01:49,337:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:49,337:INFO:Initializing create_model()
2024-12-08 22:01:49,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:49,337:INFO:Checking exceptions
2024-12-08 22:01:49,337:INFO:Importing libraries
2024-12-08 22:01:49,338:INFO:Copying training dataset
2024-12-08 22:01:49,340:INFO:Defining folds
2024-12-08 22:01:49,340:INFO:Declaring metric variables
2024-12-08 22:01:49,341:INFO:Importing untrained model
2024-12-08 22:01:49,343:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:01:49,346:INFO:Starting cross validation
2024-12-08 22:01:49,347:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:49,775:INFO:Calculating mean and std
2024-12-08 22:01:49,775:INFO:Creating metrics dataframe
2024-12-08 22:01:49,776:INFO:Uploading results into container
2024-12-08 22:01:49,777:INFO:Uploading model into container now
2024-12-08 22:01:49,777:INFO:_master_model_container: 7
2024-12-08 22:01:49,777:INFO:_display_container: 2
2024-12-08 22:01:49,777:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:01:49,777:INFO:create_model() successfully completed......................................
2024-12-08 22:01:49,820:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:49,820:INFO:Creating metrics dataframe
2024-12-08 22:01:49,823:INFO:Initializing Quadratic Discriminant Analysis
2024-12-08 22:01:49,823:INFO:Total runtime is 0.09119436343510945 minutes
2024-12-08 22:01:49,825:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:49,825:INFO:Initializing create_model()
2024-12-08 22:01:49,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:49,825:INFO:Checking exceptions
2024-12-08 22:01:49,825:INFO:Importing libraries
2024-12-08 22:01:49,825:INFO:Copying training dataset
2024-12-08 22:01:49,827:INFO:Defining folds
2024-12-08 22:01:49,827:INFO:Declaring metric variables
2024-12-08 22:01:49,829:INFO:Importing untrained model
2024-12-08 22:01:49,831:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 22:01:49,834:INFO:Starting cross validation
2024-12-08 22:01:49,835:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:49,906:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,913:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,914:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,919:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,919:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,920:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,924:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,942:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,965:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,966:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:49,992:INFO:Calculating mean and std
2024-12-08 22:01:49,992:INFO:Creating metrics dataframe
2024-12-08 22:01:49,993:INFO:Uploading results into container
2024-12-08 22:01:49,993:INFO:Uploading model into container now
2024-12-08 22:01:49,994:INFO:_master_model_container: 8
2024-12-08 22:01:49,994:INFO:_display_container: 2
2024-12-08 22:01:49,994:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 22:01:49,994:INFO:create_model() successfully completed......................................
2024-12-08 22:01:50,037:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:50,037:INFO:Creating metrics dataframe
2024-12-08 22:01:50,041:INFO:Initializing Ada Boost Classifier
2024-12-08 22:01:50,041:INFO:Total runtime is 0.09482021729151408 minutes
2024-12-08 22:01:50,042:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:50,043:INFO:Initializing create_model()
2024-12-08 22:01:50,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:50,043:INFO:Checking exceptions
2024-12-08 22:01:50,043:INFO:Importing libraries
2024-12-08 22:01:50,043:INFO:Copying training dataset
2024-12-08 22:01:50,045:INFO:Defining folds
2024-12-08 22:01:50,045:INFO:Declaring metric variables
2024-12-08 22:01:50,046:INFO:Importing untrained model
2024-12-08 22:01:50,048:INFO:Ada Boost Classifier Imported successfully
2024-12-08 22:01:50,051:INFO:Starting cross validation
2024-12-08 22:01:50,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:50,113:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,120:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,122:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,128:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,131:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,132:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,135:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,144:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,251:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,252:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:50,341:INFO:Calculating mean and std
2024-12-08 22:01:50,342:INFO:Creating metrics dataframe
2024-12-08 22:01:50,343:INFO:Uploading results into container
2024-12-08 22:01:50,343:INFO:Uploading model into container now
2024-12-08 22:01:50,343:INFO:_master_model_container: 9
2024-12-08 22:01:50,343:INFO:_display_container: 2
2024-12-08 22:01:50,343:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=902)
2024-12-08 22:01:50,343:INFO:create_model() successfully completed......................................
2024-12-08 22:01:50,390:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:50,390:INFO:Creating metrics dataframe
2024-12-08 22:01:50,395:INFO:Initializing Gradient Boosting Classifier
2024-12-08 22:01:50,395:INFO:Total runtime is 0.1007216493288676 minutes
2024-12-08 22:01:50,397:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:50,397:INFO:Initializing create_model()
2024-12-08 22:01:50,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:50,397:INFO:Checking exceptions
2024-12-08 22:01:50,397:INFO:Importing libraries
2024-12-08 22:01:50,397:INFO:Copying training dataset
2024-12-08 22:01:50,399:INFO:Defining folds
2024-12-08 22:01:50,399:INFO:Declaring metric variables
2024-12-08 22:01:50,401:INFO:Importing untrained model
2024-12-08 22:01:50,402:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 22:01:50,406:INFO:Starting cross validation
2024-12-08 22:01:50,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:50,716:INFO:Calculating mean and std
2024-12-08 22:01:50,717:INFO:Creating metrics dataframe
2024-12-08 22:01:50,718:INFO:Uploading results into container
2024-12-08 22:01:50,718:INFO:Uploading model into container now
2024-12-08 22:01:50,719:INFO:_master_model_container: 10
2024-12-08 22:01:50,719:INFO:_display_container: 2
2024-12-08 22:01:50,719:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=902, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 22:01:50,719:INFO:create_model() successfully completed......................................
2024-12-08 22:01:50,771:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:50,772:INFO:Creating metrics dataframe
2024-12-08 22:01:50,776:INFO:Initializing Linear Discriminant Analysis
2024-12-08 22:01:50,776:INFO:Total runtime is 0.10707129637400309 minutes
2024-12-08 22:01:50,778:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:50,778:INFO:Initializing create_model()
2024-12-08 22:01:50,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:50,778:INFO:Checking exceptions
2024-12-08 22:01:50,778:INFO:Importing libraries
2024-12-08 22:01:50,778:INFO:Copying training dataset
2024-12-08 22:01:50,780:INFO:Defining folds
2024-12-08 22:01:50,780:INFO:Declaring metric variables
2024-12-08 22:01:50,782:INFO:Importing untrained model
2024-12-08 22:01:50,783:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 22:01:50,786:INFO:Starting cross validation
2024-12-08 22:01:50,787:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:50,961:INFO:Calculating mean and std
2024-12-08 22:01:50,962:INFO:Creating metrics dataframe
2024-12-08 22:01:50,963:INFO:Uploading results into container
2024-12-08 22:01:50,963:INFO:Uploading model into container now
2024-12-08 22:01:50,964:INFO:_master_model_container: 11
2024-12-08 22:01:50,964:INFO:_display_container: 2
2024-12-08 22:01:50,964:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 22:01:50,964:INFO:create_model() successfully completed......................................
2024-12-08 22:01:51,010:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:51,010:INFO:Creating metrics dataframe
2024-12-08 22:01:51,017:INFO:Initializing Extra Trees Classifier
2024-12-08 22:01:51,017:INFO:Total runtime is 0.11108351548512777 minutes
2024-12-08 22:01:51,018:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:51,019:INFO:Initializing create_model()
2024-12-08 22:01:51,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:51,019:INFO:Checking exceptions
2024-12-08 22:01:51,019:INFO:Importing libraries
2024-12-08 22:01:51,019:INFO:Copying training dataset
2024-12-08 22:01:51,021:INFO:Defining folds
2024-12-08 22:01:51,021:INFO:Declaring metric variables
2024-12-08 22:01:51,022:INFO:Importing untrained model
2024-12-08 22:01:51,024:INFO:Extra Trees Classifier Imported successfully
2024-12-08 22:01:51,027:INFO:Starting cross validation
2024-12-08 22:01:51,028:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:51,437:INFO:Calculating mean and std
2024-12-08 22:01:51,438:INFO:Creating metrics dataframe
2024-12-08 22:01:51,439:INFO:Uploading results into container
2024-12-08 22:01:51,439:INFO:Uploading model into container now
2024-12-08 22:01:51,439:INFO:_master_model_container: 12
2024-12-08 22:01:51,439:INFO:_display_container: 2
2024-12-08 22:01:51,440:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=902, verbose=0,
                     warm_start=False)
2024-12-08 22:01:51,440:INFO:create_model() successfully completed......................................
2024-12-08 22:01:51,483:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:51,483:INFO:Creating metrics dataframe
2024-12-08 22:01:51,488:INFO:Initializing Light Gradient Boosting Machine
2024-12-08 22:01:51,488:INFO:Total runtime is 0.11894040107727051 minutes
2024-12-08 22:01:51,490:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:51,490:INFO:Initializing create_model()
2024-12-08 22:01:51,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:51,490:INFO:Checking exceptions
2024-12-08 22:01:51,490:INFO:Importing libraries
2024-12-08 22:01:51,490:INFO:Copying training dataset
2024-12-08 22:01:51,493:INFO:Defining folds
2024-12-08 22:01:51,493:INFO:Declaring metric variables
2024-12-08 22:01:51,495:INFO:Importing untrained model
2024-12-08 22:01:51,497:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 22:01:51,500:INFO:Starting cross validation
2024-12-08 22:01:51,501:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:53,418:INFO:Calculating mean and std
2024-12-08 22:01:53,419:INFO:Creating metrics dataframe
2024-12-08 22:01:53,420:INFO:Uploading results into container
2024-12-08 22:01:53,420:INFO:Uploading model into container now
2024-12-08 22:01:53,420:INFO:_master_model_container: 13
2024-12-08 22:01:53,420:INFO:_display_container: 2
2024-12-08 22:01:53,421:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=902, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 22:01:53,421:INFO:create_model() successfully completed......................................
2024-12-08 22:01:53,472:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:53,472:INFO:Creating metrics dataframe
2024-12-08 22:01:53,476:INFO:Initializing Dummy Classifier
2024-12-08 22:01:53,477:INFO:Total runtime is 0.15207938353220624 minutes
2024-12-08 22:01:53,478:INFO:SubProcess create_model() called ==================================
2024-12-08 22:01:53,478:INFO:Initializing create_model()
2024-12-08 22:01:53,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x107177970>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:53,478:INFO:Checking exceptions
2024-12-08 22:01:53,478:INFO:Importing libraries
2024-12-08 22:01:53,478:INFO:Copying training dataset
2024-12-08 22:01:53,480:INFO:Defining folds
2024-12-08 22:01:53,480:INFO:Declaring metric variables
2024-12-08 22:01:53,481:INFO:Importing untrained model
2024-12-08 22:01:53,482:INFO:Dummy Classifier Imported successfully
2024-12-08 22:01:53,485:INFO:Starting cross validation
2024-12-08 22:01:53,485:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:53,572:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,584:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,593:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,593:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,593:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,598:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,608:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,610:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,616:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,629:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-08 22:01:53,642:INFO:Calculating mean and std
2024-12-08 22:01:53,642:INFO:Creating metrics dataframe
2024-12-08 22:01:53,643:INFO:Uploading results into container
2024-12-08 22:01:53,644:INFO:Uploading model into container now
2024-12-08 22:01:53,644:INFO:_master_model_container: 14
2024-12-08 22:01:53,644:INFO:_display_container: 2
2024-12-08 22:01:53,644:INFO:DummyClassifier(constant=None, random_state=902, strategy='prior')
2024-12-08 22:01:53,644:INFO:create_model() successfully completed......................................
2024-12-08 22:01:53,687:INFO:SubProcess create_model() end ==================================
2024-12-08 22:01:53,687:INFO:Creating metrics dataframe
2024-12-08 22:01:53,694:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-12-08 22:01:53,698:INFO:Initializing create_model()
2024-12-08 22:01:53,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=902, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:53,698:INFO:Checking exceptions
2024-12-08 22:01:53,699:INFO:Importing libraries
2024-12-08 22:01:53,699:INFO:Copying training dataset
2024-12-08 22:01:53,700:INFO:Defining folds
2024-12-08 22:01:53,700:INFO:Declaring metric variables
2024-12-08 22:01:53,700:INFO:Importing untrained model
2024-12-08 22:01:53,700:INFO:Declaring custom model
2024-12-08 22:01:53,701:INFO:Logistic Regression Imported successfully
2024-12-08 22:01:53,701:INFO:Cross validation set to False
2024-12-08 22:01:53,701:INFO:Fitting Model
2024-12-08 22:01:53,731:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=902, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-08 22:01:53,731:INFO:create_model() successfully completed......................................
2024-12-08 22:01:53,776:INFO:Initializing create_model()
2024-12-08 22:01:53,776:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=902, solver='auto',
                tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:53,776:INFO:Checking exceptions
2024-12-08 22:01:53,777:INFO:Importing libraries
2024-12-08 22:01:53,777:INFO:Copying training dataset
2024-12-08 22:01:53,779:INFO:Defining folds
2024-12-08 22:01:53,779:INFO:Declaring metric variables
2024-12-08 22:01:53,779:INFO:Importing untrained model
2024-12-08 22:01:53,779:INFO:Declaring custom model
2024-12-08 22:01:53,779:INFO:Ridge Classifier Imported successfully
2024-12-08 22:01:53,780:INFO:Cross validation set to False
2024-12-08 22:01:53,780:INFO:Fitting Model
2024-12-08 22:01:53,806:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=902, solver='auto',
                tol=0.0001)
2024-12-08 22:01:53,807:INFO:create_model() successfully completed......................................
2024-12-08 22:01:53,850:INFO:Initializing create_model()
2024-12-08 22:01:53,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:53,850:INFO:Checking exceptions
2024-12-08 22:01:53,850:INFO:Importing libraries
2024-12-08 22:01:53,850:INFO:Copying training dataset
2024-12-08 22:01:53,852:INFO:Defining folds
2024-12-08 22:01:53,852:INFO:Declaring metric variables
2024-12-08 22:01:53,852:INFO:Importing untrained model
2024-12-08 22:01:53,852:INFO:Declaring custom model
2024-12-08 22:01:53,852:INFO:Linear Discriminant Analysis Imported successfully
2024-12-08 22:01:53,853:INFO:Cross validation set to False
2024-12-08 22:01:53,853:INFO:Fitting Model
2024-12-08 22:01:53,880:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-08 22:01:53,880:INFO:create_model() successfully completed......................................
2024-12-08 22:01:53,923:INFO:Initializing create_model()
2024-12-08 22:01:53,924:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=902, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:53,924:INFO:Checking exceptions
2024-12-08 22:01:53,924:INFO:Importing libraries
2024-12-08 22:01:53,925:INFO:Copying training dataset
2024-12-08 22:01:53,927:INFO:Defining folds
2024-12-08 22:01:53,927:INFO:Declaring metric variables
2024-12-08 22:01:53,927:INFO:Importing untrained model
2024-12-08 22:01:53,927:INFO:Declaring custom model
2024-12-08 22:01:53,928:INFO:Extra Trees Classifier Imported successfully
2024-12-08 22:01:53,928:INFO:Cross validation set to False
2024-12-08 22:01:53,928:INFO:Fitting Model
2024-12-08 22:01:54,008:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=902, verbose=0,
                     warm_start=False)
2024-12-08 22:01:54,008:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,052:INFO:Initializing create_model()
2024-12-08 22:01:54,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=902, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,052:INFO:Checking exceptions
2024-12-08 22:01:54,053:INFO:Importing libraries
2024-12-08 22:01:54,053:INFO:Copying training dataset
2024-12-08 22:01:54,055:INFO:Defining folds
2024-12-08 22:01:54,055:INFO:Declaring metric variables
2024-12-08 22:01:54,055:INFO:Importing untrained model
2024-12-08 22:01:54,055:INFO:Declaring custom model
2024-12-08 22:01:54,055:INFO:Gradient Boosting Classifier Imported successfully
2024-12-08 22:01:54,056:INFO:Cross validation set to False
2024-12-08 22:01:54,056:INFO:Fitting Model
2024-12-08 22:01:54,134:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=902, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-08 22:01:54,134:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,177:INFO:Initializing create_model()
2024-12-08 22:01:54,177:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,177:INFO:Checking exceptions
2024-12-08 22:01:54,178:INFO:Importing libraries
2024-12-08 22:01:54,178:INFO:Copying training dataset
2024-12-08 22:01:54,179:INFO:Defining folds
2024-12-08 22:01:54,179:INFO:Declaring metric variables
2024-12-08 22:01:54,179:INFO:Importing untrained model
2024-12-08 22:01:54,179:INFO:Declaring custom model
2024-12-08 22:01:54,180:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:01:54,180:INFO:Cross validation set to False
2024-12-08 22:01:54,180:INFO:Fitting Model
2024-12-08 22:01:54,285:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:01:54,285:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,329:INFO:Initializing create_model()
2024-12-08 22:01:54,329:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=902, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,329:INFO:Checking exceptions
2024-12-08 22:01:54,330:INFO:Importing libraries
2024-12-08 22:01:54,330:INFO:Copying training dataset
2024-12-08 22:01:54,332:INFO:Defining folds
2024-12-08 22:01:54,332:INFO:Declaring metric variables
2024-12-08 22:01:54,332:INFO:Importing untrained model
2024-12-08 22:01:54,332:INFO:Declaring custom model
2024-12-08 22:01:54,332:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-08 22:01:54,333:INFO:Cross validation set to False
2024-12-08 22:01:54,333:INFO:Fitting Model
2024-12-08 22:01:54,362:INFO:[LightGBM] [Info] Number of positive: 239, number of negative: 384
2024-12-08 22:01:54,363:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000343 seconds.
2024-12-08 22:01:54,363:INFO:You can set `force_row_wise=true` to remove the overhead.
2024-12-08 22:01:54,363:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2024-12-08 22:01:54,363:INFO:[LightGBM] [Info] Total Bins 101
2024-12-08 22:01:54,363:INFO:[LightGBM] [Info] Number of data points in the train set: 623, number of used features: 8
2024-12-08 22:01:54,363:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.383628 -> initscore=-0.474179
2024-12-08 22:01:54,363:INFO:[LightGBM] [Info] Start training from score -0.474179
2024-12-08 22:01:54,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,511:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,521:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,530:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,535:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,537:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,542:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,544:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,550:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,557:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,559:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,567:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,575:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-12-08 22:01:54,605:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=902, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-08 22:01:54,605:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,649:INFO:Initializing create_model()
2024-12-08 22:01:54,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=902), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,649:INFO:Checking exceptions
2024-12-08 22:01:54,650:INFO:Importing libraries
2024-12-08 22:01:54,650:INFO:Copying training dataset
2024-12-08 22:01:54,651:INFO:Defining folds
2024-12-08 22:01:54,651:INFO:Declaring metric variables
2024-12-08 22:01:54,651:INFO:Importing untrained model
2024-12-08 22:01:54,651:INFO:Declaring custom model
2024-12-08 22:01:54,651:INFO:Ada Boost Classifier Imported successfully
2024-12-08 22:01:54,652:INFO:Cross validation set to False
2024-12-08 22:01:54,652:INFO:Fitting Model
2024-12-08 22:01:54,678:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-08 22:01:54,710:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=902)
2024-12-08 22:01:54,710:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,753:INFO:Initializing create_model()
2024-12-08 22:01:54,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,753:INFO:Checking exceptions
2024-12-08 22:01:54,754:INFO:Importing libraries
2024-12-08 22:01:54,754:INFO:Copying training dataset
2024-12-08 22:01:54,755:INFO:Defining folds
2024-12-08 22:01:54,755:INFO:Declaring metric variables
2024-12-08 22:01:54,755:INFO:Importing untrained model
2024-12-08 22:01:54,755:INFO:Declaring custom model
2024-12-08 22:01:54,756:INFO:K Neighbors Classifier Imported successfully
2024-12-08 22:01:54,756:INFO:Cross validation set to False
2024-12-08 22:01:54,756:INFO:Fitting Model
2024-12-08 22:01:54,782:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-08 22:01:54,782:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,826:INFO:Initializing create_model()
2024-12-08 22:01:54,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=902, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,826:INFO:Checking exceptions
2024-12-08 22:01:54,827:INFO:Importing libraries
2024-12-08 22:01:54,827:INFO:Copying training dataset
2024-12-08 22:01:54,829:INFO:Defining folds
2024-12-08 22:01:54,829:INFO:Declaring metric variables
2024-12-08 22:01:54,829:INFO:Importing untrained model
2024-12-08 22:01:54,829:INFO:Declaring custom model
2024-12-08 22:01:54,829:INFO:SVM - Linear Kernel Imported successfully
2024-12-08 22:01:54,830:INFO:Cross validation set to False
2024-12-08 22:01:54,830:INFO:Fitting Model
2024-12-08 22:01:54,857:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=902, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-08 22:01:54,857:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,900:INFO:Initializing create_model()
2024-12-08 22:01:54,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,900:INFO:Checking exceptions
2024-12-08 22:01:54,901:INFO:Importing libraries
2024-12-08 22:01:54,901:INFO:Copying training dataset
2024-12-08 22:01:54,902:INFO:Defining folds
2024-12-08 22:01:54,902:INFO:Declaring metric variables
2024-12-08 22:01:54,903:INFO:Importing untrained model
2024-12-08 22:01:54,903:INFO:Declaring custom model
2024-12-08 22:01:54,903:INFO:Naive Bayes Imported successfully
2024-12-08 22:01:54,903:INFO:Cross validation set to False
2024-12-08 22:01:54,903:INFO:Fitting Model
2024-12-08 22:01:54,929:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-08 22:01:54,929:INFO:create_model() successfully completed......................................
2024-12-08 22:01:54,973:INFO:Initializing create_model()
2024-12-08 22:01:54,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:54,973:INFO:Checking exceptions
2024-12-08 22:01:54,973:INFO:Importing libraries
2024-12-08 22:01:54,973:INFO:Copying training dataset
2024-12-08 22:01:54,975:INFO:Defining folds
2024-12-08 22:01:54,975:INFO:Declaring metric variables
2024-12-08 22:01:54,975:INFO:Importing untrained model
2024-12-08 22:01:54,975:INFO:Declaring custom model
2024-12-08 22:01:54,975:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-08 22:01:54,976:INFO:Cross validation set to False
2024-12-08 22:01:54,976:INFO:Fitting Model
2024-12-08 22:01:55,003:WARNING:/Users/young/Documents/IoT-data-analysis-and-application/HW4/HW4_venv/lib/python3.10/site-packages/sklearn/discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2024-12-08 22:01:55,003:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-08 22:01:55,003:INFO:create_model() successfully completed......................................
2024-12-08 22:01:55,046:INFO:Initializing create_model()
2024-12-08 22:01:55,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=902, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:55,047:INFO:Checking exceptions
2024-12-08 22:01:55,047:INFO:Importing libraries
2024-12-08 22:01:55,047:INFO:Copying training dataset
2024-12-08 22:01:55,049:INFO:Defining folds
2024-12-08 22:01:55,049:INFO:Declaring metric variables
2024-12-08 22:01:55,049:INFO:Importing untrained model
2024-12-08 22:01:55,049:INFO:Declaring custom model
2024-12-08 22:01:55,049:INFO:Decision Tree Classifier Imported successfully
2024-12-08 22:01:55,050:INFO:Cross validation set to False
2024-12-08 22:01:55,050:INFO:Fitting Model
2024-12-08 22:01:55,076:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=902, splitter='best')
2024-12-08 22:01:55,076:INFO:create_model() successfully completed......................................
2024-12-08 22:01:55,120:INFO:Initializing create_model()
2024-12-08 22:01:55,120:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=DummyClassifier(constant=None, random_state=902, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:55,120:INFO:Checking exceptions
2024-12-08 22:01:55,121:INFO:Importing libraries
2024-12-08 22:01:55,121:INFO:Copying training dataset
2024-12-08 22:01:55,122:INFO:Defining folds
2024-12-08 22:01:55,122:INFO:Declaring metric variables
2024-12-08 22:01:55,122:INFO:Importing untrained model
2024-12-08 22:01:55,122:INFO:Declaring custom model
2024-12-08 22:01:55,122:INFO:Dummy Classifier Imported successfully
2024-12-08 22:01:55,123:INFO:Cross validation set to False
2024-12-08 22:01:55,123:INFO:Fitting Model
2024-12-08 22:01:55,150:INFO:DummyClassifier(constant=None, random_state=902, strategy='prior')
2024-12-08 22:01:55,150:INFO:create_model() successfully completed......................................
2024-12-08 22:01:55,199:INFO:_master_model_container: 14
2024-12-08 22:01:55,199:INFO:_display_container: 2
2024-12-08 22:01:55,200:INFO:[LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=902, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=902, solver='auto',
                tol=0.0001), LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=902, verbose=0,
                     warm_start=False), GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=902, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=902, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=902), KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=902, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), GaussianNB(priors=None, var_smoothing=1e-09), QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=902, splitter='best'), DummyClassifier(constant=None, random_state=902, strategy='prior')]
2024-12-08 22:01:55,200:INFO:compare_models() successfully completed......................................
2024-12-08 22:01:58,792:INFO:Initializing create_model()
2024-12-08 22:01:58,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:01:58,792:INFO:Checking exceptions
2024-12-08 22:01:58,814:INFO:Importing libraries
2024-12-08 22:01:58,814:INFO:Copying training dataset
2024-12-08 22:01:58,820:INFO:Defining folds
2024-12-08 22:01:58,821:INFO:Declaring metric variables
2024-12-08 22:01:58,824:INFO:Importing untrained model
2024-12-08 22:01:58,831:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:01:58,839:INFO:Starting cross validation
2024-12-08 22:01:58,841:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:01:59,271:INFO:Calculating mean and std
2024-12-08 22:01:59,271:INFO:Creating metrics dataframe
2024-12-08 22:01:59,274:INFO:Finalizing model
2024-12-08 22:01:59,382:INFO:Uploading results into container
2024-12-08 22:01:59,382:INFO:Uploading model into container now
2024-12-08 22:01:59,387:INFO:_master_model_container: 15
2024-12-08 22:01:59,387:INFO:_display_container: 3
2024-12-08 22:01:59,387:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:01:59,387:INFO:create_model() successfully completed......................................
2024-12-08 22:02:05,063:INFO:Initializing create_model()
2024-12-08 22:02:05,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 397, 'max_depth': 14, 'min_samples_split': 6, 'min_samples_leaf': 13, 'max_features': 'sqrt'})
2024-12-08 22:02:05,064:INFO:Checking exceptions
2024-12-08 22:02:05,080:INFO:Importing libraries
2024-12-08 22:02:05,080:INFO:Copying training dataset
2024-12-08 22:02:05,087:INFO:Defining folds
2024-12-08 22:02:05,088:INFO:Declaring metric variables
2024-12-08 22:02:05,093:INFO:Importing untrained model
2024-12-08 22:02:05,098:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:05,105:INFO:Starting cross validation
2024-12-08 22:02:05,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:06,160:INFO:Calculating mean and std
2024-12-08 22:02:06,161:INFO:Creating metrics dataframe
2024-12-08 22:02:06,164:INFO:Finalizing model
2024-12-08 22:02:06,442:INFO:Uploading results into container
2024-12-08 22:02:06,442:INFO:Uploading model into container now
2024-12-08 22:02:06,446:INFO:_master_model_container: 16
2024-12-08 22:02:06,446:INFO:_display_container: 4
2024-12-08 22:02:06,446:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:06,446:INFO:create_model() successfully completed......................................
2024-12-08 22:02:06,498:INFO:Initializing tune_model()
2024-12-08 22:02:06,498:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>)
2024-12-08 22:02:06,498:INFO:Checking exceptions
2024-12-08 22:02:06,506:INFO:Copying training dataset
2024-12-08 22:02:06,507:INFO:Checking base model
2024-12-08 22:02:06,507:INFO:Base model : Random Forest Classifier
2024-12-08 22:02:06,509:INFO:Declaring metric variables
2024-12-08 22:02:06,511:INFO:Defining Hyperparameters
2024-12-08 22:02:06,569:INFO:Tuning with n_jobs=-1
2024-12-08 22:02:06,570:INFO:Initializing RandomizedSearchCV
2024-12-08 22:02:09,647:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-12-08 22:02:09,648:INFO:Hyperparameter search completed
2024-12-08 22:02:09,648:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:09,648:INFO:Initializing create_model()
2024-12-08 22:02:09,648:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x1072f3c70>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.01, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2024-12-08 22:02:09,648:INFO:Checking exceptions
2024-12-08 22:02:09,648:INFO:Importing libraries
2024-12-08 22:02:09,648:INFO:Copying training dataset
2024-12-08 22:02:09,651:INFO:Defining folds
2024-12-08 22:02:09,651:INFO:Declaring metric variables
2024-12-08 22:02:09,653:INFO:Importing untrained model
2024-12-08 22:02:09,653:INFO:Declaring custom model
2024-12-08 22:02:09,655:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:09,658:INFO:Starting cross validation
2024-12-08 22:02:09,658:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:10,285:INFO:Calculating mean and std
2024-12-08 22:02:10,285:INFO:Creating metrics dataframe
2024-12-08 22:02:10,288:INFO:Finalizing model
2024-12-08 22:02:10,456:INFO:Uploading results into container
2024-12-08 22:02:10,456:INFO:Uploading model into container now
2024-12-08 22:02:10,457:INFO:_master_model_container: 17
2024-12-08 22:02:10,457:INFO:_display_container: 5
2024-12-08 22:02:10,457:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:10,457:INFO:create_model() successfully completed......................................
2024-12-08 22:02:10,505:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:10,506:INFO:choose_better activated
2024-12-08 22:02:10,507:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:10,507:INFO:Initializing create_model()
2024-12-08 22:02:10,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:02:10,508:INFO:Checking exceptions
2024-12-08 22:02:10,508:INFO:Importing libraries
2024-12-08 22:02:10,508:INFO:Copying training dataset
2024-12-08 22:02:10,510:INFO:Defining folds
2024-12-08 22:02:10,510:INFO:Declaring metric variables
2024-12-08 22:02:10,510:INFO:Importing untrained model
2024-12-08 22:02:10,510:INFO:Declaring custom model
2024-12-08 22:02:10,511:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:10,511:INFO:Starting cross validation
2024-12-08 22:02:10,512:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:11,528:INFO:Calculating mean and std
2024-12-08 22:02:11,528:INFO:Creating metrics dataframe
2024-12-08 22:02:11,529:INFO:Finalizing model
2024-12-08 22:02:11,808:INFO:Uploading results into container
2024-12-08 22:02:11,808:INFO:Uploading model into container now
2024-12-08 22:02:11,809:INFO:_master_model_container: 18
2024-12-08 22:02:11,809:INFO:_display_container: 6
2024-12-08 22:02:11,809:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:11,809:INFO:create_model() successfully completed......................................
2024-12-08 22:02:11,851:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:11,852:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7914
2024-12-08 22:02:11,852:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7881
2024-12-08 22:02:11,852:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) is best model
2024-12-08 22:02:11,852:INFO:choose_better completed
2024-12-08 22:02:11,852:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-08 22:02:11,857:INFO:_master_model_container: 18
2024-12-08 22:02:11,857:INFO:_display_container: 5
2024-12-08 22:02:11,857:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=14, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=13,
                       min_samples_split=6, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=397, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:11,857:INFO:tune_model() successfully completed......................................
2024-12-08 22:02:11,909:INFO:Initializing create_model()
2024-12-08 22:02:11,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 621, 'max_depth': 17, 'min_samples_split': 15, 'min_samples_leaf': 16, 'max_features': 'sqrt'})
2024-12-08 22:02:11,909:INFO:Checking exceptions
2024-12-08 22:02:11,918:INFO:Importing libraries
2024-12-08 22:02:11,918:INFO:Copying training dataset
2024-12-08 22:02:11,923:INFO:Defining folds
2024-12-08 22:02:11,923:INFO:Declaring metric variables
2024-12-08 22:02:11,926:INFO:Importing untrained model
2024-12-08 22:02:11,929:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:11,934:INFO:Starting cross validation
2024-12-08 22:02:11,936:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:13,471:INFO:Calculating mean and std
2024-12-08 22:02:13,471:INFO:Creating metrics dataframe
2024-12-08 22:02:13,475:INFO:Finalizing model
2024-12-08 22:02:13,896:INFO:Uploading results into container
2024-12-08 22:02:13,896:INFO:Uploading model into container now
2024-12-08 22:02:13,901:INFO:_master_model_container: 19
2024-12-08 22:02:13,901:INFO:_display_container: 6
2024-12-08 22:02:13,901:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:13,901:INFO:create_model() successfully completed......................................
2024-12-08 22:02:13,954:INFO:Initializing tune_model()
2024-12-08 22:02:13,954:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>)
2024-12-08 22:02:13,954:INFO:Checking exceptions
2024-12-08 22:02:13,962:INFO:Copying training dataset
2024-12-08 22:02:13,964:INFO:Checking base model
2024-12-08 22:02:13,964:INFO:Base model : Random Forest Classifier
2024-12-08 22:02:13,966:INFO:Declaring metric variables
2024-12-08 22:02:13,968:INFO:Defining Hyperparameters
2024-12-08 22:02:14,019:INFO:Tuning with n_jobs=-1
2024-12-08 22:02:14,019:INFO:Initializing RandomizedSearchCV
2024-12-08 22:02:17,307:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-12-08 22:02:17,307:INFO:Hyperparameter search completed
2024-12-08 22:02:17,308:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:17,308:INFO:Initializing create_model()
2024-12-08 22:02:17,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f00abc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.01, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2024-12-08 22:02:17,308:INFO:Checking exceptions
2024-12-08 22:02:17,308:INFO:Importing libraries
2024-12-08 22:02:17,308:INFO:Copying training dataset
2024-12-08 22:02:17,310:INFO:Defining folds
2024-12-08 22:02:17,310:INFO:Declaring metric variables
2024-12-08 22:02:17,312:INFO:Importing untrained model
2024-12-08 22:02:17,312:INFO:Declaring custom model
2024-12-08 22:02:17,314:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:17,318:INFO:Starting cross validation
2024-12-08 22:02:17,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:17,959:INFO:Calculating mean and std
2024-12-08 22:02:17,960:INFO:Creating metrics dataframe
2024-12-08 22:02:17,963:INFO:Finalizing model
2024-12-08 22:02:18,133:INFO:Uploading results into container
2024-12-08 22:02:18,134:INFO:Uploading model into container now
2024-12-08 22:02:18,134:INFO:_master_model_container: 20
2024-12-08 22:02:18,134:INFO:_display_container: 7
2024-12-08 22:02:18,134:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:18,135:INFO:create_model() successfully completed......................................
2024-12-08 22:02:18,188:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:18,188:INFO:choose_better activated
2024-12-08 22:02:18,189:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:18,190:INFO:Initializing create_model()
2024-12-08 22:02:18,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:02:18,190:INFO:Checking exceptions
2024-12-08 22:02:18,191:INFO:Importing libraries
2024-12-08 22:02:18,191:INFO:Copying training dataset
2024-12-08 22:02:18,192:INFO:Defining folds
2024-12-08 22:02:18,192:INFO:Declaring metric variables
2024-12-08 22:02:18,192:INFO:Importing untrained model
2024-12-08 22:02:18,192:INFO:Declaring custom model
2024-12-08 22:02:18,193:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:18,193:INFO:Starting cross validation
2024-12-08 22:02:18,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:19,666:INFO:Calculating mean and std
2024-12-08 22:02:19,666:INFO:Creating metrics dataframe
2024-12-08 22:02:19,667:INFO:Finalizing model
2024-12-08 22:02:20,077:INFO:Uploading results into container
2024-12-08 22:02:20,077:INFO:Uploading model into container now
2024-12-08 22:02:20,077:INFO:_master_model_container: 21
2024-12-08 22:02:20,077:INFO:_display_container: 8
2024-12-08 22:02:20,078:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:20,078:INFO:create_model() successfully completed......................................
2024-12-08 22:02:20,124:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:20,124:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7881
2024-12-08 22:02:20,124:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7881
2024-12-08 22:02:20,124:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) is best model
2024-12-08 22:02:20,124:INFO:choose_better completed
2024-12-08 22:02:20,124:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-08 22:02:20,129:INFO:_master_model_container: 21
2024-12-08 22:02:20,130:INFO:_display_container: 7
2024-12-08 22:02:20,130:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=17, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=16,
                       min_samples_split=15, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=621, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:20,130:INFO:tune_model() successfully completed......................................
2024-12-08 22:02:20,185:INFO:Initializing create_model()
2024-12-08 22:02:20,185:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 891, 'max_depth': 16, 'min_samples_split': 19, 'min_samples_leaf': 12, 'max_features': 'sqrt'})
2024-12-08 22:02:20,185:INFO:Checking exceptions
2024-12-08 22:02:20,192:INFO:Importing libraries
2024-12-08 22:02:20,192:INFO:Copying training dataset
2024-12-08 22:02:20,195:INFO:Defining folds
2024-12-08 22:02:20,195:INFO:Declaring metric variables
2024-12-08 22:02:20,197:INFO:Importing untrained model
2024-12-08 22:02:20,199:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:20,203:INFO:Starting cross validation
2024-12-08 22:02:20,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:22,529:INFO:Calculating mean and std
2024-12-08 22:02:22,530:INFO:Creating metrics dataframe
2024-12-08 22:02:22,534:INFO:Finalizing model
2024-12-08 22:02:23,155:INFO:Uploading results into container
2024-12-08 22:02:23,156:INFO:Uploading model into container now
2024-12-08 22:02:23,160:INFO:_master_model_container: 22
2024-12-08 22:02:23,160:INFO:_display_container: 8
2024-12-08 22:02:23,160:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:23,160:INFO:create_model() successfully completed......................................
2024-12-08 22:02:23,212:INFO:Initializing tune_model()
2024-12-08 22:02:23,212:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>)
2024-12-08 22:02:23,212:INFO:Checking exceptions
2024-12-08 22:02:23,219:INFO:Copying training dataset
2024-12-08 22:02:23,221:INFO:Checking base model
2024-12-08 22:02:23,221:INFO:Base model : Random Forest Classifier
2024-12-08 22:02:23,223:INFO:Declaring metric variables
2024-12-08 22:02:23,225:INFO:Defining Hyperparameters
2024-12-08 22:02:23,278:INFO:Tuning with n_jobs=-1
2024-12-08 22:02:23,278:INFO:Initializing RandomizedSearchCV
2024-12-08 22:02:26,526:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-12-08 22:02:26,529:INFO:Hyperparameter search completed
2024-12-08 22:02:26,530:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:26,531:INFO:Initializing create_model()
2024-12-08 22:02:26,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f00abc0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.01, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2024-12-08 22:02:26,531:INFO:Checking exceptions
2024-12-08 22:02:26,531:INFO:Importing libraries
2024-12-08 22:02:26,532:INFO:Copying training dataset
2024-12-08 22:02:26,537:INFO:Defining folds
2024-12-08 22:02:26,537:INFO:Declaring metric variables
2024-12-08 22:02:26,541:INFO:Importing untrained model
2024-12-08 22:02:26,541:INFO:Declaring custom model
2024-12-08 22:02:26,545:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:26,549:INFO:Starting cross validation
2024-12-08 22:02:26,551:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:27,216:INFO:Calculating mean and std
2024-12-08 22:02:27,217:INFO:Creating metrics dataframe
2024-12-08 22:02:27,219:INFO:Finalizing model
2024-12-08 22:02:27,392:INFO:Uploading results into container
2024-12-08 22:02:27,392:INFO:Uploading model into container now
2024-12-08 22:02:27,393:INFO:_master_model_container: 23
2024-12-08 22:02:27,393:INFO:_display_container: 9
2024-12-08 22:02:27,393:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:27,393:INFO:create_model() successfully completed......................................
2024-12-08 22:02:27,456:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:27,456:INFO:choose_better activated
2024-12-08 22:02:27,458:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:27,458:INFO:Initializing create_model()
2024-12-08 22:02:27,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:02:27,458:INFO:Checking exceptions
2024-12-08 22:02:27,459:INFO:Importing libraries
2024-12-08 22:02:27,459:INFO:Copying training dataset
2024-12-08 22:02:27,460:INFO:Defining folds
2024-12-08 22:02:27,460:INFO:Declaring metric variables
2024-12-08 22:02:27,461:INFO:Importing untrained model
2024-12-08 22:02:27,461:INFO:Declaring custom model
2024-12-08 22:02:27,461:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:27,461:INFO:Starting cross validation
2024-12-08 22:02:27,462:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:29,637:INFO:Calculating mean and std
2024-12-08 22:02:29,638:INFO:Creating metrics dataframe
2024-12-08 22:02:29,639:INFO:Finalizing model
2024-12-08 22:02:30,222:INFO:Uploading results into container
2024-12-08 22:02:30,223:INFO:Uploading model into container now
2024-12-08 22:02:30,223:INFO:_master_model_container: 24
2024-12-08 22:02:30,223:INFO:_display_container: 10
2024-12-08 22:02:30,223:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:30,223:INFO:create_model() successfully completed......................................
2024-12-08 22:02:30,267:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:30,267:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7946
2024-12-08 22:02:30,268:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7881
2024-12-08 22:02:30,268:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) is best model
2024-12-08 22:02:30,268:INFO:choose_better completed
2024-12-08 22:02:30,268:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-08 22:02:30,272:INFO:_master_model_container: 24
2024-12-08 22:02:30,272:INFO:_display_container: 9
2024-12-08 22:02:30,273:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=16, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=19, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=891, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:30,273:INFO:tune_model() successfully completed......................................
2024-12-08 22:02:30,325:INFO:Initializing create_model()
2024-12-08 22:02:30,325:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 862, 'max_depth': 18, 'min_samples_split': 13, 'min_samples_leaf': 4, 'max_features': 'log2'})
2024-12-08 22:02:30,325:INFO:Checking exceptions
2024-12-08 22:02:30,332:INFO:Importing libraries
2024-12-08 22:02:30,333:INFO:Copying training dataset
2024-12-08 22:02:30,335:INFO:Defining folds
2024-12-08 22:02:30,335:INFO:Declaring metric variables
2024-12-08 22:02:30,337:INFO:Importing untrained model
2024-12-08 22:02:30,340:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:30,344:INFO:Starting cross validation
2024-12-08 22:02:30,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:32,630:INFO:Calculating mean and std
2024-12-08 22:02:32,632:INFO:Creating metrics dataframe
2024-12-08 22:02:32,637:INFO:Finalizing model
2024-12-08 22:02:33,222:INFO:Uploading results into container
2024-12-08 22:02:33,223:INFO:Uploading model into container now
2024-12-08 22:02:33,231:INFO:_master_model_container: 25
2024-12-08 22:02:33,232:INFO:_display_container: 10
2024-12-08 22:02:33,232:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:33,232:INFO:create_model() successfully completed......................................
2024-12-08 22:02:33,318:INFO:Initializing tune_model()
2024-12-08 22:02:33,318:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>)
2024-12-08 22:02:33,318:INFO:Checking exceptions
2024-12-08 22:02:33,326:INFO:Copying training dataset
2024-12-08 22:02:33,328:INFO:Checking base model
2024-12-08 22:02:33,328:INFO:Base model : Random Forest Classifier
2024-12-08 22:02:33,330:INFO:Declaring metric variables
2024-12-08 22:02:33,332:INFO:Defining Hyperparameters
2024-12-08 22:02:33,386:INFO:Tuning with n_jobs=-1
2024-12-08 22:02:33,386:INFO:Initializing RandomizedSearchCV
2024-12-08 22:02:36,677:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-12-08 22:02:36,678:INFO:Hyperparameter search completed
2024-12-08 22:02:36,678:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:36,679:INFO:Initializing create_model()
2024-12-08 22:02:36,679:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f0f42b0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.01, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2024-12-08 22:02:36,679:INFO:Checking exceptions
2024-12-08 22:02:36,679:INFO:Importing libraries
2024-12-08 22:02:36,679:INFO:Copying training dataset
2024-12-08 22:02:36,683:INFO:Defining folds
2024-12-08 22:02:36,683:INFO:Declaring metric variables
2024-12-08 22:02:36,686:INFO:Importing untrained model
2024-12-08 22:02:36,686:INFO:Declaring custom model
2024-12-08 22:02:36,689:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:36,696:INFO:Starting cross validation
2024-12-08 22:02:36,698:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:37,865:INFO:Calculating mean and std
2024-12-08 22:02:37,866:INFO:Creating metrics dataframe
2024-12-08 22:02:37,870:INFO:Finalizing model
2024-12-08 22:02:38,042:INFO:Uploading results into container
2024-12-08 22:02:38,043:INFO:Uploading model into container now
2024-12-08 22:02:38,043:INFO:_master_model_container: 26
2024-12-08 22:02:38,043:INFO:_display_container: 11
2024-12-08 22:02:38,043:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:38,043:INFO:create_model() successfully completed......................................
2024-12-08 22:02:38,121:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:38,121:INFO:choose_better activated
2024-12-08 22:02:38,122:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:38,123:INFO:Initializing create_model()
2024-12-08 22:02:38,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:02:38,123:INFO:Checking exceptions
2024-12-08 22:02:38,124:INFO:Importing libraries
2024-12-08 22:02:38,124:INFO:Copying training dataset
2024-12-08 22:02:38,125:INFO:Defining folds
2024-12-08 22:02:38,125:INFO:Declaring metric variables
2024-12-08 22:02:38,125:INFO:Importing untrained model
2024-12-08 22:02:38,125:INFO:Declaring custom model
2024-12-08 22:02:38,126:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:38,126:INFO:Starting cross validation
2024-12-08 22:02:38,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:40,189:INFO:Calculating mean and std
2024-12-08 22:02:40,189:INFO:Creating metrics dataframe
2024-12-08 22:02:40,190:INFO:Finalizing model
2024-12-08 22:02:40,758:INFO:Uploading results into container
2024-12-08 22:02:40,759:INFO:Uploading model into container now
2024-12-08 22:02:40,759:INFO:_master_model_container: 27
2024-12-08 22:02:40,759:INFO:_display_container: 12
2024-12-08 22:02:40,759:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:40,759:INFO:create_model() successfully completed......................................
2024-12-08 22:02:40,803:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:40,803:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7898
2024-12-08 22:02:40,803:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7881
2024-12-08 22:02:40,804:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) is best model
2024-12-08 22:02:40,804:INFO:choose_better completed
2024-12-08 22:02:40,804:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-08 22:02:40,808:INFO:_master_model_container: 27
2024-12-08 22:02:40,808:INFO:_display_container: 11
2024-12-08 22:02:40,808:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=18, max_features='log2',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=4,
                       min_samples_split=13, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=862, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:40,809:INFO:tune_model() successfully completed......................................
2024-12-08 22:02:40,861:INFO:Initializing create_model()
2024-12-08 22:02:40,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 176, 'max_depth': 10, 'min_samples_split': 16, 'min_samples_leaf': 12, 'max_features': 'sqrt'})
2024-12-08 22:02:40,861:INFO:Checking exceptions
2024-12-08 22:02:40,868:INFO:Importing libraries
2024-12-08 22:02:40,868:INFO:Copying training dataset
2024-12-08 22:02:40,871:INFO:Defining folds
2024-12-08 22:02:40,871:INFO:Declaring metric variables
2024-12-08 22:02:40,873:INFO:Importing untrained model
2024-12-08 22:02:40,875:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:40,880:INFO:Starting cross validation
2024-12-08 22:02:40,881:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:41,458:INFO:Calculating mean and std
2024-12-08 22:02:41,459:INFO:Creating metrics dataframe
2024-12-08 22:02:41,461:INFO:Finalizing model
2024-12-08 22:02:41,606:INFO:Uploading results into container
2024-12-08 22:02:41,607:INFO:Uploading model into container now
2024-12-08 22:02:41,611:INFO:_master_model_container: 28
2024-12-08 22:02:41,611:INFO:_display_container: 12
2024-12-08 22:02:41,611:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:41,611:INFO:create_model() successfully completed......................................
2024-12-08 22:02:41,661:INFO:Initializing tune_model()
2024-12-08 22:02:41,662:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>)
2024-12-08 22:02:41,662:INFO:Checking exceptions
2024-12-08 22:02:41,669:INFO:Copying training dataset
2024-12-08 22:02:41,671:INFO:Checking base model
2024-12-08 22:02:41,671:INFO:Base model : Random Forest Classifier
2024-12-08 22:02:41,673:INFO:Declaring metric variables
2024-12-08 22:02:41,675:INFO:Defining Hyperparameters
2024-12-08 22:02:41,730:INFO:Tuning with n_jobs=-1
2024-12-08 22:02:41,730:INFO:Initializing RandomizedSearchCV
2024-12-08 22:02:44,939:INFO:best_params: {'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2024-12-08 22:02:44,939:INFO:Hyperparameter search completed
2024-12-08 22:02:44,940:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:44,940:INFO:Initializing create_model()
2024-12-08 22:02:44,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x17f0ffa00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.01, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2024-12-08 22:02:44,940:INFO:Checking exceptions
2024-12-08 22:02:44,940:INFO:Importing libraries
2024-12-08 22:02:44,940:INFO:Copying training dataset
2024-12-08 22:02:44,942:INFO:Defining folds
2024-12-08 22:02:44,942:INFO:Declaring metric variables
2024-12-08 22:02:44,944:INFO:Importing untrained model
2024-12-08 22:02:44,944:INFO:Declaring custom model
2024-12-08 22:02:44,946:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:44,949:INFO:Starting cross validation
2024-12-08 22:02:44,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:45,604:INFO:Calculating mean and std
2024-12-08 22:02:45,605:INFO:Creating metrics dataframe
2024-12-08 22:02:45,607:INFO:Finalizing model
2024-12-08 22:02:45,773:INFO:Uploading results into container
2024-12-08 22:02:45,774:INFO:Uploading model into container now
2024-12-08 22:02:45,774:INFO:_master_model_container: 29
2024-12-08 22:02:45,774:INFO:_display_container: 13
2024-12-08 22:02:45,774:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:45,775:INFO:create_model() successfully completed......................................
2024-12-08 22:02:45,821:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:45,821:INFO:choose_better activated
2024-12-08 22:02:45,822:INFO:SubProcess create_model() called ==================================
2024-12-08 22:02:45,823:INFO:Initializing create_model()
2024-12-08 22:02:45,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-08 22:02:45,823:INFO:Checking exceptions
2024-12-08 22:02:45,824:INFO:Importing libraries
2024-12-08 22:02:45,824:INFO:Copying training dataset
2024-12-08 22:02:45,825:INFO:Defining folds
2024-12-08 22:02:45,825:INFO:Declaring metric variables
2024-12-08 22:02:45,825:INFO:Importing untrained model
2024-12-08 22:02:45,825:INFO:Declaring custom model
2024-12-08 22:02:45,826:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:45,826:INFO:Starting cross validation
2024-12-08 22:02:45,826:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-08 22:02:46,369:INFO:Calculating mean and std
2024-12-08 22:02:46,370:INFO:Creating metrics dataframe
2024-12-08 22:02:46,371:INFO:Finalizing model
2024-12-08 22:02:46,509:INFO:Uploading results into container
2024-12-08 22:02:46,510:INFO:Uploading model into container now
2024-12-08 22:02:46,510:INFO:_master_model_container: 30
2024-12-08 22:02:46,510:INFO:_display_container: 14
2024-12-08 22:02:46,510:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:46,510:INFO:create_model() successfully completed......................................
2024-12-08 22:02:46,553:INFO:SubProcess create_model() end ==================================
2024-12-08 22:02:46,554:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7914
2024-12-08 22:02:46,554:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.01, min_samples_leaf=3,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=260, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) result for Accuracy is 0.7881
2024-12-08 22:02:46,554:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False) is best model
2024-12-08 22:02:46,554:INFO:choose_better completed
2024-12-08 22:02:46,554:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-12-08 22:02:46,559:INFO:_master_model_container: 30
2024-12-08 22:02:46,559:INFO:_display_container: 13
2024-12-08 22:02:46,559:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=10, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=12,
                       min_samples_split=16, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=176, n_jobs=-1,
                       oob_score=False, random_state=902, verbose=0,
                       warm_start=False)
2024-12-08 22:02:46,559:INFO:tune_model() successfully completed......................................
2024-12-08 22:02:46,618:INFO:Initializing create_model()
2024-12-08 22:02:46,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x174bf4ca0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 437, 'max_depth': 4, 'min_samples_split': 18, 'min_samples_leaf': 17, 'max_features': 'auto'})
2024-12-08 22:02:46,619:INFO:Checking exceptions
2024-12-08 22:02:46,626:INFO:Importing libraries
2024-12-08 22:02:46,626:INFO:Copying training dataset
2024-12-08 22:02:46,629:INFO:Defining folds
2024-12-08 22:02:46,630:INFO:Declaring metric variables
2024-12-08 22:02:46,631:INFO:Importing untrained model
2024-12-08 22:02:46,633:INFO:Random Forest Classifier Imported successfully
2024-12-08 22:02:46,637:INFO:Starting cross validation
2024-12-08 22:02:46,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
